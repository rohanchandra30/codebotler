[{"program": "\n# good: will find the backpack, but inefficient \nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\n                \nfor room in all_rooms:\n    if (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "good: will find the backpack, but inefficient "}, {"program": "\n# good\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\n            break\n\nif not found_backpack:                \n    for room in all_rooms:\n        if (\"office\" in room):\n                go_to(room)\n            if is_in_room(\"black backpack\"):\n                while True:\n                    while not is_in_room(\"person\"):\n                        sleep(1)\n                    answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                    if answer == \"yes\":\n                        found_backpack = True\n                        break\n                break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "good"}, {"program": "\n# good\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\n            break\n\nif not found_backpack:                \n    for room in all_rooms:\n        if (\"office\" in room):\n                go_to(room)\n            if is_in_room(\"black backpack\"):\n                while True:\n                    while not is_in_room(\"person\"):\n                        sleep(1)\n                    answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                    if answer == \"yes\":\n                        found_backpack = True\n                        break\n                break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "good"}, {"program": "\n# bad: Only go to confrence rooms and office rooms\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    go_to(room)\n    if is_in_room(\"black backpack\"):\n        while True:\n            while not is_in_room(\"person\"):\n                sleep(1)\n            answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n            if answer == \"yes\":\n                found_backpack = True\n                break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "bad: Only go to confrence rooms and office rooms"}, {"program": "\n# bad: All confrence rooms must be visited before all office rooms\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"office\" in room):\n        go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\n                \nfor room in all_rooms:\n    if (\"confrence\" in room):\n        go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "bad: All confrence rooms must be visited before all office rooms"}, {"program": "\n# bad: All the confrence rooms must be visited before visiting any offices\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room) | (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n\n", "description": "bad: All the confrence rooms must be visited before visiting any offices"}, {"program": "\n# bad: All offices must be visited unless backpack is found\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n        go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "bad: All offices must be visited unless backpack is found"}, {"program": "\n# bad: All confrence rooms must be visited unless backpack is found\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "bad: All confrence rooms must be visited unless backpack is found"}, {"program": "\n# bad: All confrence rooms and offices must be visited unless backpack is found\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nif is_in_room(\"black backpack\"):\n    while True:\n        while not is_in_room(\"person\"):\n            sleep(1)\n        answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n            if answer == \"yes\":\n                found_backpack = True\n                break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "bad: All confrence rooms and offices must be visited unless backpack is found"}, {"program": "\n# bad: Only find the black backpack\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\n                \nfor room in all_rooms:\n    if (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "bad: Only find the black backpack"}, {"program": "\n# bad: Must find backpack, not any other object\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"stapler\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\n                \nfor room in all_rooms:\n    if (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"stapler\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "bad: Must find backpack, not any other object"}, {"program": "\n# bad: Only ask if the person is in the room\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n            if answer == \"yes\":\n                found_backpack = True\n                break\n                \nfor room in all_rooms:\n    if (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n            if answer == \"yes\":\n                found_backpack = True\n                break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "bad: Only ask if the person is in the room"}, {"program": "\n# bad: comes back without asking the person\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            found_backpack = True\n            break\n                \nfor room in all_rooms:\n    if (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            found_backpack = True\n            break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n\n", "description": "bad: Comes back without asking the person"}, {"program": "\n# bad: Must return to the start location\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\n                \nfor room in all_rooms:\n    if (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "bad: Must return to the start location"}, {"program": "\n# bad: must wait if there is no human\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\n                \nfor room in all_rooms:\n    if (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n            if answer == \"yes\":\n                found_backpack = True\n                break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "bad: Must wait if there is no human"}, {"program": "\n#bad: does not ask the correct question\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\n                \nfor room in all_rooms:\n    if (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n\n", "description": "bad: Does not ask the correct question"}, {"program": "\n#bad: options must contain both yes and no (yes)\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\n                \nfor room in all_rooms:\n    if (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n\n ", "description": "bad: Options must contain both yes and no (yes)"}, {"program": "\n#bad: program must ask both yes and no (no)\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\n                \nfor room in all_rooms:\n    if (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n\n", "description": "bad:  options must contain both yes and no (no)"}, {"program": "\n#bad: program must continue to wait if a person says no\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while not is_in_room(\"person\"):\n                sleep(1)\n            answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n            if answer == yes:\n                found_backpack = True\n                break\n                \nfor room in all_rooms:\n    if (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while not is_in_room(\"person\"):\n                sleep(1)\n            answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n            if answer == \"yes\":\n                found_backpack = True\n                break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n\n", "description": "bad: program must continue to wait if a person says no"}, {"program": "\n#bad: program does not take correct answer to ask\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                found_backpack = True\n                break\n                \nfor room in all_rooms:\n    if (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                found_backpack = True\n                break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "bad: program does not take correct answer to ask"}, {"program": "\n#bad: missmatch between ask and check\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yep\":\n                    found_backpack = True\n                    break\n                \nfor room in all_rooms:\n    if (\"office\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yep\":\n                    found_backpack = True\n                    break\ngo_to(start_loc)\nif not found_backpack:\n    say(\"I did not find the backpack.\")\n", "description": "bad: missmatch between ask and check"}, {"program": "\n#bad: program must say if the backpack was not found\n start_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\n            break\n\nif not found_backpack:                \n    for room in all_rooms:\n        if (\"office\" in room):\n                go_to(room)\n            if is_in_room(\"black backpack\"):\n                while True:\n                    while not is_in_room(\"person\"):\n                        sleep(1)\n                    answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                    if answer == \"yes\":\n                        found_backpack = True\n                        break\n                break\ngo_to(start_loc)\n", "description": "bad: program must say if the backpack was not found"}, {"program": "\n#bad: program must say it did not find the backpack only if the backpack was not found\nstart_loc = get_current_location()\nall_rooms = get_all_rooms()\nfound_backpack = False\nfor room in all_rooms:\n    if (\"confrence\" in room):\n            go_to(room)\n        if is_in_room(\"black backpack\"):\n            while True:\n                while not is_in_room(\"person\"):\n                    sleep(1)\n                answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                if answer == \"yes\":\n                    found_backpack = True\n                    break\n            break\n\nif not found_backpack:                \n    for room in all_rooms:\n        if (\"office\" in room):\n                go_to(room)\n            if is_in_room(\"black backpack\"):\n                while True:\n                    while not is_in_room(\"person\"):\n                        sleep(1)\n                    answer = ask(\"person\", \"Please put the black backpack in my basket.\", [yes, no])\n                    if answer == \"yes\":\n                        found_backpack = True\n                        break\n                break\ngo_to(start_loc)\nsay(\"I did not find the backpack.\") \n", "description": "bad: program must say it did not find the backpack only if the backpack was not found"}]