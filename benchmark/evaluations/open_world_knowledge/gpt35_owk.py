"""field: TASKNAME_PROMPTNUM_COMPLNUM_TESTNUM"""

ordered_field_buffer = []

CountSavory_0_0_0 = {
    "name": "CountSavory_0_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_0_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_0_0)

CountSavory_0_0_1 = {
    "name": "CountSavory_0_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_0_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_0_1)

CountSavory_0_0_2 = {
    "name": "CountSavory_0_0_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_0_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_0_2)

CountSavory_0_0_3 = {
    "name": "CountSavory_0_0_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_0_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_0_3)

CountSavory_0_1_0 = {
    "name": "CountSavory_0_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_1_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_1_0)

CountSavory_0_1_1 = {
    "name": "CountSavory_0_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_1_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_1_1)

CountSavory_0_1_2 = {
    "name": "CountSavory_0_1_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_1_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_1_2)

CountSavory_0_1_3 = {
    "name": "CountSavory_0_1_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_1_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_1_3)

CountSavory_0_2_0 = {
    "name": "CountSavory_0_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_2_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_2_0)

CountSavory_0_2_1 = {
    "name": "CountSavory_0_2_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_2_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_2_1)

CountSavory_0_2_2 = {
    "name": "CountSavory_0_2_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_2_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_2_2)

CountSavory_0_2_3 = {
    "name": "CountSavory_0_2_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_2_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_2_3)

CountSavory_0_3_0 = {
    "name": "CountSavory_0_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_3_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_3_0)

CountSavory_0_3_1 = {
    "name": "CountSavory_0_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_3_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_3_1)

CountSavory_0_3_2 = {
    "name": "CountSavory_0_3_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_3_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_3_2)

CountSavory_0_3_3 = {
    "name": "CountSavory_0_3_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_3_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_3_3)

CountSavory_0_4_0 = {
    "name": "CountSavory_0_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_4_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_4_0)

CountSavory_0_4_1 = {
    "name": "CountSavory_0_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_4_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_4_1)

CountSavory_0_4_2 = {
    "name": "CountSavory_0_4_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_4_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_4_2)

CountSavory_0_4_3 = {
    "name": "CountSavory_0_4_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_4_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_4_3)

CountSavory_0_5_0 = {
    "name": "CountSavory_0_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_5_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_5_0)

CountSavory_0_5_1 = {
    "name": "CountSavory_0_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_5_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_5_1)

CountSavory_0_5_2 = {
    "name": "CountSavory_0_5_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_5_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_5_2)

CountSavory_0_5_3 = {
    "name": "CountSavory_0_5_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_5_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_5_3)

CountSavory_0_6_0 = {
    "name": "CountSavory_0_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_6_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_6_0)

CountSavory_0_6_1 = {
    "name": "CountSavory_0_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_6_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_6_1)

CountSavory_0_6_2 = {
    "name": "CountSavory_0_6_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_6_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_6_2)

CountSavory_0_6_3 = {
    "name": "CountSavory_0_6_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_6_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_6_3)

CountSavory_0_7_0 = {
    "name": "CountSavory_0_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_7_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_7_0)

CountSavory_0_7_1 = {
    "name": "CountSavory_0_7_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_7_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_7_1)

CountSavory_0_7_2 = {
    "name": "CountSavory_0_7_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_7_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_7_2)

CountSavory_0_7_3 = {
    "name": "CountSavory_0_7_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_7_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_7_3)

CountSavory_0_8_0 = {
    "name": "CountSavory_0_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_8_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_8_0)

CountSavory_0_8_1 = {
    "name": "CountSavory_0_8_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_8_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_8_1)

CountSavory_0_8_2 = {
    "name": "CountSavory_0_8_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_8_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_8_2)

CountSavory_0_8_3 = {
    "name": "CountSavory_0_8_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_8_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_8_3)

CountSavory_0_9_0 = {
    "name": "CountSavory_0_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_9_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_9_0)

CountSavory_0_9_1 = {
    "name": "CountSavory_0_9_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_9_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_9_1)

CountSavory_0_9_2 = {
    "name": "CountSavory_0_9_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_9_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_9_2)

CountSavory_0_9_3 = {
    "name": "CountSavory_0_9_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_9_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_9_3)

CountSavory_0_10_0 = {
    "name": "CountSavory_0_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_10_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_10_0)

CountSavory_0_10_1 = {
    "name": "CountSavory_0_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_10_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_10_1)

CountSavory_0_10_2 = {
    "name": "CountSavory_0_10_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_10_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_10_2)

CountSavory_0_10_3 = {
    "name": "CountSavory_0_10_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_10_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_10_3)

CountSavory_0_11_0 = {
    "name": "CountSavory_0_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_11_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_11_0)

CountSavory_0_11_1 = {
    "name": "CountSavory_0_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_11_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_11_1)

CountSavory_0_11_2 = {
    "name": "CountSavory_0_11_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_11_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_11_2)

CountSavory_0_11_3 = {
    "name": "CountSavory_0_11_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_11_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_11_3)

CountSavory_0_12_0 = {
    "name": "CountSavory_0_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_12_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_12_0)

CountSavory_0_12_1 = {
    "name": "CountSavory_0_12_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_12_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_12_1)

CountSavory_0_12_2 = {
    "name": "CountSavory_0_12_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_12_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_12_2)

CountSavory_0_12_3 = {
    "name": "CountSavory_0_12_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_12_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_12_3)

CountSavory_0_13_0 = {
    "name": "CountSavory_0_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_13_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_13_0)

CountSavory_0_13_1 = {
    "name": "CountSavory_0_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_13_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_13_1)

CountSavory_0_13_2 = {
    "name": "CountSavory_0_13_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_13_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_13_2)

CountSavory_0_13_3 = {
    "name": "CountSavory_0_13_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_13_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_13_3)

CountSavory_0_14_0 = {
    "name": "CountSavory_0_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_14_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_14_0)

CountSavory_0_14_1 = {
    "name": "CountSavory_0_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_14_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_14_1)

CountSavory_0_14_2 = {
    "name": "CountSavory_0_14_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_14_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_14_2)

CountSavory_0_14_3 = {
    "name": "CountSavory_0_14_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_14_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_14_3)

CountSavory_0_15_0 = {
    "name": "CountSavory_0_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_15_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_15_0)

CountSavory_0_15_1 = {
    "name": "CountSavory_0_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_15_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_15_1)

CountSavory_0_15_2 = {
    "name": "CountSavory_0_15_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_15_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_15_2)

CountSavory_0_15_3 = {
    "name": "CountSavory_0_15_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_15_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_15_3)

CountSavory_0_16_0 = {
    "name": "CountSavory_0_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_16_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_16_0)

CountSavory_0_16_1 = {
    "name": "CountSavory_0_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_16_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_16_1)

CountSavory_0_16_2 = {
    "name": "CountSavory_0_16_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_16_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_16_2)

CountSavory_0_16_3 = {
    "name": "CountSavory_0_16_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_16_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_16_3)

CountSavory_0_17_0 = {
    "name": "CountSavory_0_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_17_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_17_0)

CountSavory_0_17_1 = {
    "name": "CountSavory_0_17_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_17_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_17_1)

CountSavory_0_17_2 = {
    "name": "CountSavory_0_17_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_17_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_17_2)

CountSavory_0_17_3 = {
    "name": "CountSavory_0_17_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_17_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_17_3)

CountSavory_0_18_0 = {
    "name": "CountSavory_0_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_18_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_18_0)

CountSavory_0_18_1 = {
    "name": "CountSavory_0_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_18_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_18_1)

CountSavory_0_18_2 = {
    "name": "CountSavory_0_18_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_18_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_18_2)

CountSavory_0_18_3 = {
    "name": "CountSavory_0_18_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_18_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_18_3)

CountSavory_0_19_0 = {
    "name": "CountSavory_0_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_19_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_19_0)

CountSavory_0_19_1 = {
    "name": "CountSavory_0_19_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_19_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_19_1)

CountSavory_0_19_2 = {
    "name": "CountSavory_0_19_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_19_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_19_2)

CountSavory_0_19_3 = {
    "name": "CountSavory_0_19_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_19_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_19_3)

CountSavory_0_20_0 = {
    "name": "CountSavory_0_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_20_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_20_0)

CountSavory_0_20_1 = {
    "name": "CountSavory_0_20_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_20_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_20_1)

CountSavory_0_20_2 = {
    "name": "CountSavory_0_20_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_20_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_20_2)

CountSavory_0_20_3 = {
    "name": "CountSavory_0_20_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_20_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_20_3)

CountSavory_0_21_0 = {
    "name": "CountSavory_0_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_21_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_21_0)

CountSavory_0_21_1 = {
    "name": "CountSavory_0_21_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_21_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_21_1)

CountSavory_0_21_2 = {
    "name": "CountSavory_0_21_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_21_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_21_2)

CountSavory_0_21_3 = {
    "name": "CountSavory_0_21_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_21_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_21_3)

CountSavory_0_22_0 = {
    "name": "CountSavory_0_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_22_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_22_0)

CountSavory_0_22_1 = {
    "name": "CountSavory_0_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_22_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_22_1)

CountSavory_0_22_2 = {
    "name": "CountSavory_0_22_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_22_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_22_2)

CountSavory_0_22_3 = {
    "name": "CountSavory_0_22_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_22_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_22_3)

CountSavory_0_23_0 = {
    "name": "CountSavory_0_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_23_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_23_0)

CountSavory_0_23_1 = {
    "name": "CountSavory_0_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_23_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_23_1)

CountSavory_0_23_2 = {
    "name": "CountSavory_0_23_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_23_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_23_2)

CountSavory_0_23_3 = {
    "name": "CountSavory_0_23_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_23_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_23_3)

CountSavory_0_24_0 = {
    "name": "CountSavory_0_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_24_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_24_0)

CountSavory_0_24_1 = {
    "name": "CountSavory_0_24_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_24_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_24_1)

CountSavory_0_24_2 = {
    "name": "CountSavory_0_24_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_24_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_24_2)

CountSavory_0_24_3 = {
    "name": "CountSavory_0_24_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_24_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_24_3)

CountSavory_0_25_0 = {
    "name": "CountSavory_0_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_25_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_25_0)

CountSavory_0_25_1 = {
    "name": "CountSavory_0_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_25_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_25_1)

CountSavory_0_25_2 = {
    "name": "CountSavory_0_25_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_25_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_25_2)

CountSavory_0_25_3 = {
    "name": "CountSavory_0_25_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_25_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_25_3)

CountSavory_0_26_0 = {
    "name": "CountSavory_0_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_26_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_26_0)

CountSavory_0_26_1 = {
    "name": "CountSavory_0_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_26_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_26_1)

CountSavory_0_26_2 = {
    "name": "CountSavory_0_26_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_26_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_26_2)

CountSavory_0_26_3 = {
    "name": "CountSavory_0_26_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_26_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_26_3)

CountSavory_0_27_0 = {
    "name": "CountSavory_0_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_27_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_27_0)

CountSavory_0_27_1 = {
    "name": "CountSavory_0_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_27_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_27_1)

CountSavory_0_27_2 = {
    "name": "CountSavory_0_27_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_27_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_27_2)

CountSavory_0_27_3 = {
    "name": "CountSavory_0_27_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_27_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_27_3)

CountSavory_0_28_0 = {
    "name": "CountSavory_0_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_28_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_28_0)

CountSavory_0_28_1 = {
    "name": "CountSavory_0_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_28_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_28_1)

CountSavory_0_28_2 = {
    "name": "CountSavory_0_28_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_28_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_28_2)

CountSavory_0_28_3 = {
    "name": "CountSavory_0_28_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_28_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_28_3)

CountSavory_0_29_0 = {
    "name": "CountSavory_0_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_29_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_29_0)

CountSavory_0_29_1 = {
    "name": "CountSavory_0_29_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_29_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_29_1)

CountSavory_0_29_2 = {
    "name": "CountSavory_0_29_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_29_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_29_2)

CountSavory_0_29_3 = {
    "name": "CountSavory_0_29_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_29_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_29_3)

CountSavory_0_30_0 = {
    "name": "CountSavory_0_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_30_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_30_0)

CountSavory_0_30_1 = {
    "name": "CountSavory_0_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_30_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_30_1)

CountSavory_0_30_2 = {
    "name": "CountSavory_0_30_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_30_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_30_2)

CountSavory_0_30_3 = {
    "name": "CountSavory_0_30_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_30_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_30_3)

CountSavory_0_31_0 = {
    "name": "CountSavory_0_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_31_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_31_0)

CountSavory_0_31_1 = {
    "name": "CountSavory_0_31_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_31_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_31_1)

CountSavory_0_31_2 = {
    "name": "CountSavory_0_31_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_31_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_31_2)

CountSavory_0_31_3 = {
    "name": "CountSavory_0_31_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_31_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_31_3)

CountSavory_0_32_0 = {
    "name": "CountSavory_0_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_32_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_32_0)

CountSavory_0_32_1 = {
    "name": "CountSavory_0_32_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_32_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_32_1)

CountSavory_0_32_2 = {
    "name": "CountSavory_0_32_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_32_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_32_2)

CountSavory_0_32_3 = {
    "name": "CountSavory_0_32_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_32_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_32_3)

CountSavory_0_33_0 = {
    "name": "CountSavory_0_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_33_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_33_0)

CountSavory_0_33_1 = {
    "name": "CountSavory_0_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_33_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_33_1)

CountSavory_0_33_2 = {
    "name": "CountSavory_0_33_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_33_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_33_2)

CountSavory_0_33_3 = {
    "name": "CountSavory_0_33_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_33_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_33_3)

CountSavory_0_34_0 = {
    "name": "CountSavory_0_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_34_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_34_0)

CountSavory_0_34_1 = {
    "name": "CountSavory_0_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_34_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_34_1)

CountSavory_0_34_2 = {
    "name": "CountSavory_0_34_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_34_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_34_2)

CountSavory_0_34_3 = {
    "name": "CountSavory_0_34_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_34_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_34_3)

CountSavory_0_35_0 = {
    "name": "CountSavory_0_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_35_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_35_0)

CountSavory_0_35_1 = {
    "name": "CountSavory_0_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_35_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_35_1)

CountSavory_0_35_2 = {
    "name": "CountSavory_0_35_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_35_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_35_2)

CountSavory_0_35_3 = {
    "name": "CountSavory_0_35_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_35_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_35_3)

CountSavory_0_36_0 = {
    "name": "CountSavory_0_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_36_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_36_0)

CountSavory_0_36_1 = {
    "name": "CountSavory_0_36_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_36_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_36_1)

CountSavory_0_36_2 = {
    "name": "CountSavory_0_36_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_36_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_36_2)

CountSavory_0_36_3 = {
    "name": "CountSavory_0_36_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_36_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_36_3)

CountSavory_0_37_0 = {
    "name": "CountSavory_0_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_37_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_37_0)

CountSavory_0_37_1 = {
    "name": "CountSavory_0_37_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_37_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_37_1)

CountSavory_0_37_2 = {
    "name": "CountSavory_0_37_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_37_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_37_2)

CountSavory_0_37_3 = {
    "name": "CountSavory_0_37_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_37_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_37_3)

CountSavory_0_38_0 = {
    "name": "CountSavory_0_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_38_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_38_0)

CountSavory_0_38_1 = {
    "name": "CountSavory_0_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_38_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_38_1)

CountSavory_0_38_2 = {
    "name": "CountSavory_0_38_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_38_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_38_2)

CountSavory_0_38_3 = {
    "name": "CountSavory_0_38_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_38_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_38_3)

CountSavory_0_39_0 = {
    "name": "CountSavory_0_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_39_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_39_0)

CountSavory_0_39_1 = {
    "name": "CountSavory_0_39_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_39_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_39_1)

CountSavory_0_39_2 = {
    "name": "CountSavory_0_39_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_39_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_39_2)

CountSavory_0_39_3 = {
    "name": "CountSavory_0_39_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_39_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_39_3)

CountSavory_0_40_0 = {
    "name": "CountSavory_0_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_40_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_40_0)

CountSavory_0_40_1 = {
    "name": "CountSavory_0_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_40_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_40_1)

CountSavory_0_40_2 = {
    "name": "CountSavory_0_40_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_40_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_40_2)

CountSavory_0_40_3 = {
    "name": "CountSavory_0_40_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_40_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_40_3)

CountSavory_0_41_0 = {
    "name": "CountSavory_0_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_41_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response == "Ham sandwich" or response == "Beef jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_41_0)

CountSavory_0_41_1 = {
    "name": "CountSavory_0_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_41_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response == "Ham sandwich" or response == "Beef jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_41_1)

CountSavory_0_41_2 = {
    "name": "CountSavory_0_41_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_41_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response == "Ham sandwich" or response == "Beef jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_41_2)

CountSavory_0_41_3 = {
    "name": "CountSavory_0_41_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_41_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham sandwich", "Donut", "Beef jerky"])
            if response == "Ham sandwich" or response == "Beef jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_41_3)

CountSavory_0_42_0 = {
    "name": "CountSavory_0_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_42_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_42_0)

CountSavory_0_42_1 = {
    "name": "CountSavory_0_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_42_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_42_1)

CountSavory_0_42_2 = {
    "name": "CountSavory_0_42_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_42_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_42_2)

CountSavory_0_42_3 = {
    "name": "CountSavory_0_42_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_42_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_42_3)

CountSavory_0_43_0 = {
    "name": "CountSavory_0_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_43_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_43_0)

CountSavory_0_43_1 = {
    "name": "CountSavory_0_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_43_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_43_1)

CountSavory_0_43_2 = {
    "name": "CountSavory_0_43_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_43_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_43_2)

CountSavory_0_43_3 = {
    "name": "CountSavory_0_43_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_43_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response == "Ham Sandwich" or response == "Beef Jerky":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_43_3)

CountSavory_0_44_0 = {
    "name": "CountSavory_0_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_44_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_0_44_0)

CountSavory_0_44_1 = {
    "name": "CountSavory_0_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_44_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_0_44_1)

CountSavory_0_44_2 = {
    "name": "CountSavory_0_44_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_44_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_0_44_2)

CountSavory_0_44_3 = {
    "name": "CountSavory_0_44_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_44_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_0_44_3)

CountSavory_0_45_0 = {
    "name": "CountSavory_0_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_45_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_45_0)

CountSavory_0_45_1 = {
    "name": "CountSavory_0_45_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_45_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_45_1)

CountSavory_0_45_2 = {
    "name": "CountSavory_0_45_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_45_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_45_2)

CountSavory_0_45_3 = {
    "name": "CountSavory_0_45_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_45_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_45_3)

CountSavory_0_46_0 = {
    "name": "CountSavory_0_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_46_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_46_0)

CountSavory_0_46_1 = {
    "name": "CountSavory_0_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_46_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_46_1)

CountSavory_0_46_2 = {
    "name": "CountSavory_0_46_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_46_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_46_2)

CountSavory_0_46_3 = {
    "name": "CountSavory_0_46_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_46_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_46_3)

CountSavory_0_47_0 = {
    "name": "CountSavory_0_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_47_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_47_0)

CountSavory_0_47_1 = {
    "name": "CountSavory_0_47_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_47_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_47_1)

CountSavory_0_47_2 = {
    "name": "CountSavory_0_47_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_47_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_47_2)

CountSavory_0_47_3 = {
    "name": "CountSavory_0_47_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_47_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_0_47_3)

CountSavory_0_48_0 = {
    "name": "CountSavory_0_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_48_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_48_0)

CountSavory_0_48_1 = {
    "name": "CountSavory_0_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_48_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_48_1)

CountSavory_0_48_2 = {
    "name": "CountSavory_0_48_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_48_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_48_2)

CountSavory_0_48_3 = {
    "name": "CountSavory_0_48_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_48_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_48_3)

CountSavory_0_49_0 = {
    "name": "CountSavory_0_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_49_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_49_0)

CountSavory_0_49_1 = {
    "name": "CountSavory_0_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_49_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_49_1)

CountSavory_0_49_2 = {
    "name": "CountSavory_0_49_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_49_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_49_2)

CountSavory_0_49_3 = {
    "name": "CountSavory_0_49_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_49_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")
"""

ordered_field_buffer.append(CountSavory_0_49_3)

CountSavory_1_0_0 = {
    "name": "CountSavory_1_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_0_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_0_0)

CountSavory_1_0_1 = {
    "name": "CountSavory_1_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_0_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_0_1)

CountSavory_1_0_2 = {
    "name": "CountSavory_1_0_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_0_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_0_2)

CountSavory_1_0_3 = {
    "name": "CountSavory_1_0_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_0_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_0_3)

CountSavory_1_1_0 = {
    "name": "CountSavory_1_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_1_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_1_0)

CountSavory_1_1_1 = {
    "name": "CountSavory_1_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_1_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_1_1)

CountSavory_1_1_2 = {
    "name": "CountSavory_1_1_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_1_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_1_2)

CountSavory_1_1_3 = {
    "name": "CountSavory_1_1_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_1_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_1_3)

CountSavory_1_2_0 = {
    "name": "CountSavory_1_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_2_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose a snack: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_2_0)

CountSavory_1_2_1 = {
    "name": "CountSavory_1_2_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_2_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose a snack: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_2_1)

CountSavory_1_2_2 = {
    "name": "CountSavory_1_2_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_2_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose a snack: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_2_2)

CountSavory_1_2_3 = {
    "name": "CountSavory_1_2_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_2_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose a snack: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_2_3)

CountSavory_1_3_0 = {
    "name": "CountSavory_1_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_3_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_3_0)

CountSavory_1_3_1 = {
    "name": "CountSavory_1_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_3_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_3_1)

CountSavory_1_3_2 = {
    "name": "CountSavory_1_3_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_3_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_3_2)

CountSavory_1_3_3 = {
    "name": "CountSavory_1_3_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_3_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_3_3)

CountSavory_1_4_0 = {
    "name": "CountSavory_1_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_4_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_4_0)

CountSavory_1_4_1 = {
    "name": "CountSavory_1_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_4_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_4_1)

CountSavory_1_4_2 = {
    "name": "CountSavory_1_4_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_4_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_4_2)

CountSavory_1_4_3 = {
    "name": "CountSavory_1_4_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_4_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_4_3)

CountSavory_1_5_0 = {
    "name": "CountSavory_1_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_5_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_5_0)

CountSavory_1_5_1 = {
    "name": "CountSavory_1_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_5_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_5_1)

CountSavory_1_5_2 = {
    "name": "CountSavory_1_5_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_5_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_5_2)

CountSavory_1_5_3 = {
    "name": "CountSavory_1_5_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_5_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_5_3)

CountSavory_1_6_0 = {
    "name": "CountSavory_1_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_6_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_6_0)

CountSavory_1_6_1 = {
    "name": "CountSavory_1_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_6_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_6_1)

CountSavory_1_6_2 = {
    "name": "CountSavory_1_6_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_6_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_6_2)

CountSavory_1_6_3 = {
    "name": "CountSavory_1_6_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_6_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_6_3)

CountSavory_1_7_0 = {
    "name": "CountSavory_1_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_7_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_7_0)

CountSavory_1_7_1 = {
    "name": "CountSavory_1_7_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_7_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_7_1)

CountSavory_1_7_2 = {
    "name": "CountSavory_1_7_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_7_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_7_2)

CountSavory_1_7_3 = {
    "name": "CountSavory_1_7_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_7_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_7_3)

CountSavory_1_8_0 = {
    "name": "CountSavory_1_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_8_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_8_0)

CountSavory_1_8_1 = {
    "name": "CountSavory_1_8_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_8_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_8_1)

CountSavory_1_8_2 = {
    "name": "CountSavory_1_8_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_8_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_8_2)

CountSavory_1_8_3 = {
    "name": "CountSavory_1_8_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_8_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_8_3)

CountSavory_1_9_0 = {
    "name": "CountSavory_1_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_9_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_9_0)

CountSavory_1_9_1 = {
    "name": "CountSavory_1_9_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_9_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_9_1)

CountSavory_1_9_2 = {
    "name": "CountSavory_1_9_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_9_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_9_2)

CountSavory_1_9_3 = {
    "name": "CountSavory_1_9_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_9_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_9_3)

CountSavory_1_10_0 = {
    "name": "CountSavory_1_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_10_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_10_0)

CountSavory_1_10_1 = {
    "name": "CountSavory_1_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_10_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_10_1)

CountSavory_1_10_2 = {
    "name": "CountSavory_1_10_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_10_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_10_2)

CountSavory_1_10_3 = {
    "name": "CountSavory_1_10_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_10_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_10_3)

CountSavory_1_11_0 = {
    "name": "CountSavory_1_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_11_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_11_0)

CountSavory_1_11_1 = {
    "name": "CountSavory_1_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_11_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_11_1)

CountSavory_1_11_2 = {
    "name": "CountSavory_1_11_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_11_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_11_2)

CountSavory_1_11_3 = {
    "name": "CountSavory_1_11_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_11_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_11_3)

CountSavory_1_12_0 = {
    "name": "CountSavory_1_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_12_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_12_0)

CountSavory_1_12_1 = {
    "name": "CountSavory_1_12_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_12_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_12_1)

CountSavory_1_12_2 = {
    "name": "CountSavory_1_12_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_12_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_12_2)

CountSavory_1_12_3 = {
    "name": "CountSavory_1_12_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_12_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_12_3)

CountSavory_1_13_0 = {
    "name": "CountSavory_1_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_13_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_13_0)

CountSavory_1_13_1 = {
    "name": "CountSavory_1_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_13_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_13_1)

CountSavory_1_13_2 = {
    "name": "CountSavory_1_13_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_13_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_13_2)

CountSavory_1_13_3 = {
    "name": "CountSavory_1_13_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_13_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_13_3)

CountSavory_1_14_0 = {
    "name": "CountSavory_1_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_14_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_14_0)

CountSavory_1_14_1 = {
    "name": "CountSavory_1_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_14_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_14_1)

CountSavory_1_14_2 = {
    "name": "CountSavory_1_14_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_14_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_14_2)

CountSavory_1_14_3 = {
    "name": "CountSavory_1_14_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_14_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_14_3)

CountSavory_1_15_0 = {
    "name": "CountSavory_1_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_15_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_15_0)

CountSavory_1_15_1 = {
    "name": "CountSavory_1_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_15_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_15_1)

CountSavory_1_15_2 = {
    "name": "CountSavory_1_15_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_15_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_15_2)

CountSavory_1_15_3 = {
    "name": "CountSavory_1_15_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_15_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_15_3)

CountSavory_1_16_0 = {
    "name": "CountSavory_1_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_16_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_16_0)

CountSavory_1_16_1 = {
    "name": "CountSavory_1_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_16_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_16_1)

CountSavory_1_16_2 = {
    "name": "CountSavory_1_16_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_16_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_16_2)

CountSavory_1_16_3 = {
    "name": "CountSavory_1_16_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_16_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_16_3)

CountSavory_1_17_0 = {
    "name": "CountSavory_1_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_17_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_17_0)

CountSavory_1_17_1 = {
    "name": "CountSavory_1_17_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_17_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_17_1)

CountSavory_1_17_2 = {
    "name": "CountSavory_1_17_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_17_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_17_2)

CountSavory_1_17_3 = {
    "name": "CountSavory_1_17_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_17_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_17_3)

CountSavory_1_18_0 = {
    "name": "CountSavory_1_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_18_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_18_0)

CountSavory_1_18_1 = {
    "name": "CountSavory_1_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_18_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_18_1)

CountSavory_1_18_2 = {
    "name": "CountSavory_1_18_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_18_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_18_2)

CountSavory_1_18_3 = {
    "name": "CountSavory_1_18_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_18_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_18_3)

CountSavory_1_19_0 = {
    "name": "CountSavory_1_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_19_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_19_0)

CountSavory_1_19_1 = {
    "name": "CountSavory_1_19_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_19_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_19_1)

CountSavory_1_19_2 = {
    "name": "CountSavory_1_19_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_19_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_19_2)

CountSavory_1_19_3 = {
    "name": "CountSavory_1_19_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_19_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_19_3)

CountSavory_1_20_0 = {
    "name": "CountSavory_1_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_20_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose one: cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_20_0)

CountSavory_1_20_1 = {
    "name": "CountSavory_1_20_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_20_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose one: cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_20_1)

CountSavory_1_20_2 = {
    "name": "CountSavory_1_20_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_20_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose one: cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_20_2)

CountSavory_1_20_3 = {
    "name": "CountSavory_1_20_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_20_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose one: cupcake, ham sandwich, donut, or beef jerky?", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_20_3)

CountSavory_1_21_0 = {
    "name": "CountSavory_1_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_21_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_21_0)

CountSavory_1_21_1 = {
    "name": "CountSavory_1_21_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_21_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_21_1)

CountSavory_1_21_2 = {
    "name": "CountSavory_1_21_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_21_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_21_2)

CountSavory_1_21_3 = {
    "name": "CountSavory_1_21_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_21_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_21_3)

CountSavory_1_22_0 = {
    "name": "CountSavory_1_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_22_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_22_0)

CountSavory_1_22_1 = {
    "name": "CountSavory_1_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_22_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_22_1)

CountSavory_1_22_2 = {
    "name": "CountSavory_1_22_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_22_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_22_2)

CountSavory_1_22_3 = {
    "name": "CountSavory_1_22_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_22_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_22_3)

CountSavory_1_23_0 = {
    "name": "CountSavory_1_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_23_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_23_0)

CountSavory_1_23_1 = {
    "name": "CountSavory_1_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_23_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_23_1)

CountSavory_1_23_2 = {
    "name": "CountSavory_1_23_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_23_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_23_2)

CountSavory_1_23_3 = {
    "name": "CountSavory_1_23_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_23_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_23_3)

CountSavory_1_24_0 = {
    "name": "CountSavory_1_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_24_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_24_0)

CountSavory_1_24_1 = {
    "name": "CountSavory_1_24_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_24_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_24_1)

CountSavory_1_24_2 = {
    "name": "CountSavory_1_24_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_24_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_24_2)

CountSavory_1_24_3 = {
    "name": "CountSavory_1_24_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_24_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_24_3)

CountSavory_1_25_0 = {
    "name": "CountSavory_1_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_25_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_25_0)

CountSavory_1_25_1 = {
    "name": "CountSavory_1_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_25_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_25_1)

CountSavory_1_25_2 = {
    "name": "CountSavory_1_25_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_25_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_25_2)

CountSavory_1_25_3 = {
    "name": "CountSavory_1_25_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_25_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_25_3)

CountSavory_1_26_0 = {
    "name": "CountSavory_1_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_26_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_26_0)

CountSavory_1_26_1 = {
    "name": "CountSavory_1_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_26_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_26_1)

CountSavory_1_26_2 = {
    "name": "CountSavory_1_26_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_26_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_26_2)

CountSavory_1_26_3 = {
    "name": "CountSavory_1_26_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_26_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_26_3)

CountSavory_1_27_0 = {
    "name": "CountSavory_1_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_27_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_27_0)

CountSavory_1_27_1 = {
    "name": "CountSavory_1_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_27_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_27_1)

CountSavory_1_27_2 = {
    "name": "CountSavory_1_27_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_27_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_27_2)

CountSavory_1_27_3 = {
    "name": "CountSavory_1_27_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_27_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_27_3)

CountSavory_1_28_0 = {
    "name": "CountSavory_1_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_28_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_28_0)

CountSavory_1_28_1 = {
    "name": "CountSavory_1_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_28_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_28_1)

CountSavory_1_28_2 = {
    "name": "CountSavory_1_28_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_28_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_28_2)

CountSavory_1_28_3 = {
    "name": "CountSavory_1_28_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_28_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_28_3)

CountSavory_1_29_0 = {
    "name": "CountSavory_1_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_29_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_29_0)

CountSavory_1_29_1 = {
    "name": "CountSavory_1_29_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_29_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_29_1)

CountSavory_1_29_2 = {
    "name": "CountSavory_1_29_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_29_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_29_2)

CountSavory_1_29_3 = {
    "name": "CountSavory_1_29_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_29_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_29_3)

CountSavory_1_30_0 = {
    "name": "CountSavory_1_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_30_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_30_0)

CountSavory_1_30_1 = {
    "name": "CountSavory_1_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_30_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_30_1)

CountSavory_1_30_2 = {
    "name": "CountSavory_1_30_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_30_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_30_2)

CountSavory_1_30_3 = {
    "name": "CountSavory_1_30_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_30_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_30_3)

CountSavory_1_31_0 = {
    "name": "CountSavory_1_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_31_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_31_0)

CountSavory_1_31_1 = {
    "name": "CountSavory_1_31_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_31_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_31_1)

CountSavory_1_31_2 = {
    "name": "CountSavory_1_31_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_31_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_31_2)

CountSavory_1_31_3 = {
    "name": "CountSavory_1_31_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_31_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_31_3)

CountSavory_1_32_0 = {
    "name": "CountSavory_1_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_32_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_32_0)

CountSavory_1_32_1 = {
    "name": "CountSavory_1_32_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_32_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_32_1)

CountSavory_1_32_2 = {
    "name": "CountSavory_1_32_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_32_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_32_2)

CountSavory_1_32_3 = {
    "name": "CountSavory_1_32_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_32_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_32_3)

CountSavory_1_33_0 = {
    "name": "CountSavory_1_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_33_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_33_0)

CountSavory_1_33_1 = {
    "name": "CountSavory_1_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_33_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_33_1)

CountSavory_1_33_2 = {
    "name": "CountSavory_1_33_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_33_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_33_2)

CountSavory_1_33_3 = {
    "name": "CountSavory_1_33_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_33_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_33_3)

CountSavory_1_34_0 = {
    "name": "CountSavory_1_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_34_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_34_0)

CountSavory_1_34_1 = {
    "name": "CountSavory_1_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_34_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_34_1)

CountSavory_1_34_2 = {
    "name": "CountSavory_1_34_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_34_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_34_2)

CountSavory_1_34_3 = {
    "name": "CountSavory_1_34_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_34_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_34_3)

CountSavory_1_35_0 = {
    "name": "CountSavory_1_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_35_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_35_0)

CountSavory_1_35_1 = {
    "name": "CountSavory_1_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_35_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_35_1)

CountSavory_1_35_2 = {
    "name": "CountSavory_1_35_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_35_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_35_2)

CountSavory_1_35_3 = {
    "name": "CountSavory_1_35_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_35_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_35_3)

CountSavory_1_36_0 = {
    "name": "CountSavory_1_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_36_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_1_36_0)

CountSavory_1_36_1 = {
    "name": "CountSavory_1_36_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_36_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_1_36_1)

CountSavory_1_36_2 = {
    "name": "CountSavory_1_36_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_36_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_1_36_2)

CountSavory_1_36_3 = {
    "name": "CountSavory_1_36_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_36_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_1_36_3)

CountSavory_1_37_0 = {
    "name": "CountSavory_1_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_37_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_37_0)

CountSavory_1_37_1 = {
    "name": "CountSavory_1_37_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_37_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_37_1)

CountSavory_1_37_2 = {
    "name": "CountSavory_1_37_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_37_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_37_2)

CountSavory_1_37_3 = {
    "name": "CountSavory_1_37_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_37_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_37_3)

CountSavory_1_38_0 = {
    "name": "CountSavory_1_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_38_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_38_0)

CountSavory_1_38_1 = {
    "name": "CountSavory_1_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_38_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_38_1)

CountSavory_1_38_2 = {
    "name": "CountSavory_1_38_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_38_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_38_2)

CountSavory_1_38_3 = {
    "name": "CountSavory_1_38_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_38_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_38_3)

CountSavory_1_39_0 = {
    "name": "CountSavory_1_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one of the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one of the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one of the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one of the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_39_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one of the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_39_0)

CountSavory_1_39_1 = {
    "name": "CountSavory_1_39_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one of the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one of the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one of the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one of the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_39_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one of the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_39_1)

CountSavory_1_39_2 = {
    "name": "CountSavory_1_39_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one of the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one of the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one of the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_39_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one of the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_39_2)

CountSavory_1_39_3 = {
    "name": "CountSavory_1_39_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one of the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one of the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one of the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_39_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one of the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("There were " + str(savory_options) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_39_3)

CountSavory_1_40_0 = {
    "name": "CountSavory_1_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_40_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_40_0)

CountSavory_1_40_1 = {
    "name": "CountSavory_1_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_40_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_40_1)

CountSavory_1_40_2 = {
    "name": "CountSavory_1_40_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_40_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_40_2)

CountSavory_1_40_3 = {
    "name": "CountSavory_1_40_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_40_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_40_3)

CountSavory_1_41_0 = {
    "name": "CountSavory_1_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_41_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_41_0)

CountSavory_1_41_1 = {
    "name": "CountSavory_1_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_41_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_41_1)

CountSavory_1_41_2 = {
    "name": "CountSavory_1_41_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_41_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_41_2)

CountSavory_1_41_3 = {
    "name": "CountSavory_1_41_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_41_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_41_3)

CountSavory_1_42_0 = {
    "name": "CountSavory_1_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_42_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_1_42_0)

CountSavory_1_42_1 = {
    "name": "CountSavory_1_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_42_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_1_42_1)

CountSavory_1_42_2 = {
    "name": "CountSavory_1_42_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_42_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_1_42_2)

CountSavory_1_42_3 = {
    "name": "CountSavory_1_42_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_42_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_1_42_3)

CountSavory_1_43_0 = {
    "name": "CountSavory_1_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_43_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_43_0)

CountSavory_1_43_1 = {
    "name": "CountSavory_1_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_43_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_43_1)

CountSavory_1_43_2 = {
    "name": "CountSavory_1_43_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_43_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_43_2)

CountSavory_1_43_3 = {
    "name": "CountSavory_1_43_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_43_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_options))
"""

ordered_field_buffer.append(CountSavory_1_43_3)

CountSavory_1_44_0 = {
    "name": "CountSavory_1_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_44_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_44_0)

CountSavory_1_44_1 = {
    "name": "CountSavory_1_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_44_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_44_1)

CountSavory_1_44_2 = {
    "name": "CountSavory_1_44_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_44_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_44_2)

CountSavory_1_44_3 = {
    "name": "CountSavory_1_44_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_44_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_44_3)

CountSavory_1_45_0 = {
    "name": "CountSavory_1_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_45_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_45_0)

CountSavory_1_45_1 = {
    "name": "CountSavory_1_45_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_45_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_45_1)

CountSavory_1_45_2 = {
    "name": "CountSavory_1_45_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_45_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_45_2)

CountSavory_1_45_3 = {
    "name": "CountSavory_1_45_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_45_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_45_3)

CountSavory_1_46_0 = {
    "name": "CountSavory_1_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_46_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_46_0)

CountSavory_1_46_1 = {
    "name": "CountSavory_1_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_46_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_46_1)

CountSavory_1_46_2 = {
    "name": "CountSavory_1_46_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_46_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_46_2)

CountSavory_1_46_3 = {
    "name": "CountSavory_1_46_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose from cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_46_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose from cupcake, ham sandwich, donut, or beef jerky", ["Cupcake", "Ham Sandwich", "Donut", "Beef Jerky"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_options += 1
    go_to(start_loc)
    say(str(savory_options) + " people selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_46_3)

CountSavory_1_47_0 = {
    "name": "CountSavory_1_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_47_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_47_0)

CountSavory_1_47_1 = {
    "name": "CountSavory_1_47_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_47_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_47_1)

CountSavory_1_47_2 = {
    "name": "CountSavory_1_47_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_47_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_47_2)

CountSavory_1_47_3 = {
    "name": "CountSavory_1_47_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_47_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_1_47_3)

CountSavory_1_48_0 = {
    "name": "CountSavory_1_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_48_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "beef jerky":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_48_0)

CountSavory_1_48_1 = {
    "name": "CountSavory_1_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_48_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "beef jerky":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_48_1)

CountSavory_1_48_2 = {
    "name": "CountSavory_1_48_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_48_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "beef jerky":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_48_2)

CountSavory_1_48_3 = {
    "name": "CountSavory_1_48_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose one: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_48_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose one: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "beef jerky":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who selected a savory option")
"""

ordered_field_buffer.append(CountSavory_1_48_3)

CountSavory_1_49_0 = {
    "name": "CountSavory_1_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_49_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose a snack: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_1_49_0)

CountSavory_1_49_1 = {
    "name": "CountSavory_1_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_49_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose a snack: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_1_49_1)

CountSavory_1_49_2 = {
    "name": "CountSavory_1_49_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_49_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose a snack: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_1_49_2)

CountSavory_1_49_3 = {
    "name": "CountSavory_1_49_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ choose a snack: cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_49_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Choose a snack: cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who chose a savory option")
"""

ordered_field_buffer.append(CountSavory_1_49_3)

CountSavory_2_0_0 = {
    "name": "CountSavory_2_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_0_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_0_0)

CountSavory_2_0_1 = {
    "name": "CountSavory_2_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_0_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_0_1)

CountSavory_2_0_2 = {
    "name": "CountSavory_2_0_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_0_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_0_2)

CountSavory_2_0_3 = {
    "name": "CountSavory_2_0_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_0_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_0_3)

CountSavory_2_1_0 = {
    "name": "CountSavory_2_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_1_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_1_0)

CountSavory_2_1_1 = {
    "name": "CountSavory_2_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_1_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_1_1)

CountSavory_2_1_2 = {
    "name": "CountSavory_2_1_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_1_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_1_2)

CountSavory_2_1_3 = {
    "name": "CountSavory_2_1_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_1_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_1_3)

CountSavory_2_2_0 = {
    "name": "CountSavory_2_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_2_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_2_0)

CountSavory_2_2_1 = {
    "name": "CountSavory_2_2_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_2_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_2_1)

CountSavory_2_2_2 = {
    "name": "CountSavory_2_2_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_2_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_2_2)

CountSavory_2_2_3 = {
    "name": "CountSavory_2_2_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_2_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_2_3)

CountSavory_2_3_0 = {
    "name": "CountSavory_2_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_3_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people opted for a savory item".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_3_0)

CountSavory_2_3_1 = {
    "name": "CountSavory_2_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_3_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people opted for a savory item".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_3_1)

CountSavory_2_3_2 = {
    "name": "CountSavory_2_3_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_3_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people opted for a savory item".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_3_2)

CountSavory_2_3_3 = {
    "name": "CountSavory_2_3_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_3_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("{} people opted for a savory item".format(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_3_3)

CountSavory_2_4_0 = {
    "name": "CountSavory_2_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_4_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_4_0)

CountSavory_2_4_1 = {
    "name": "CountSavory_2_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_4_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_4_1)

CountSavory_2_4_2 = {
    "name": "CountSavory_2_4_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_4_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_4_2)

CountSavory_2_4_3 = {
    "name": "CountSavory_2_4_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_4_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_4_3)

CountSavory_2_5_0 = {
    "name": "CountSavory_2_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_5_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to have? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_5_0)

CountSavory_2_5_1 = {
    "name": "CountSavory_2_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_5_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to have? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_5_1)

CountSavory_2_5_2 = {
    "name": "CountSavory_2_5_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_5_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to have? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_5_2)

CountSavory_2_5_3 = {
    "name": "CountSavory_2_5_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_5_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to have? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_5_3)

CountSavory_2_6_0 = {
    "name": "CountSavory_2_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_6_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_preferences))
"""

ordered_field_buffer.append(CountSavory_2_6_0)

CountSavory_2_6_1 = {
    "name": "CountSavory_2_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_6_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_preferences))
"""

ordered_field_buffer.append(CountSavory_2_6_1)

CountSavory_2_6_2 = {
    "name": "CountSavory_2_6_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_6_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_preferences))
"""

ordered_field_buffer.append(CountSavory_2_6_2)

CountSavory_2_6_3 = {
    "name": "CountSavory_2_6_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_6_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_preferences))
"""

ordered_field_buffer.append(CountSavory_2_6_3)

CountSavory_2_7_0 = {
    "name": "CountSavory_2_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 individuals who opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_7_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " individuals who opted for a savory item")
"""

ordered_field_buffer.append(CountSavory_2_7_0)

CountSavory_2_7_1 = {
    "name": "CountSavory_2_7_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 individuals who opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_7_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " individuals who opted for a savory item")
"""

ordered_field_buffer.append(CountSavory_2_7_1)

CountSavory_2_7_2 = {
    "name": "CountSavory_2_7_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 individuals who opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_7_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " individuals who opted for a savory item")
"""

ordered_field_buffer.append(CountSavory_2_7_2)

CountSavory_2_7_3 = {
    "name": "CountSavory_2_7_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 individuals who opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_7_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " individuals who opted for a savory item")
"""

ordered_field_buffer.append(CountSavory_2_7_3)

CountSavory_2_8_0 = {
    "name": "CountSavory_2_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_8_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_8_0)

CountSavory_2_8_1 = {
    "name": "CountSavory_2_8_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_8_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_8_1)

CountSavory_2_8_2 = {
    "name": "CountSavory_2_8_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_8_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_8_2)

CountSavory_2_8_3 = {
    "name": "CountSavory_2_8_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_8_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_8_3)

CountSavory_2_9_0 = {
    "name": "CountSavory_2_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_9_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_9_0)

CountSavory_2_9_1 = {
    "name": "CountSavory_2_9_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_9_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_9_1)

CountSavory_2_9_2 = {
    "name": "CountSavory_2_9_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_9_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_9_2)

CountSavory_2_9_3 = {
    "name": "CountSavory_2_9_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_9_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_9_3)

CountSavory_2_10_0 = {
    "name": "CountSavory_2_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_10_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_10_0)

CountSavory_2_10_1 = {
    "name": "CountSavory_2_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_10_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_10_1)

CountSavory_2_10_2 = {
    "name": "CountSavory_2_10_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_10_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_10_2)

CountSavory_2_10_3 = {
    "name": "CountSavory_2_10_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_10_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_10_3)

CountSavory_2_11_0 = {
    "name": "CountSavory_2_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_11_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_11_0)

CountSavory_2_11_1 = {
    "name": "CountSavory_2_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_11_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_11_1)

CountSavory_2_11_2 = {
    "name": "CountSavory_2_11_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_11_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_11_2)

CountSavory_2_11_3 = {
    "name": "CountSavory_2_11_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_11_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_11_3)

CountSavory_2_12_0 = {
    "name": "CountSavory_2_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of people who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_12_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of people who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_12_0)

CountSavory_2_12_1 = {
    "name": "CountSavory_2_12_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of people who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_12_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of people who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_12_1)

CountSavory_2_12_2 = {
    "name": "CountSavory_2_12_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of people who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_12_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of people who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_12_2)

CountSavory_2_12_3 = {
    "name": "CountSavory_2_12_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of people who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_12_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of people who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_12_3)

CountSavory_2_13_0 = {
    "name": "CountSavory_2_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_13_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_13_0)

CountSavory_2_13_1 = {
    "name": "CountSavory_2_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_13_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_13_1)

CountSavory_2_13_2 = {
    "name": "CountSavory_2_13_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_13_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_13_2)

CountSavory_2_13_3 = {
    "name": "CountSavory_2_13_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_13_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_13_3)

CountSavory_2_14_0 = {
    "name": "CountSavory_2_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_14_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_14_0)

CountSavory_2_14_1 = {
    "name": "CountSavory_2_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_14_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_14_1)

CountSavory_2_14_2 = {
    "name": "CountSavory_2_14_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_14_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_14_2)

CountSavory_2_14_3 = {
    "name": "CountSavory_2_14_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_14_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_14_3)

CountSavory_2_15_0 = {
    "name": "CountSavory_2_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_15_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_15_0)

CountSavory_2_15_1 = {
    "name": "CountSavory_2_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_15_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_15_1)

CountSavory_2_15_2 = {
    "name": "CountSavory_2_15_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_15_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_15_2)

CountSavory_2_15_3 = {
    "name": "CountSavory_2_15_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_15_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_15_3)

CountSavory_2_16_0 = {
    "name": "CountSavory_2_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_16_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who opted for a savory item")
"""

ordered_field_buffer.append(CountSavory_2_16_0)

CountSavory_2_16_1 = {
    "name": "CountSavory_2_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_16_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who opted for a savory item")
"""

ordered_field_buffer.append(CountSavory_2_16_1)

CountSavory_2_16_2 = {
    "name": "CountSavory_2_16_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_16_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who opted for a savory item")
"""

ordered_field_buffer.append(CountSavory_2_16_2)

CountSavory_2_16_3 = {
    "name": "CountSavory_2_16_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_16_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who opted for a savory item")
"""

ordered_field_buffer.append(CountSavory_2_16_3)

CountSavory_2_17_0 = {
    "name": "CountSavory_2_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_17_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_17_0)

CountSavory_2_17_1 = {
    "name": "CountSavory_2_17_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_17_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_17_1)

CountSavory_2_17_2 = {
    "name": "CountSavory_2_17_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_17_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_17_2)

CountSavory_2_17_3 = {
    "name": "CountSavory_2_17_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_17_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_17_3)

CountSavory_2_18_0 = {
    "name": "CountSavory_2_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_18_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_18_0)

CountSavory_2_18_1 = {
    "name": "CountSavory_2_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_18_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_18_1)

CountSavory_2_18_2 = {
    "name": "CountSavory_2_18_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_18_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_18_2)

CountSavory_2_18_3 = {
    "name": "CountSavory_2_18_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_18_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_18_3)

CountSavory_2_19_0 = {
    "name": "CountSavory_2_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_19_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_19_0)

CountSavory_2_19_1 = {
    "name": "CountSavory_2_19_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_19_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_19_1)

CountSavory_2_19_2 = {
    "name": "CountSavory_2_19_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_19_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_19_2)

CountSavory_2_19_3 = {
    "name": "CountSavory_2_19_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_19_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_19_3)

CountSavory_2_20_0 = {
    "name": "CountSavory_2_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_20_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_20_0)

CountSavory_2_20_1 = {
    "name": "CountSavory_2_20_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_20_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_20_1)

CountSavory_2_20_2 = {
    "name": "CountSavory_2_20_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_20_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_20_2)

CountSavory_2_20_3 = {
    "name": "CountSavory_2_20_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_20_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_20_3)

CountSavory_2_21_0 = {
    "name": "CountSavory_2_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_21_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who opted for a savory item")
"""

ordered_field_buffer.append(CountSavory_2_21_0)

CountSavory_2_21_1 = {
    "name": "CountSavory_2_21_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_21_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who opted for a savory item")
"""

ordered_field_buffer.append(CountSavory_2_21_1)

CountSavory_2_21_2 = {
    "name": "CountSavory_2_21_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_21_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who opted for a savory item")
"""

ordered_field_buffer.append(CountSavory_2_21_2)

CountSavory_2_21_3 = {
    "name": "CountSavory_2_21_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who opted for a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_21_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who opted for a savory item")
"""

ordered_field_buffer.append(CountSavory_2_21_3)

CountSavory_2_22_0 = {
    "name": "CountSavory_2_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_22_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_22_0)

CountSavory_2_22_1 = {
    "name": "CountSavory_2_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_22_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_22_1)

CountSavory_2_22_2 = {
    "name": "CountSavory_2_22_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_22_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_22_2)

CountSavory_2_22_3 = {
    "name": "CountSavory_2_22_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_22_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_22_3)

CountSavory_2_23_0 = {
    "name": "CountSavory_2_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_23_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_23_0)

CountSavory_2_23_1 = {
    "name": "CountSavory_2_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_23_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_23_1)

CountSavory_2_23_2 = {
    "name": "CountSavory_2_23_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_23_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_23_2)

CountSavory_2_23_3 = {
    "name": "CountSavory_2_23_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_23_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_23_3)

CountSavory_2_24_0 = {
    "name": "CountSavory_2_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_24_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_24_0)

CountSavory_2_24_1 = {
    "name": "CountSavory_2_24_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_24_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_24_1)

CountSavory_2_24_2 = {
    "name": "CountSavory_2_24_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_24_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_24_2)

CountSavory_2_24_3 = {
    "name": "CountSavory_2_24_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_24_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_24_3)

CountSavory_2_25_0 = {
    "name": "CountSavory_2_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_25_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_25_0)

CountSavory_2_25_1 = {
    "name": "CountSavory_2_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_25_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_25_1)

CountSavory_2_25_2 = {
    "name": "CountSavory_2_25_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_25_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_25_2)

CountSavory_2_25_3 = {
    "name": "CountSavory_2_25_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_25_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_25_3)

CountSavory_2_26_0 = {
    "name": "CountSavory_2_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of people who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_26_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of people who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_26_0)

CountSavory_2_26_1 = {
    "name": "CountSavory_2_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of people who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_26_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of people who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_26_1)

CountSavory_2_26_2 = {
    "name": "CountSavory_2_26_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of people who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_26_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of people who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_26_2)

CountSavory_2_26_3 = {
    "name": "CountSavory_2_26_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of people who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_26_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of people who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_26_3)

CountSavory_2_27_0 = {
    "name": "CountSavory_2_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_27_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_27_0)

CountSavory_2_27_1 = {
    "name": "CountSavory_2_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_27_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_27_1)

CountSavory_2_27_2 = {
    "name": "CountSavory_2_27_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_27_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_27_2)

CountSavory_2_27_3 = {
    "name": "CountSavory_2_27_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_27_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_27_3)

CountSavory_2_28_0 = {
    "name": "CountSavory_2_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_28_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_28_0)

CountSavory_2_28_1 = {
    "name": "CountSavory_2_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_28_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_28_1)

CountSavory_2_28_2 = {
    "name": "CountSavory_2_28_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_28_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_28_2)

CountSavory_2_28_3 = {
    "name": "CountSavory_2_28_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_28_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_28_3)

CountSavory_2_29_0 = {
    "name": "CountSavory_2_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_29_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_29_0)

CountSavory_2_29_1 = {
    "name": "CountSavory_2_29_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_29_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_29_1)

CountSavory_2_29_2 = {
    "name": "CountSavory_2_29_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_29_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_29_2)

CountSavory_2_29_3 = {
    "name": "CountSavory_2_29_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_29_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_29_3)

CountSavory_2_30_0 = {
    "name": "CountSavory_2_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_30_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_30_0)

CountSavory_2_30_1 = {
    "name": "CountSavory_2_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_30_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_30_1)

CountSavory_2_30_2 = {
    "name": "CountSavory_2_30_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_30_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_30_2)

CountSavory_2_30_3 = {
    "name": "CountSavory_2_30_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_30_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_30_3)

CountSavory_2_31_0 = {
    "name": "CountSavory_2_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_31_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_31_0)

CountSavory_2_31_1 = {
    "name": "CountSavory_2_31_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_31_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_31_1)

CountSavory_2_31_2 = {
    "name": "CountSavory_2_31_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_31_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_31_2)

CountSavory_2_31_3 = {
    "name": "CountSavory_2_31_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_31_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_31_3)

CountSavory_2_32_0 = {
    "name": "CountSavory_2_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_32_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_32_0)

CountSavory_2_32_1 = {
    "name": "CountSavory_2_32_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_32_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_32_1)

CountSavory_2_32_2 = {
    "name": "CountSavory_2_32_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_32_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_32_2)

CountSavory_2_32_3 = {
    "name": "CountSavory_2_32_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_32_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_32_3)

CountSavory_2_33_0 = {
    "name": "CountSavory_2_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_33_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_33_0)

CountSavory_2_33_1 = {
    "name": "CountSavory_2_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_33_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_33_1)

CountSavory_2_33_2 = {
    "name": "CountSavory_2_33_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_33_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_33_2)

CountSavory_2_33_3 = {
    "name": "CountSavory_2_33_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_33_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_33_3)

CountSavory_2_34_0 = {
    "name": "CountSavory_2_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_34_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_34_0)

CountSavory_2_34_1 = {
    "name": "CountSavory_2_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_34_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_34_1)

CountSavory_2_34_2 = {
    "name": "CountSavory_2_34_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_34_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_34_2)

CountSavory_2_34_3 = {
    "name": "CountSavory_2_34_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_34_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_34_3)

CountSavory_2_35_0 = {
    "name": "CountSavory_2_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_35_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_35_0)

CountSavory_2_35_1 = {
    "name": "CountSavory_2_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_35_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_35_1)

CountSavory_2_35_2 = {
    "name": "CountSavory_2_35_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_35_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_35_2)

CountSavory_2_35_3 = {
    "name": "CountSavory_2_35_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_35_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_35_3)

CountSavory_2_36_0 = {
    "name": "CountSavory_2_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_36_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_36_0)

CountSavory_2_36_1 = {
    "name": "CountSavory_2_36_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_36_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_36_1)

CountSavory_2_36_2 = {
    "name": "CountSavory_2_36_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_36_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_36_2)

CountSavory_2_36_3 = {
    "name": "CountSavory_2_36_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_36_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_36_3)

CountSavory_2_37_0 = {
    "name": "CountSavory_2_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_37_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_37_0)

CountSavory_2_37_1 = {
    "name": "CountSavory_2_37_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_37_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_37_1)

CountSavory_2_37_2 = {
    "name": "CountSavory_2_37_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_37_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_37_2)

CountSavory_2_37_3 = {
    "name": "CountSavory_2_37_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_37_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_37_3)

CountSavory_2_38_0 = {
    "name": "CountSavory_2_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_38_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_38_0)

CountSavory_2_38_1 = {
    "name": "CountSavory_2_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_38_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_38_1)

CountSavory_2_38_2 = {
    "name": "CountSavory_2_38_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_38_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_38_2)

CountSavory_2_38_3 = {
    "name": "CountSavory_2_38_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_38_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_38_3)

CountSavory_2_39_0 = {
    "name": "CountSavory_2_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_39_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_39_0)

CountSavory_2_39_1 = {
    "name": "CountSavory_2_39_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_39_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_39_1)

CountSavory_2_39_2 = {
    "name": "CountSavory_2_39_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_39_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_39_2)

CountSavory_2_39_3 = {
    "name": "CountSavory_2_39_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_39_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_39_3)

CountSavory_2_40_0 = {
    "name": "CountSavory_2_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_40_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_40_0)

CountSavory_2_40_1 = {
    "name": "CountSavory_2_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_40_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_40_1)

CountSavory_2_40_2 = {
    "name": "CountSavory_2_40_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_40_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_40_2)

CountSavory_2_40_3 = {
    "name": "CountSavory_2_40_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_40_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_40_3)

CountSavory_2_41_0 = {
    "name": "CountSavory_2_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_41_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_41_0)

CountSavory_2_41_1 = {
    "name": "CountSavory_2_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_41_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_41_1)

CountSavory_2_41_2 = {
    "name": "CountSavory_2_41_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_41_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_41_2)

CountSavory_2_41_3 = {
    "name": "CountSavory_2_41_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_41_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_41_3)

CountSavory_2_42_0 = {
    "name": "CountSavory_2_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_42_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_42_0)

CountSavory_2_42_1 = {
    "name": "CountSavory_2_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_42_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_42_1)

CountSavory_2_42_2 = {
    "name": "CountSavory_2_42_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_42_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_42_2)

CountSavory_2_42_3 = {
    "name": "CountSavory_2_42_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_42_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_42_3)

CountSavory_2_43_0 = {
    "name": "CountSavory_2_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_43_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_43_0)

CountSavory_2_43_1 = {
    "name": "CountSavory_2_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_43_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_43_1)

CountSavory_2_43_2 = {
    "name": "CountSavory_2_43_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_43_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_43_2)

CountSavory_2_43_3 = {
    "name": "CountSavory_2_43_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_43_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_43_3)

CountSavory_2_44_0 = {
    "name": "CountSavory_2_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_44_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_44_0)

CountSavory_2_44_1 = {
    "name": "CountSavory_2_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_44_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_44_1)

CountSavory_2_44_2 = {
    "name": "CountSavory_2_44_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_44_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_44_2)

CountSavory_2_44_3 = {
    "name": "CountSavory_2_44_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_44_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_44_3)

CountSavory_2_45_0 = {
    "name": "CountSavory_2_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_45_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_45_0)

CountSavory_2_45_1 = {
    "name": "CountSavory_2_45_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_45_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_45_1)

CountSavory_2_45_2 = {
    "name": "CountSavory_2_45_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_45_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_45_2)

CountSavory_2_45_3 = {
    "name": "CountSavory_2_45_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_45_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_45_3)

CountSavory_2_46_0 = {
    "name": "CountSavory_2_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_46_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_46_0)

CountSavory_2_46_1 = {
    "name": "CountSavory_2_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_46_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_46_1)

CountSavory_2_46_2 = {
    "name": "CountSavory_2_46_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_46_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_46_2)

CountSavory_2_46_3 = {
    "name": "CountSavory_2_46_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_46_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_46_3)

CountSavory_2_47_0 = {
    "name": "CountSavory_2_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_47_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_47_0)

CountSavory_2_47_1 = {
    "name": "CountSavory_2_47_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_47_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_47_1)

CountSavory_2_47_2 = {
    "name": "CountSavory_2_47_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_47_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_47_2)

CountSavory_2_47_3 = {
    "name": "CountSavory_2_47_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_47_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_47_3)

CountSavory_2_48_0 = {
    "name": "CountSavory_2_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_48_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_48_0)

CountSavory_2_48_1 = {
    "name": "CountSavory_2_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_48_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_48_1)

CountSavory_2_48_2 = {
    "name": "CountSavory_2_48_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_48_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_48_2)

CountSavory_2_48_3 = {
    "name": "CountSavory_2_48_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_48_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_48_3)

CountSavory_2_49_0 = {
    "name": "CountSavory_2_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_49_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_49_0)

CountSavory_2_49_1 = {
    "name": "CountSavory_2_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_49_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_49_1)

CountSavory_2_49_2 = {
    "name": "CountSavory_2_49_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_49_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_49_2)

CountSavory_2_49_3 = {
    "name": "CountSavory_2_49_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of individuals who opted for a savory item: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_49_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef Jerky", "Ham Sandwich"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("Number of individuals who opted for a savory item: " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_2_49_3)

CountSavory_3_0_0 = {
    "name": "CountSavory_3_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_0_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_0_0)

CountSavory_3_0_1 = {
    "name": "CountSavory_3_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_0_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_0_1)

CountSavory_3_0_2 = {
    "name": "CountSavory_3_0_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_0_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_0_2)

CountSavory_3_0_3 = {
    "name": "CountSavory_3_0_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_0_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_0_3)

CountSavory_3_1_0 = {
    "name": "CountSavory_3_1_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you like better, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you like better, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you like better, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you like better, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_1_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you like better, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_1_0)

CountSavory_3_1_1 = {
    "name": "CountSavory_3_1_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you like better, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you like better, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you like better, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you like better, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_1_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you like better, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_1_1)

CountSavory_3_1_2 = {
    "name": "CountSavory_3_1_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you like better, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you like better, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you like better, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_1_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you like better, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_1_2)

CountSavory_3_1_3 = {
    "name": "CountSavory_3_1_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you like better, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you like better, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you like better, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_1_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you like better, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_1_3)

CountSavory_3_2_0 = {
    "name": "CountSavory_3_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_2_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_2_0)

CountSavory_3_2_1 = {
    "name": "CountSavory_3_2_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_2_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_2_1)

CountSavory_3_2_2 = {
    "name": "CountSavory_3_2_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_2_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_2_2)

CountSavory_3_2_3 = {
    "name": "CountSavory_3_2_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_2_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_2_3)

CountSavory_3_3_0 = {
    "name": "CountSavory_3_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_3_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_3_0)

CountSavory_3_3_1 = {
    "name": "CountSavory_3_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_3_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_3_1)

CountSavory_3_3_2 = {
    "name": "CountSavory_3_3_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_3_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_3_2)

CountSavory_3_3_3 = {
    "name": "CountSavory_3_3_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_3_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_3_3)

CountSavory_3_4_0 = {
    "name": "CountSavory_3_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_4_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_4_0)

CountSavory_3_4_1 = {
    "name": "CountSavory_3_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_4_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_4_1)

CountSavory_3_4_2 = {
    "name": "CountSavory_3_4_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_4_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_4_2)

CountSavory_3_4_3 = {
    "name": "CountSavory_3_4_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_4_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_4_3)

CountSavory_3_5_0 = {
    "name": "CountSavory_3_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which one do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which one do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which one do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which one do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_5_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which one do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_5_0)

CountSavory_3_5_1 = {
    "name": "CountSavory_3_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which one do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which one do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which one do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which one do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_5_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which one do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_5_1)

CountSavory_3_5_2 = {
    "name": "CountSavory_3_5_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which one do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which one do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which one do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_5_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which one do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_5_2)

CountSavory_3_5_3 = {
    "name": "CountSavory_3_5_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which one do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which one do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which one do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_5_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which one do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_5_3)

CountSavory_3_6_0 = {
    "name": "CountSavory_3_6_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_6_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_6_0)

CountSavory_3_6_1 = {
    "name": "CountSavory_3_6_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_6_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_6_1)

CountSavory_3_6_2 = {
    "name": "CountSavory_3_6_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_6_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_6_2)

CountSavory_3_6_3 = {
    "name": "CountSavory_3_6_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_6_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_6_3)

CountSavory_3_7_0 = {
    "name": "CountSavory_3_7_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_7_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_7_0)

CountSavory_3_7_1 = {
    "name": "CountSavory_3_7_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_7_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_7_1)

CountSavory_3_7_2 = {
    "name": "CountSavory_3_7_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_7_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_7_2)

CountSavory_3_7_3 = {
    "name": "CountSavory_3_7_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_7_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_7_3)

CountSavory_3_8_0 = {
    "name": "CountSavory_3_8_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_8_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky", "donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_8_0)

CountSavory_3_8_1 = {
    "name": "CountSavory_3_8_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_8_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky", "donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_8_1)

CountSavory_3_8_2 = {
    "name": "CountSavory_3_8_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_8_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky", "donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_8_2)

CountSavory_3_8_3 = {
    "name": "CountSavory_3_8_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_8_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky", "donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_8_3)

CountSavory_3_9_0 = {
    "name": "CountSavory_3_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_9_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_9_0)

CountSavory_3_9_1 = {
    "name": "CountSavory_3_9_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_9_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_9_1)

CountSavory_3_9_2 = {
    "name": "CountSavory_3_9_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_9_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_9_2)

CountSavory_3_9_3 = {
    "name": "CountSavory_3_9_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_9_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_9_3)

CountSavory_3_10_0 = {
    "name": "CountSavory_3_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_10_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_10_0)

CountSavory_3_10_1 = {
    "name": "CountSavory_3_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_10_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_10_1)

CountSavory_3_10_2 = {
    "name": "CountSavory_3_10_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_10_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_10_2)

CountSavory_3_10_3 = {
    "name": "CountSavory_3_10_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_10_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_10_3)

CountSavory_3_11_0 = {
    "name": "CountSavory_3_11_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_11_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_3_11_0)

CountSavory_3_11_1 = {
    "name": "CountSavory_3_11_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_11_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_3_11_1)

CountSavory_3_11_2 = {
    "name": "CountSavory_3_11_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_11_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_3_11_2)

CountSavory_3_11_3 = {
    "name": "CountSavory_3_11_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_11_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(savory_count))
"""

ordered_field_buffer.append(CountSavory_3_11_3)

CountSavory_3_12_0 = {
    "name": "CountSavory_3_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_12_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_12_0)

CountSavory_3_12_1 = {
    "name": "CountSavory_3_12_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_12_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_12_1)

CountSavory_3_12_2 = {
    "name": "CountSavory_3_12_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_12_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_12_2)

CountSavory_3_12_3 = {
    "name": "CountSavory_3_12_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_12_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_12_3)

CountSavory_3_13_0 = {
    "name": "CountSavory_3_13_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_13_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_13_0)

CountSavory_3_13_1 = {
    "name": "CountSavory_3_13_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_13_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_13_1)

CountSavory_3_13_2 = {
    "name": "CountSavory_3_13_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_13_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_13_2)

CountSavory_3_13_3 = {
    "name": "CountSavory_3_13_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_13_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_13_3)

CountSavory_3_14_0 = {
    "name": "CountSavory_3_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_14_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_14_0)

CountSavory_3_14_1 = {
    "name": "CountSavory_3_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_14_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_14_1)

CountSavory_3_14_2 = {
    "name": "CountSavory_3_14_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_14_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_14_2)

CountSavory_3_14_3 = {
    "name": "CountSavory_3_14_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_14_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_14_3)

CountSavory_3_15_0 = {
    "name": "CountSavory_3_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_15_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_15_0)

CountSavory_3_15_1 = {
    "name": "CountSavory_3_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_15_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_15_1)

CountSavory_3_15_2 = {
    "name": "CountSavory_3_15_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_15_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_15_2)

CountSavory_3_15_3 = {
    "name": "CountSavory_3_15_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_15_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_15_3)

CountSavory_3_16_0 = {
    "name": "CountSavory_3_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_16_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_16_0)

CountSavory_3_16_1 = {
    "name": "CountSavory_3_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_16_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_16_1)

CountSavory_3_16_2 = {
    "name": "CountSavory_3_16_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_16_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_16_2)

CountSavory_3_16_3 = {
    "name": "CountSavory_3_16_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_16_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_16_3)

CountSavory_3_17_0 = {
    "name": "CountSavory_3_17_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_17_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_17_0)

CountSavory_3_17_1 = {
    "name": "CountSavory_3_17_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_17_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_17_1)

CountSavory_3_17_2 = {
    "name": "CountSavory_3_17_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_17_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_17_2)

CountSavory_3_17_3 = {
    "name": "CountSavory_3_17_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_17_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_17_3)

CountSavory_3_18_0 = {
    "name": "CountSavory_3_18_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_18_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_18_0)

CountSavory_3_18_1 = {
    "name": "CountSavory_3_18_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_18_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_18_1)

CountSavory_3_18_2 = {
    "name": "CountSavory_3_18_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_18_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_18_2)

CountSavory_3_18_3 = {
    "name": "CountSavory_3_18_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_18_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_18_3)

CountSavory_3_19_0 = {
    "name": "CountSavory_3_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_19_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_19_0)

CountSavory_3_19_1 = {
    "name": "CountSavory_3_19_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_19_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_19_1)

CountSavory_3_19_2 = {
    "name": "CountSavory_3_19_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_19_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_19_2)

CountSavory_3_19_3 = {
    "name": "CountSavory_3_19_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_19_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_19_3)

CountSavory_3_20_0 = {
    "name": "CountSavory_3_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_20_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_20_0)

CountSavory_3_20_1 = {
    "name": "CountSavory_3_20_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_20_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_20_1)

CountSavory_3_20_2 = {
    "name": "CountSavory_3_20_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_20_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_20_2)

CountSavory_3_20_3 = {
    "name": "CountSavory_3_20_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_20_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_20_3)

CountSavory_3_21_0 = {
    "name": "CountSavory_3_21_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_21_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_21_0)

CountSavory_3_21_1 = {
    "name": "CountSavory_3_21_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_21_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_21_1)

CountSavory_3_21_2 = {
    "name": "CountSavory_3_21_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_21_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_21_2)

CountSavory_3_21_3 = {
    "name": "CountSavory_3_21_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_21_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_21_3)

CountSavory_3_22_0 = {
    "name": "CountSavory_3_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_22_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to have?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_22_0)

CountSavory_3_22_1 = {
    "name": "CountSavory_3_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_22_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to have?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_22_1)

CountSavory_3_22_2 = {
    "name": "CountSavory_3_22_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_22_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to have?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_22_2)

CountSavory_3_22_3 = {
    "name": "CountSavory_3_22_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to have? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_22_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to have?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_22_3)

CountSavory_3_23_0 = {
    "name": "CountSavory_3_23_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_23_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_23_0)

CountSavory_3_23_1 = {
    "name": "CountSavory_3_23_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_23_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_23_1)

CountSavory_3_23_2 = {
    "name": "CountSavory_3_23_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_23_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_23_2)

CountSavory_3_23_3 = {
    "name": "CountSavory_3_23_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_23_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_23_3)

CountSavory_3_24_0 = {
    "name": "CountSavory_3_24_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_24_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_24_0)

CountSavory_3_24_1 = {
    "name": "CountSavory_3_24_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_24_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_24_1)

CountSavory_3_24_2 = {
    "name": "CountSavory_3_24_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_24_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_24_2)

CountSavory_3_24_3 = {
    "name": "CountSavory_3_24_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_24_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_24_3)

CountSavory_3_25_0 = {
    "name": "CountSavory_3_25_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_25_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_25_0)

CountSavory_3_25_1 = {
    "name": "CountSavory_3_25_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_25_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_25_1)

CountSavory_3_25_2 = {
    "name": "CountSavory_3_25_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_25_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_25_2)

CountSavory_3_25_3 = {
    "name": "CountSavory_3_25_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_25_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_25_3)

CountSavory_3_26_0 = {
    "name": "CountSavory_3_26_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_26_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_26_0)

CountSavory_3_26_1 = {
    "name": "CountSavory_3_26_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_26_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_26_1)

CountSavory_3_26_2 = {
    "name": "CountSavory_3_26_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_26_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_26_2)

CountSavory_3_26_3 = {
    "name": "CountSavory_3_26_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_26_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_26_3)

CountSavory_3_27_0 = {
    "name": "CountSavory_3_27_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_27_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_27_0)

CountSavory_3_27_1 = {
    "name": "CountSavory_3_27_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_27_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_27_1)

CountSavory_3_27_2 = {
    "name": "CountSavory_3_27_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_27_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_27_2)

CountSavory_3_27_3 = {
    "name": "CountSavory_3_27_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_27_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_27_3)

CountSavory_3_28_0 = {
    "name": "CountSavory_3_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_28_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_28_0)

CountSavory_3_28_1 = {
    "name": "CountSavory_3_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_28_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_28_1)

CountSavory_3_28_2 = {
    "name": "CountSavory_3_28_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_28_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_28_2)

CountSavory_3_28_3 = {
    "name": "CountSavory_3_28_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_28_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_28_3)

CountSavory_3_29_0 = {
    "name": "CountSavory_3_29_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_29_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_29_0)

CountSavory_3_29_1 = {
    "name": "CountSavory_3_29_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_29_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_29_1)

CountSavory_3_29_2 = {
    "name": "CountSavory_3_29_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_29_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_29_2)

CountSavory_3_29_3 = {
    "name": "CountSavory_3_29_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_29_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_29_3)

CountSavory_3_30_0 = {
    "name": "CountSavory_3_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_30_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_30_0)

CountSavory_3_30_1 = {
    "name": "CountSavory_3_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_30_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_30_1)

CountSavory_3_30_2 = {
    "name": "CountSavory_3_30_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_30_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_30_2)

CountSavory_3_30_3 = {
    "name": "CountSavory_3_30_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_30_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_30_3)

CountSavory_3_31_0 = {
    "name": "CountSavory_3_31_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_31_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_31_0)

CountSavory_3_31_1 = {
    "name": "CountSavory_3_31_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_31_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_31_1)

CountSavory_3_31_2 = {
    "name": "CountSavory_3_31_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_31_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_31_2)

CountSavory_3_31_3 = {
    "name": "CountSavory_3_31_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_31_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_31_3)

CountSavory_3_32_0 = {
    "name": "CountSavory_3_32_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_32_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_32_0)

CountSavory_3_32_1 = {
    "name": "CountSavory_3_32_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_32_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_32_1)

CountSavory_3_32_2 = {
    "name": "CountSavory_3_32_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_32_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_32_2)

CountSavory_3_32_3 = {
    "name": "CountSavory_3_32_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_32_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_32_3)

CountSavory_3_33_0 = {
    "name": "CountSavory_3_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what do you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what do you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what do you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what do you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_33_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What do you like?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_33_0)

CountSavory_3_33_1 = {
    "name": "CountSavory_3_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what do you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what do you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what do you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what do you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_33_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What do you like?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_33_1)

CountSavory_3_33_2 = {
    "name": "CountSavory_3_33_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what do you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what do you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what do you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_33_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What do you like?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_33_2)

CountSavory_3_33_3 = {
    "name": "CountSavory_3_33_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what do you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what do you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what do you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_33_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What do you like?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_33_3)

CountSavory_3_34_0 = {
    "name": "CountSavory_3_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_34_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_34_0)

CountSavory_3_34_1 = {
    "name": "CountSavory_3_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_34_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_34_1)

CountSavory_3_34_2 = {
    "name": "CountSavory_3_34_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_34_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_34_2)

CountSavory_3_34_3 = {
    "name": "CountSavory_3_34_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_34_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_34_3)

CountSavory_3_35_0 = {
    "name": "CountSavory_3_35_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_35_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_35_0)

CountSavory_3_35_1 = {
    "name": "CountSavory_3_35_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_35_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_35_1)

CountSavory_3_35_2 = {
    "name": "CountSavory_3_35_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_35_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_35_2)

CountSavory_3_35_3 = {
    "name": "CountSavory_3_35_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_35_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like? Cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_35_3)

CountSavory_3_36_0 = {
    "name": "CountSavory_3_36_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_36_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_36_0)

CountSavory_3_36_1 = {
    "name": "CountSavory_3_36_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_36_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_36_1)

CountSavory_3_36_2 = {
    "name": "CountSavory_3_36_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_36_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_36_2)

CountSavory_3_36_3 = {
    "name": "CountSavory_3_36_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_36_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_36_3)

CountSavory_3_37_0 = {
    "name": "CountSavory_3_37_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_37_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_37_0)

CountSavory_3_37_1 = {
    "name": "CountSavory_3_37_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_37_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_37_1)

CountSavory_3_37_2 = {
    "name": "CountSavory_3_37_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_37_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_37_2)

CountSavory_3_37_3 = {
    "name": "CountSavory_3_37_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_37_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_37_3)

CountSavory_3_38_0 = {
    "name": "CountSavory_3_38_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_38_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_38_0)

CountSavory_3_38_1 = {
    "name": "CountSavory_3_38_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_38_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_38_1)

CountSavory_3_38_2 = {
    "name": "CountSavory_3_38_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_38_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_38_2)

CountSavory_3_38_3 = {
    "name": "CountSavory_3_38_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_38_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_38_3)

CountSavory_3_39_0 = {
    "name": "CountSavory_3_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_39_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_39_0)

CountSavory_3_39_1 = {
    "name": "CountSavory_3_39_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_39_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_39_1)

CountSavory_3_39_2 = {
    "name": "CountSavory_3_39_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_39_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_39_2)

CountSavory_3_39_3 = {
    "name": "CountSavory_3_39_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_39_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_39_3)

CountSavory_3_40_0 = {
    "name": "CountSavory_3_40_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_40_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_40_0)

CountSavory_3_40_1 = {
    "name": "CountSavory_3_40_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_40_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_40_1)

CountSavory_3_40_2 = {
    "name": "CountSavory_3_40_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_40_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_40_2)

CountSavory_3_40_3 = {
    "name": "CountSavory_3_40_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_40_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_40_3)

CountSavory_3_41_0 = {
    "name": "CountSavory_3_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_41_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_41_0)

CountSavory_3_41_1 = {
    "name": "CountSavory_3_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_41_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_41_1)

CountSavory_3_41_2 = {
    "name": "CountSavory_3_41_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_41_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_41_2)

CountSavory_3_41_3 = {
    "name": "CountSavory_3_41_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_41_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_41_3)

CountSavory_3_42_0 = {
    "name": "CountSavory_3_42_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_42_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_42_0)

CountSavory_3_42_1 = {
    "name": "CountSavory_3_42_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_42_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_42_1)

CountSavory_3_42_2 = {
    "name": "CountSavory_3_42_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_42_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_42_2)

CountSavory_3_42_3 = {
    "name": "CountSavory_3_42_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer, cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_42_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer, cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_42_3)

CountSavory_3_43_0 = {
    "name": "CountSavory_3_43_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_43_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_43_0)

CountSavory_3_43_1 = {
    "name": "CountSavory_3_43_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_43_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_43_1)

CountSavory_3_43_2 = {
    "name": "CountSavory_3_43_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_43_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_43_2)

CountSavory_3_43_3 = {
    "name": "CountSavory_3_43_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_43_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_43_3)

CountSavory_3_44_0 = {
    "name": "CountSavory_3_44_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_44_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_44_0)

CountSavory_3_44_1 = {
    "name": "CountSavory_3_44_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_44_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_44_1)

CountSavory_3_44_2 = {
    "name": "CountSavory_3_44_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_44_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_44_2)

CountSavory_3_44_3 = {
    "name": "CountSavory_3_44_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_44_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_44_3)

CountSavory_3_45_0 = {
    "name": "CountSavory_3_45_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_45_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_45_0)

CountSavory_3_45_1 = {
    "name": "CountSavory_3_45_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_45_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_45_1)

CountSavory_3_45_2 = {
    "name": "CountSavory_3_45_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_45_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_45_2)

CountSavory_3_45_3 = {
    "name": "CountSavory_3_45_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_45_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, ham sandwich, beef jerky, or donut?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky", "Donut"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_45_3)

CountSavory_3_46_0 = {
    "name": "CountSavory_3_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_46_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_46_0)

CountSavory_3_46_1 = {
    "name": "CountSavory_3_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_46_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_46_1)

CountSavory_3_46_2 = {
    "name": "CountSavory_3_46_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_46_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_46_2)

CountSavory_3_46_3 = {
    "name": "CountSavory_3_46_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you like? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_46_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you like?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_46_3)

CountSavory_3_47_0 = {
    "name": "CountSavory_3_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_47_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_47_0)

CountSavory_3_47_1 = {
    "name": "CountSavory_3_47_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_47_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_47_1)

CountSavory_3_47_2 = {
    "name": "CountSavory_3_47_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_47_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_47_2)

CountSavory_3_47_3 = {
    "name": "CountSavory_3_47_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_47_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham Sandwich", "Beef Jerky", "Donut"])
            if response in ["Ham Sandwich", "Beef Jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_47_3)

CountSavory_3_48_0 = {
    "name": "CountSavory_3_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_48_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_48_0)

CountSavory_3_48_1 = {
    "name": "CountSavory_3_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_48_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_48_1)

CountSavory_3_48_2 = {
    "name": "CountSavory_3_48_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_48_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_48_2)

CountSavory_3_48_3 = {
    "name": "CountSavory_3_48_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_48_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_48_3)

CountSavory_3_49_0 = {
    "name": "CountSavory_3_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_49_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_49_0)

CountSavory_3_49_1 = {
    "name": "CountSavory_3_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_49_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_49_1)

CountSavory_3_49_2 = {
    "name": "CountSavory_3_49_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_49_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_49_2)

CountSavory_3_49_3 = {
    "name": "CountSavory_3_49_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which do you prefer? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_49_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which do you prefer?", ["Cupcake", "Ham sandwich", "Beef jerky", "Donut"])
            if response in ["Ham sandwich", "Beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who went for a savory option")
"""

ordered_field_buffer.append(CountSavory_3_49_3)

CountSavory_4_0_0 = {
    "name": "CountSavory_4_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_0_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_0_0)

CountSavory_4_0_1 = {
    "name": "CountSavory_4_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_0_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_0_1)

CountSavory_4_0_2 = {
    "name": "CountSavory_4_0_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_0_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_0_2)

CountSavory_4_0_3 = {
    "name": "CountSavory_4_0_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_0_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_0_3)

CountSavory_4_1_0 = {
    "name": "CountSavory_4_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_1_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_1_0)

CountSavory_4_1_1 = {
    "name": "CountSavory_4_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_1_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_1_1)

CountSavory_4_1_2 = {
    "name": "CountSavory_4_1_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_1_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_1_2)

CountSavory_4_1_3 = {
    "name": "CountSavory_4_1_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_1_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_1_3)

CountSavory_4_2_0 = {
    "name": "CountSavory_4_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_2_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_2_0)

CountSavory_4_2_1 = {
    "name": "CountSavory_4_2_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_2_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_2_1)

CountSavory_4_2_2 = {
    "name": "CountSavory_4_2_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_2_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_2_2)

CountSavory_4_2_3 = {
    "name": "CountSavory_4_2_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_2_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_2_3)

CountSavory_4_3_0 = {
    "name": "CountSavory_4_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_3_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_3_0)

CountSavory_4_3_1 = {
    "name": "CountSavory_4_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_3_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_3_1)

CountSavory_4_3_2 = {
    "name": "CountSavory_4_3_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_3_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_3_2)

CountSavory_4_3_3 = {
    "name": "CountSavory_4_3_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_3_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_3_3)

CountSavory_4_4_0 = {
    "name": "CountSavory_4_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_4_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_4_0)

CountSavory_4_4_1 = {
    "name": "CountSavory_4_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_4_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_4_1)

CountSavory_4_4_2 = {
    "name": "CountSavory_4_4_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_4_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_4_2)

CountSavory_4_4_3 = {
    "name": "CountSavory_4_4_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_4_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_4_3)

CountSavory_4_5_0 = {
    "name": "CountSavory_4_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_5_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_5_0)

CountSavory_4_5_1 = {
    "name": "CountSavory_4_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_5_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_5_1)

CountSavory_4_5_2 = {
    "name": "CountSavory_4_5_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_5_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_5_2)

CountSavory_4_5_3 = {
    "name": "CountSavory_4_5_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_5_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_5_3)

CountSavory_4_6_0 = {
    "name": "CountSavory_4_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_6_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_6_0)

CountSavory_4_6_1 = {
    "name": "CountSavory_4_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_6_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_6_1)

CountSavory_4_6_2 = {
    "name": "CountSavory_4_6_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_6_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_6_2)

CountSavory_4_6_3 = {
    "name": "CountSavory_4_6_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_6_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_6_3)

CountSavory_4_7_0 = {
    "name": "CountSavory_4_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_7_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_7_0)

CountSavory_4_7_1 = {
    "name": "CountSavory_4_7_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_7_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_7_1)

CountSavory_4_7_2 = {
    "name": "CountSavory_4_7_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_7_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_7_2)

CountSavory_4_7_3 = {
    "name": "CountSavory_4_7_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_7_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_7_3)

CountSavory_4_8_0 = {
    "name": "CountSavory_4_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_8_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_8_0)

CountSavory_4_8_1 = {
    "name": "CountSavory_4_8_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_8_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_8_1)

CountSavory_4_8_2 = {
    "name": "CountSavory_4_8_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_8_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_8_2)

CountSavory_4_8_3 = {
    "name": "CountSavory_4_8_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_8_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_8_3)

CountSavory_4_9_0 = {
    "name": "CountSavory_4_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_9_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_9_0)

CountSavory_4_9_1 = {
    "name": "CountSavory_4_9_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_9_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_9_1)

CountSavory_4_9_2 = {
    "name": "CountSavory_4_9_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_9_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_9_2)

CountSavory_4_9_3 = {
    "name": "CountSavory_4_9_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_9_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_9_3)

CountSavory_4_10_0 = {
    "name": "CountSavory_4_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_10_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_10_0)

CountSavory_4_10_1 = {
    "name": "CountSavory_4_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_10_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_10_1)

CountSavory_4_10_2 = {
    "name": "CountSavory_4_10_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_10_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_10_2)

CountSavory_4_10_3 = {
    "name": "CountSavory_4_10_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_10_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_10_3)

CountSavory_4_11_0 = {
    "name": "CountSavory_4_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_11_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_11_0)

CountSavory_4_11_1 = {
    "name": "CountSavory_4_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_11_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_11_1)

CountSavory_4_11_2 = {
    "name": "CountSavory_4_11_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_11_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_11_2)

CountSavory_4_11_3 = {
    "name": "CountSavory_4_11_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_11_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_11_3)

CountSavory_4_12_0 = {
    "name": "CountSavory_4_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_12_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_12_0)

CountSavory_4_12_1 = {
    "name": "CountSavory_4_12_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_12_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_12_1)

CountSavory_4_12_2 = {
    "name": "CountSavory_4_12_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_12_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_12_2)

CountSavory_4_12_3 = {
    "name": "CountSavory_4_12_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_12_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_12_3)

CountSavory_4_13_0 = {
    "name": "CountSavory_4_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_13_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef jerky", "Cupcake", "Ham sandwich", "Donut"])
            if response in ["Beef jerky", "Ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_13_0)

CountSavory_4_13_1 = {
    "name": "CountSavory_4_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_13_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef jerky", "Cupcake", "Ham sandwich", "Donut"])
            if response in ["Beef jerky", "Ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_13_1)

CountSavory_4_13_2 = {
    "name": "CountSavory_4_13_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_13_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef jerky", "Cupcake", "Ham sandwich", "Donut"])
            if response in ["Beef jerky", "Ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_13_2)

CountSavory_4_13_3 = {
    "name": "CountSavory_4_13_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_13_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef jerky", "Cupcake", "Ham sandwich", "Donut"])
            if response in ["Beef jerky", "Ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_13_3)

CountSavory_4_14_0 = {
    "name": "CountSavory_4_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_14_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_14_0)

CountSavory_4_14_1 = {
    "name": "CountSavory_4_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_14_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_14_1)

CountSavory_4_14_2 = {
    "name": "CountSavory_4_14_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_14_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_14_2)

CountSavory_4_14_3 = {
    "name": "CountSavory_4_14_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_14_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_14_3)

CountSavory_4_15_0 = {
    "name": "CountSavory_4_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_15_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_15_0)

CountSavory_4_15_1 = {
    "name": "CountSavory_4_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_15_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_15_1)

CountSavory_4_15_2 = {
    "name": "CountSavory_4_15_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_15_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_15_2)

CountSavory_4_15_3 = {
    "name": "CountSavory_4_15_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_15_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_15_3)

CountSavory_4_16_0 = {
    "name": "CountSavory_4_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_16_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_16_0)

CountSavory_4_16_1 = {
    "name": "CountSavory_4_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_16_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_16_1)

CountSavory_4_16_2 = {
    "name": "CountSavory_4_16_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_16_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_16_2)

CountSavory_4_16_3 = {
    "name": "CountSavory_4_16_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_16_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_16_3)

CountSavory_4_17_0 = {
    "name": "CountSavory_4_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_17_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_17_0)

CountSavory_4_17_1 = {
    "name": "CountSavory_4_17_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_17_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_17_1)

CountSavory_4_17_2 = {
    "name": "CountSavory_4_17_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_17_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_17_2)

CountSavory_4_17_3 = {
    "name": "CountSavory_4_17_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_17_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_17_3)

CountSavory_4_18_0 = {
    "name": "CountSavory_4_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_18_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_18_0)

CountSavory_4_18_1 = {
    "name": "CountSavory_4_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_18_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_18_1)

CountSavory_4_18_2 = {
    "name": "CountSavory_4_18_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_18_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_18_2)

CountSavory_4_18_3 = {
    "name": "CountSavory_4_18_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_18_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response == "Beef Jerky" or response == "Ham Sandwich":
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_18_3)

CountSavory_4_19_0 = {
    "name": "CountSavory_4_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_19_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_19_0)

CountSavory_4_19_1 = {
    "name": "CountSavory_4_19_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_19_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_19_1)

CountSavory_4_19_2 = {
    "name": "CountSavory_4_19_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_19_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_19_2)

CountSavory_4_19_3 = {
    "name": "CountSavory_4_19_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_19_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_19_3)

CountSavory_4_20_0 = {
    "name": "CountSavory_4_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_20_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_20_0)

CountSavory_4_20_1 = {
    "name": "CountSavory_4_20_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_20_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_20_1)

CountSavory_4_20_2 = {
    "name": "CountSavory_4_20_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_20_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_20_2)

CountSavory_4_20_3 = {
    "name": "CountSavory_4_20_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_20_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_20_3)

CountSavory_4_21_0 = {
    "name": "CountSavory_4_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_21_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_21_0)

CountSavory_4_21_1 = {
    "name": "CountSavory_4_21_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_21_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_21_1)

CountSavory_4_21_2 = {
    "name": "CountSavory_4_21_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_21_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_21_2)

CountSavory_4_21_3 = {
    "name": "CountSavory_4_21_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_21_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_21_3)

CountSavory_4_22_0 = {
    "name": "CountSavory_4_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_22_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_22_0)

CountSavory_4_22_1 = {
    "name": "CountSavory_4_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_22_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_22_1)

CountSavory_4_22_2 = {
    "name": "CountSavory_4_22_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_22_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_22_2)

CountSavory_4_22_3 = {
    "name": "CountSavory_4_22_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_22_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_22_3)

CountSavory_4_23_0 = {
    "name": "CountSavory_4_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_23_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_23_0)

CountSavory_4_23_1 = {
    "name": "CountSavory_4_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_23_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_23_1)

CountSavory_4_23_2 = {
    "name": "CountSavory_4_23_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_23_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_23_2)

CountSavory_4_23_3 = {
    "name": "CountSavory_4_23_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_23_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_23_3)

CountSavory_4_24_0 = {
    "name": "CountSavory_4_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_24_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_24_0)

CountSavory_4_24_1 = {
    "name": "CountSavory_4_24_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_24_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_24_1)

CountSavory_4_24_2 = {
    "name": "CountSavory_4_24_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_24_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_24_2)

CountSavory_4_24_3 = {
    "name": "CountSavory_4_24_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_24_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_24_3)

CountSavory_4_25_0 = {
    "name": "CountSavory_4_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_25_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_25_0)

CountSavory_4_25_1 = {
    "name": "CountSavory_4_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_25_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_25_1)

CountSavory_4_25_2 = {
    "name": "CountSavory_4_25_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_25_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_25_2)

CountSavory_4_25_3 = {
    "name": "CountSavory_4_25_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_25_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_25_3)

CountSavory_4_26_0 = {
    "name": "CountSavory_4_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_26_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_26_0)

CountSavory_4_26_1 = {
    "name": "CountSavory_4_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_26_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_26_1)

CountSavory_4_26_2 = {
    "name": "CountSavory_4_26_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_26_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_26_2)

CountSavory_4_26_3 = {
    "name": "CountSavory_4_26_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_26_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_26_3)

CountSavory_4_27_0 = {
    "name": "CountSavory_4_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_27_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_27_0)

CountSavory_4_27_1 = {
    "name": "CountSavory_4_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_27_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_27_1)

CountSavory_4_27_2 = {
    "name": "CountSavory_4_27_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_27_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_27_2)

CountSavory_4_27_3 = {
    "name": "CountSavory_4_27_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_27_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_27_3)

CountSavory_4_28_0 = {
    "name": "CountSavory_4_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_28_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_28_0)

CountSavory_4_28_1 = {
    "name": "CountSavory_4_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_28_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_28_1)

CountSavory_4_28_2 = {
    "name": "CountSavory_4_28_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_28_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_28_2)

CountSavory_4_28_3 = {
    "name": "CountSavory_4_28_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_28_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_28_3)

CountSavory_4_29_0 = {
    "name": "CountSavory_4_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_29_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_29_0)

CountSavory_4_29_1 = {
    "name": "CountSavory_4_29_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_29_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_29_1)

CountSavory_4_29_2 = {
    "name": "CountSavory_4_29_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_29_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_29_2)

CountSavory_4_29_3 = {
    "name": "CountSavory_4_29_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_29_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_29_3)

CountSavory_4_30_0 = {
    "name": "CountSavory_4_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_30_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_30_0)

CountSavory_4_30_1 = {
    "name": "CountSavory_4_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_30_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_30_1)

CountSavory_4_30_2 = {
    "name": "CountSavory_4_30_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_30_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_30_2)

CountSavory_4_30_3 = {
    "name": "CountSavory_4_30_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_30_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_30_3)

CountSavory_4_31_0 = {
    "name": "CountSavory_4_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_31_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_31_0)

CountSavory_4_31_1 = {
    "name": "CountSavory_4_31_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_31_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_31_1)

CountSavory_4_31_2 = {
    "name": "CountSavory_4_31_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_31_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_31_2)

CountSavory_4_31_3 = {
    "name": "CountSavory_4_31_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_31_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_31_3)

CountSavory_4_32_0 = {
    "name": "CountSavory_4_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_32_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_32_0)

CountSavory_4_32_1 = {
    "name": "CountSavory_4_32_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_32_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_32_1)

CountSavory_4_32_2 = {
    "name": "CountSavory_4_32_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_32_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_32_2)

CountSavory_4_32_3 = {
    "name": "CountSavory_4_32_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_32_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_32_3)

CountSavory_4_33_0 = {
    "name": "CountSavory_4_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_33_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_33_0)

CountSavory_4_33_1 = {
    "name": "CountSavory_4_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_33_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_33_1)

CountSavory_4_33_2 = {
    "name": "CountSavory_4_33_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_33_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_33_2)

CountSavory_4_33_3 = {
    "name": "CountSavory_4_33_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_33_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_33_3)

CountSavory_4_34_0 = {
    "name": "CountSavory_4_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_34_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_34_0)

CountSavory_4_34_1 = {
    "name": "CountSavory_4_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_34_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_34_1)

CountSavory_4_34_2 = {
    "name": "CountSavory_4_34_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_34_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_34_2)

CountSavory_4_34_3 = {
    "name": "CountSavory_4_34_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_34_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_34_3)

CountSavory_4_35_0 = {
    "name": "CountSavory_4_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_35_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_35_0)

CountSavory_4_35_1 = {
    "name": "CountSavory_4_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_35_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_35_1)

CountSavory_4_35_2 = {
    "name": "CountSavory_4_35_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_35_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_35_2)

CountSavory_4_35_3 = {
    "name": "CountSavory_4_35_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_35_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_35_3)

CountSavory_4_36_0 = {
    "name": "CountSavory_4_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_36_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preference_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preference_count += 1
    go_to(start_loc)
    say(str(savory_preference_count) + " people preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_36_0)

CountSavory_4_36_1 = {
    "name": "CountSavory_4_36_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_36_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preference_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preference_count += 1
    go_to(start_loc)
    say(str(savory_preference_count) + " people preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_36_1)

CountSavory_4_36_2 = {
    "name": "CountSavory_4_36_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_36_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preference_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preference_count += 1
    go_to(start_loc)
    say(str(savory_preference_count) + " people preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_36_2)

CountSavory_4_36_3 = {
    "name": "CountSavory_4_36_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_36_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preference_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preference_count += 1
    go_to(start_loc)
    say(str(savory_preference_count) + " people preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_36_3)

CountSavory_4_37_0 = {
    "name": "CountSavory_4_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_37_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_37_0)

CountSavory_4_37_1 = {
    "name": "CountSavory_4_37_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_37_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_37_1)

CountSavory_4_37_2 = {
    "name": "CountSavory_4_37_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_37_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_37_2)

CountSavory_4_37_3 = {
    "name": "CountSavory_4_37_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_37_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_37_3)

CountSavory_4_38_0 = {
    "name": "CountSavory_4_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_38_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_38_0)

CountSavory_4_38_1 = {
    "name": "CountSavory_4_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_38_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_38_1)

CountSavory_4_38_2 = {
    "name": "CountSavory_4_38_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_38_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_38_2)

CountSavory_4_38_3 = {
    "name": "CountSavory_4_38_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_38_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_preferences = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_preferences += 1
    go_to(start_loc)
    say("There were " + str(savory_preferences) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_38_3)

CountSavory_4_39_0 = {
    "name": "CountSavory_4_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_39_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_39_0)

CountSavory_4_39_1 = {
    "name": "CountSavory_4_39_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_39_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_39_1)

CountSavory_4_39_2 = {
    "name": "CountSavory_4_39_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_39_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_39_2)

CountSavory_4_39_3 = {
    "name": "CountSavory_4_39_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_39_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_39_3)

CountSavory_4_40_0 = {
    "name": "CountSavory_4_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_40_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_40_0)

CountSavory_4_40_1 = {
    "name": "CountSavory_4_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_40_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_40_1)

CountSavory_4_40_2 = {
    "name": "CountSavory_4_40_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_40_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_40_2)

CountSavory_4_40_3 = {
    "name": "CountSavory_4_40_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_40_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_40_3)

CountSavory_4_41_0 = {
    "name": "CountSavory_4_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_41_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_41_0)

CountSavory_4_41_1 = {
    "name": "CountSavory_4_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_41_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_41_1)

CountSavory_4_41_2 = {
    "name": "CountSavory_4_41_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_41_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_41_2)

CountSavory_4_41_3 = {
    "name": "CountSavory_4_41_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_41_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_41_3)

CountSavory_4_42_0 = {
    "name": "CountSavory_4_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_42_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_42_0)

CountSavory_4_42_1 = {
    "name": "CountSavory_4_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_42_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_42_1)

CountSavory_4_42_2 = {
    "name": "CountSavory_4_42_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_42_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_42_2)

CountSavory_4_42_3 = {
    "name": "CountSavory_4_42_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_42_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_42_3)

CountSavory_4_43_0 = {
    "name": "CountSavory_4_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_43_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_43_0)

CountSavory_4_43_1 = {
    "name": "CountSavory_4_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_43_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_43_1)

CountSavory_4_43_2 = {
    "name": "CountSavory_4_43_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_43_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_43_2)

CountSavory_4_43_3 = {
    "name": "CountSavory_4_43_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_43_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_43_3)

CountSavory_4_44_0 = {
    "name": "CountSavory_4_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_44_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_44_0)

CountSavory_4_44_1 = {
    "name": "CountSavory_4_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_44_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_44_1)

CountSavory_4_44_2 = {
    "name": "CountSavory_4_44_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_44_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_44_2)

CountSavory_4_44_3 = {
    "name": "CountSavory_4_44_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_44_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_44_3)

CountSavory_4_45_0 = {
    "name": "CountSavory_4_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_45_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_45_0)

CountSavory_4_45_1 = {
    "name": "CountSavory_4_45_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_45_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_45_1)

CountSavory_4_45_2 = {
    "name": "CountSavory_4_45_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_45_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_45_2)

CountSavory_4_45_3 = {
    "name": "CountSavory_4_45_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_45_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_45_3)

CountSavory_4_46_0 = {
    "name": "CountSavory_4_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 0 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_46_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_46_0)

CountSavory_4_46_1 = {
    "name": "CountSavory_4_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_46_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_46_1)

CountSavory_4_46_2 = {
    "name": "CountSavory_4_46_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_46_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_46_2)

CountSavory_4_46_3 = {
    "name": "CountSavory_4_46_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_46_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_46_3)

CountSavory_4_47_0 = {
    "name": "CountSavory_4_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_47_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_47_0)

CountSavory_4_47_1 = {
    "name": "CountSavory_4_47_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_47_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_47_1)

CountSavory_4_47_2 = {
    "name": "CountSavory_4_47_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_47_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_47_2)

CountSavory_4_47_3 = {
    "name": "CountSavory_4_47_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_47_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if "Beef Jerky" in response or "Ham Sandwich" in response:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")
"""

ordered_field_buffer.append(CountSavory_4_47_3)

CountSavory_4_48_0 = {
    "name": "CountSavory_4_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_48_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_48_0)

CountSavory_4_48_1 = {
    "name": "CountSavory_4_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_48_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_48_1)

CountSavory_4_48_2 = {
    "name": "CountSavory_4_48_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_48_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_48_2)

CountSavory_4_48_3 = {
    "name": "CountSavory_4_48_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_48_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_48_3)

CountSavory_4_49_0 = {
    "name": "CountSavory_4_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_49_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_49_0)

CountSavory_4_49_1 = {
    "name": "CountSavory_4_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_49_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_49_1)

CountSavory_4_49_2 = {
    "name": "CountSavory_4_49_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_49_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_49_2)

CountSavory_4_49_3 = {
    "name": "CountSavory_4_49_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_49_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["Beef Jerky", "Cupcake", "Ham Sandwich", "Donut"])
            if response in ["Beef Jerky", "Ham Sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer a savory option")
"""

ordered_field_buffer.append(CountSavory_4_49_3)

GrilledCheese_0_0_0 = {
    "name": "GrilledCheese_0_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have mayonnaise? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_0_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "mayonnaise"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_0_0)

GrilledCheese_0_1_0 = {
    "name": "GrilledCheese_0_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_1_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "tomato"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_1_0)

GrilledCheese_0_2_0 = {
    "name": "GrilledCheese_0_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_2_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "mayonnaise"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_2_0)

GrilledCheese_0_3_0 = {
    "name": "GrilledCheese_0_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_3_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_3_0)

GrilledCheese_0_4_0 = {
    "name": "GrilledCheese_0_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_4_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_4_0)

GrilledCheese_0_5_0 = {
    "name": "GrilledCheese_0_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_5_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_5_0)

GrilledCheese_0_6_0 = {
    "name": "GrilledCheese_0_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_6_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_6_0)

GrilledCheese_0_7_0 = {
    "name": "GrilledCheese_0_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have mayonnaise? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_7_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "mayonnaise"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are not available"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_7_0)

GrilledCheese_0_8_0 = {
    "name": "GrilledCheese_0_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_8_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "all ingredients are present"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_8_0)

GrilledCheese_0_9_0 = {
    "name": "GrilledCheese_0_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_9_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_9_0)

GrilledCheese_0_10_0 = {
    "name": "GrilledCheese_0_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_10_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_10_0)

GrilledCheese_0_11_0 = {
    "name": "GrilledCheese_0_11_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_11_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_11_0)

GrilledCheese_0_12_0 = {
    "name": "GrilledCheese_0_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_12_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "mayonnaise"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_12_0)

GrilledCheese_0_13_0 = {
    "name": "GrilledCheese_0_13_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_13_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_13_0)

GrilledCheese_0_14_0 = {
    "name": "GrilledCheese_0_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_14_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "mayonnaise"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_14_0)

GrilledCheese_0_15_0 = {
    "name": "GrilledCheese_0_15_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_15_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_15_0)

GrilledCheese_0_16_0 = {
    "name": "GrilledCheese_0_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_16_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_16_0)

GrilledCheese_0_17_0 = {
    "name": "GrilledCheese_0_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all ingredients are present /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_17_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "all ingredients are present"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_17_0)

GrilledCheese_0_18_0 = {
    "name": "GrilledCheese_0_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have mayonnaise? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all ingredients are present /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_18_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "mayonnaise"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "all ingredients are present"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_18_0)

GrilledCheese_0_19_0 = {
    "name": "GrilledCheese_0_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_19_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_19_0)

GrilledCheese_0_20_0 = {
    "name": "GrilledCheese_0_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_20_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_20_0)

GrilledCheese_0_21_0 = {
    "name": "GrilledCheese_0_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_21_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_21_0)

GrilledCheese_0_22_0 = {
    "name": "GrilledCheese_0_22_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_22_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_22_0)

GrilledCheese_0_23_0 = {
    "name": "GrilledCheese_0_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_23_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "tomato"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_23_0)

GrilledCheese_0_24_0 = {
    "name": "GrilledCheese_0_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_24_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_0_24_0)

GrilledCheese_0_25_0 = {
    "name": "GrilledCheese_0_25_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_25_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "mayonnaise"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_25_0)

GrilledCheese_0_26_0 = {
    "name": "GrilledCheese_0_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_26_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_26_0)

GrilledCheese_0_27_0 = {
    "name": "GrilledCheese_0_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have onion? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_27_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "tomato", "onion"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_27_0)

GrilledCheese_0_28_0 = {
    "name": "GrilledCheese_0_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_28_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_28_0)

GrilledCheese_0_29_0 = {
    "name": "GrilledCheese_0_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_29_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_29_0)

GrilledCheese_0_30_0 = {
    "name": "GrilledCheese_0_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_30_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_30_0)

GrilledCheese_0_31_0 = {
    "name": "GrilledCheese_0_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_31_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "mayonnaise"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_31_0)

GrilledCheese_0_32_0 = {
    "name": "GrilledCheese_0_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have onion? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_32_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "tomato", "onion"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_32_0)

GrilledCheese_0_33_0 = {
    "name": "GrilledCheese_0_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_33_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_33_0)

GrilledCheese_0_34_0 = {
    "name": "GrilledCheese_0_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all ingredients are present /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_34_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "all ingredients are present"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_34_0)

GrilledCheese_0_35_0 = {
    "name": "GrilledCheese_0_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all ingredients are present /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_35_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "all ingredients are present"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_35_0)

GrilledCheese_0_36_0 = {
    "name": "GrilledCheese_0_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_36_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "mayonnaise"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_36_0)

GrilledCheese_0_37_0 = {
    "name": "GrilledCheese_0_37_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_37_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "all ingredients are present"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_37_0)

GrilledCheese_0_38_0 = {
    "name": "GrilledCheese_0_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have mayonnaise? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_38_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "mayonnaise"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_38_0)

GrilledCheese_0_39_0 = {
    "name": "GrilledCheese_0_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_39_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "tomato", "onion"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_0_39_0)

GrilledCheese_0_40_0 = {
    "name": "GrilledCheese_0_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_40_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_40_0)

GrilledCheese_0_41_0 = {
    "name": "GrilledCheese_0_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_41_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_41_0)

GrilledCheese_0_42_0 = {
    "name": "GrilledCheese_0_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_42_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_42_0)

GrilledCheese_0_43_0 = {
    "name": "GrilledCheese_0_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_43_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_43_0)

GrilledCheese_0_44_0 = {
    "name": "GrilledCheese_0_44_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_44_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_44_0)

GrilledCheese_0_45_0 = {
    "name": "GrilledCheese_0_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_45_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_45_0)

GrilledCheese_0_46_0 = {
    "name": "GrilledCheese_0_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_46_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_0_46_0)

GrilledCheese_0_47_0 = {
    "name": "GrilledCheese_0_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_47_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_47_0)

GrilledCheese_0_48_0 = {
    "name": "GrilledCheese_0_48_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_48_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_48_0)

GrilledCheese_0_49_0 = {
    "name": "GrilledCheese_0_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_0_49_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_0_49_0)

GrilledCheese_1_0_0 = {
    "name": "GrilledCheese_1_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have pan? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_0_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "pan"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_0_0)

GrilledCheese_1_1_0 = {
    "name": "GrilledCheese_1_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko possesses all the items /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_1_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(items_not_possessed) > 0:
        message = ""
        for item in items_not_possessed:
            message += item + ", "
        message += "are not possessed by Zarko"
    else:
        message = "Zarko possesses all the items"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_1_0)

GrilledCheese_1_2_0 = {
    "name": "GrilledCheese_1_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_2_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(items_not_possessed) > 0:
        message = ""
        for item in items_not_possessed:
            message += item + ", "
        message += "are not possessed by Zarko"
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_2_0)

GrilledCheese_1_3_0 = {
    "name": "GrilledCheese_1_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_3_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_3_0)

GrilledCheese_1_4_0 = {
    "name": "GrilledCheese_1_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have pan? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_4_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "pan"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_4_0)

GrilledCheese_1_5_0 = {
    "name": "GrilledCheese_1_5_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_1_5_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(ingredient)
    go_to(start_loc)
    if len(items_not_possessed) > 0:
        message = ""
        for item in items_not_possessed:
            message += item + ", "
        message += "are not possessed by Zarko"
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_5_0)

GrilledCheese_1_6_0 = {
    "name": "GrilledCheese_1_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_6_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_6_0)

GrilledCheese_1_7_0 = {
    "name": "GrilledCheese_1_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_7_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(items_not_possessed) > 0:
        message = ""
        for item in items_not_possessed:
            message += item + ", "
        message += "are not possessed by Zarko"
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_7_0)

GrilledCheese_1_8_0 = {
    "name": "GrilledCheese_1_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_8_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_8_0)

GrilledCheese_1_9_0 = {
    "name": "GrilledCheese_1_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have pan? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_9_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "pan"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(get_current_location())
    if len(missing_items) > 0:
        message = "Zarko does not have "
        for item in missing_items:
            message += item + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_9_0)

GrilledCheese_1_10_0 = {
    "name": "GrilledCheese_1_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have pan? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_10_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "pan"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
        say(message)
    else:
        say("Zarko has all the ingredients for making grilled cheese")
"""

ordered_field_buffer.append(GrilledCheese_1_10_0)

GrilledCheese_1_11_0 = {
    "name": "GrilledCheese_1_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_11_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_11_0)

GrilledCheese_1_12_0 = {
    "name": "GrilledCheese_1_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_12_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_12_0)

GrilledCheese_1_13_0 = {
    "name": "GrilledCheese_1_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_13_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(items_not_possessed) > 0:
        message = "Zarko does not have: "
        for item in items_not_possessed:
            message += item + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_13_0)

GrilledCheese_1_14_0 = {
    "name": "GrilledCheese_1_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_1_14_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(ingredient)
    go_to(start_loc)
    if len(items_not_possessed) > 0:
        message = ""
        for item in items_not_possessed:
            message += item + ", "
        message += "are not possessed by Zarko"
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_14_0)

GrilledCheese_1_15_0 = {
    "name": "GrilledCheese_1_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_15_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_15_0)

GrilledCheese_1_16_0 = {
    "name": "GrilledCheese_1_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_16_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_16_0)

GrilledCheese_1_17_0 = {
    "name": "GrilledCheese_1_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko possesses all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_17_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(items_not_possessed) > 0:
        message = ""
        for item in items_not_possessed:
            message += item + ", "
        message += "are not possessed by Zarko"
    else:
        message = "Zarko possesses all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_17_0)

GrilledCheese_1_18_0 = {
    "name": "GrilledCheese_1_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ are not possessed by zarko /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_18_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    message = ""
    for item in items_not_possessed:
        message += item + ", "
    message += "are not possessed by Zarko"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_18_0)

GrilledCheese_1_19_0 = {
    "name": "GrilledCheese_1_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_19_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_19_0)

GrilledCheese_1_20_0 = {
    "name": "GrilledCheese_1_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_20_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(items_not_possessed) > 0:
        message = "Zarko does not have: "
        for item in items_not_possessed:
            message += item + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_20_0)

GrilledCheese_1_21_0 = {
    "name": "GrilledCheese_1_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients needed to make grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_21_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "needed to make grilled cheese"
    else:
        message = "Zarko has all the ingredients needed to make grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_21_0)

GrilledCheese_1_22_0 = {
    "name": "GrilledCheese_1_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients needed to make grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_22_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(items_not_possessed) > 0:
        message = "Zarko does not have "
        for item in items_not_possessed:
            message += item + ", "
        message += "needed to make grilled cheese"
    else:
        message = "Zarko has all the ingredients needed to make grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_22_0)

GrilledCheese_1_23_0 = {
    "name": "GrilledCheese_1_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_23_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(item)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(items_not_possessed) > 0:
        message = ""
        for item in items_not_possessed:
            message += item + ", "
        message += "are not possessed by Zarko"
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_23_0)

GrilledCheese_1_24_0 = {
    "name": "GrilledCheese_1_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have pan? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_24_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "pan"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_24_0)

GrilledCheese_1_25_0 = {
    "name": "GrilledCheese_1_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_25_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(items_not_possessed) > 0:
        message = "Zarko does not have "
        for item in items_not_possessed:
            message += item + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_25_0)

GrilledCheese_1_26_0 = {
    "name": "GrilledCheese_1_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_26_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_26_0)

GrilledCheese_1_27_0 = {
    "name": "GrilledCheese_1_27_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_1_27_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_27_0)

GrilledCheese_1_28_0 = {
    "name": "GrilledCheese_1_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_28_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
        say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_28_0)

GrilledCheese_1_29_0 = {
    "name": "GrilledCheese_1_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_29_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
        say(message)
    else:
        say("Zarko has all the ingredients for making grilled cheese")
"""

ordered_field_buffer.append(GrilledCheese_1_29_0)

GrilledCheese_1_30_0 = {
    "name": "GrilledCheese_1_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_30_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_30_0)

GrilledCheese_1_31_0 = {
    "name": "GrilledCheese_1_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_31_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(ingredient)
    go_to(get_current_location())
    if len(missing_items) > 0:
        message = "Zarko does not have: "
        for item in missing_items:
            message += item + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_31_0)

GrilledCheese_1_32_0 = {
    "name": "GrilledCheese_1_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_32_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_32_0)

GrilledCheese_1_33_0 = {
    "name": "GrilledCheese_1_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have mayonnaise? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese. /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_33_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "mayonnaise"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese."
    else:
        message = "Zarko has all the ingredients for making grilled cheese."
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_33_0)

GrilledCheese_1_34_0 = {
    "name": "GrilledCheese_1_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have pan? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_34_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "pan"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_34_0)

GrilledCheese_1_35_0 = {
    "name": "GrilledCheese_1_35_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_1_35_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_35_0)

GrilledCheese_1_36_0 = {
    "name": "GrilledCheese_1_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_36_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_36_0)

GrilledCheese_1_37_0 = {
    "name": "GrilledCheese_1_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_37_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_37_0)

GrilledCheese_1_38_0 = {
    "name": "GrilledCheese_1_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_38_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(items_not_possessed) > 0:
        message = ""
        for item in items_not_possessed:
            message += item + ", "
        message += "are not possessed by Zarko"
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_38_0)

GrilledCheese_1_39_0 = {
    "name": "GrilledCheese_1_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_1_39_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_39_0)

GrilledCheese_1_40_0 = {
    "name": "GrilledCheese_1_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_40_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_1_40_0)

GrilledCheese_1_41_0 = {
    "name": "GrilledCheese_1_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_41_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(item)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(items_not_possessed) > 0:
        message = ""
        for item in items_not_possessed:
            message += item + ", "
        message += "are not possessed by Zarko"
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_41_0)

GrilledCheese_1_42_0 = {
    "name": "GrilledCheese_1_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have pan? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_42_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "pan"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_42_0)

GrilledCheese_1_43_0 = {
    "name": "GrilledCheese_1_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_43_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_43_0)

GrilledCheese_1_44_0 = {
    "name": "GrilledCheese_1_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_44_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_44_0)

GrilledCheese_1_45_0 = {
    "name": "GrilledCheese_1_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients needed to make grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_45_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_possessed = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_possessed.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(items_not_possessed) > 0:
        message = ""
        for item in items_not_possessed:
            message += item + ", "
        message += "are not possessed by Zarko"
    else:
        message = "Zarko has all the ingredients needed to make grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_45_0)

GrilledCheese_1_46_0 = {
    "name": "GrilledCheese_1_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have spatula? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_46_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "spatula"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_46_0)

GrilledCheese_1_47_0 = {
    "name": "GrilledCheese_1_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_1_47_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_47_0)

GrilledCheese_1_48_0 = {
    "name": "GrilledCheese_1_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_48_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
        say(message)
    else:
        say("Zarko has all the ingredients for making grilled cheese")
"""

ordered_field_buffer.append(GrilledCheese_1_48_0)

GrilledCheese_1_49_0 = {
    "name": "GrilledCheese_1_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have pan? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_49_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese", "pan"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_1_49_0)

GrilledCheese_2_0_0 = {
    "name": "GrilledCheese_2_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_0_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = "Zarko does not have "
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_0_0)

GrilledCheese_2_1_0 = {
    "name": "GrilledCheese_2_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have the following ingredients: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_1_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese", "tomato"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have the following ingredients: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_1_0)

GrilledCheese_2_2_0 = {
    "name": "GrilledCheese_2_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_2_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_2_0)

GrilledCheese_2_3_0 = {
    "name": "GrilledCheese_2_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_3_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = "Zarko does not have "
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_3_0)

GrilledCheese_2_4_0 = {
    "name": "GrilledCheese_2_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have mayonnaise? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_4_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter", "mayonnaise"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_4_0)

GrilledCheese_2_5_0 = {
    "name": "GrilledCheese_2_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_5_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = "Zarko does not have: "
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_5_0)

GrilledCheese_2_6_0 = {
    "name": "GrilledCheese_2_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_6_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_6_0)

GrilledCheese_2_7_0 = {
    "name": "GrilledCheese_2_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_7_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_7_0)

GrilledCheese_2_8_0 = {
    "name": "GrilledCheese_2_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_8_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_8_0)

GrilledCheese_2_9_0 = {
    "name": "GrilledCheese_2_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_9_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_9_0)

GrilledCheese_2_10_0 = {
    "name": "GrilledCheese_2_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_10_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese", "tomato"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_10_0)

GrilledCheese_2_11_0 = {
    "name": "GrilledCheese_2_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_11_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_11_0)

GrilledCheese_2_12_0 = {
    "name": "GrilledCheese_2_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_12_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese", "tomato"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_12_0)

GrilledCheese_2_13_0 = {
    "name": "GrilledCheese_2_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_13_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_13_0)

GrilledCheese_2_14_0 = {
    "name": "GrilledCheese_2_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_14_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese", "tomato"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_14_0)

GrilledCheese_2_15_0 = {
    "name": "GrilledCheese_2_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_15_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_15_0)

GrilledCheese_2_16_0 = {
    "name": "GrilledCheese_2_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_16_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_16_0)

GrilledCheese_2_17_0 = {
    "name": "GrilledCheese_2_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_17_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = ""
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_17_0)

GrilledCheese_2_18_0 = {
    "name": "GrilledCheese_2_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_18_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_18_0)

GrilledCheese_2_19_0 = {
    "name": "GrilledCheese_2_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have onion? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_19_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese", "tomato", "onion"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = "Zarko does not have "
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_19_0)

GrilledCheese_2_20_0 = {
    "name": "GrilledCheese_2_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_20_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = ""
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_20_0)

GrilledCheese_2_21_0 = {
    "name": "GrilledCheese_2_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_21_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_21_0)

GrilledCheese_2_22_0 = {
    "name": "GrilledCheese_2_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have mayonnaise? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_22_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter", "mayonnaise"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_22_0)

GrilledCheese_2_23_0 = {
    "name": "GrilledCheese_2_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_23_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_23_0)

GrilledCheese_2_24_0 = {
    "name": "GrilledCheese_2_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_24_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = ""
    if len(missing_ingredients) > 0:
        message = "Zarko does not have the following ingredients: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_24_0)

GrilledCheese_2_25_0 = {
    "name": "GrilledCheese_2_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_25_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_25_0)

GrilledCheese_2_26_0 = {
    "name": "GrilledCheese_2_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_26_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_26_0)

GrilledCheese_2_27_0 = {
    "name": "GrilledCheese_2_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_27_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_27_0)

GrilledCheese_2_28_0 = {
    "name": "GrilledCheese_2_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_28_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_28_0)

GrilledCheese_2_29_0 = {
    "name": "GrilledCheese_2_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_29_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_29_0)

GrilledCheese_2_30_0 = {
    "name": "GrilledCheese_2_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_30_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = ""
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_30_0)

GrilledCheese_2_31_0 = {
    "name": "GrilledCheese_2_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_31_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_31_0)

GrilledCheese_2_32_0 = {
    "name": "GrilledCheese_2_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_32_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese", "tomato"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_32_0)

GrilledCheese_2_33_0 = {
    "name": "GrilledCheese_2_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_33_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_33_0)

GrilledCheese_2_34_0 = {
    "name": "GrilledCheese_2_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_34_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = "Zarko does not have "
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_34_0)

GrilledCheese_2_35_0 = {
    "name": "GrilledCheese_2_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have onion? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_35_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese", "tomato", "onion"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_35_0)

GrilledCheese_2_36_0 = {
    "name": "GrilledCheese_2_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_36_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese", "tomato"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_36_0)

GrilledCheese_2_37_0 = {
    "name": "GrilledCheese_2_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have onion? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_37_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese", "tomato", "onion"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_37_0)

GrilledCheese_2_38_0 = {
    "name": "GrilledCheese_2_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have onion? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_38_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese", "tomato", "onion"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_38_0)

GrilledCheese_2_39_0 = {
    "name": "GrilledCheese_2_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese. /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_39_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = ""
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese."
    else:
        message = "Zarko has all the ingredients for the grilled cheese."
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_39_0)

GrilledCheese_2_40_0 = {
    "name": "GrilledCheese_2_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_40_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = ""
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_40_0)

GrilledCheese_2_41_0 = {
    "name": "GrilledCheese_2_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_41_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_41_0)

GrilledCheese_2_42_0 = {
    "name": "GrilledCheese_2_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_42_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = "Zarko does not have "
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_42_0)

GrilledCheese_2_43_0 = {
    "name": "GrilledCheese_2_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_43_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = ""
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_43_0)

GrilledCheese_2_44_0 = {
    "name": "GrilledCheese_2_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_44_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_44_0)

GrilledCheese_2_45_0 = {
    "name": "GrilledCheese_2_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_45_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_45_0)

GrilledCheese_2_46_0 = {
    "name": "GrilledCheese_2_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_46_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = ""
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_46_0)

GrilledCheese_2_47_0 = {
    "name": "GrilledCheese_2_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_47_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    message = ""
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_2_47_0)

GrilledCheese_2_48_0 = {
    "name": "GrilledCheese_2_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_48_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese", "tomato"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_48_0)

GrilledCheese_2_49_0 = {
    "name": "GrilledCheese_2_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko does not have: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_49_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "butter", "cheese", "tomato"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    say("Zarko does not have: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_2_49_0)

GrilledCheese_3_0_0 = {
    "name": "GrilledCheese_3_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_0_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are missing"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_0_0)

GrilledCheese_3_1_0 = {
    "name": "GrilledCheese_3_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_1_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = "Zarko does not have: "
        for item in missing_items:
            message += item + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_3_1_0)

GrilledCheese_3_2_0 = {
    "name": "GrilledCheese_3_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_2_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_2_0)

GrilledCheese_3_3_0 = {
    "name": "GrilledCheese_3_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_3_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        go_to("Zarko's office")
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_3_0)

GrilledCheese_3_4_0 = {
    "name": "GrilledCheese_3_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_4_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    missing_items = []
    for ingredient in ingredients:
        go_to("Zarko's office")
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(ingredient)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = "Zarko does not have: "
        for item in missing_items:
            message += item + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_4_0)

GrilledCheese_3_5_0 = {
    "name": "GrilledCheese_3_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all items are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_5_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all items are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_5_0)

GrilledCheese_3_6_0 = {
    "name": "GrilledCheese_3_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_6_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_6_0)

GrilledCheese_3_7_0 = {
    "name": "GrilledCheese_3_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_7_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are missing"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_7_0)

GrilledCheese_3_8_0 = {
    "name": "GrilledCheese_3_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_8_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_8_0)

GrilledCheese_3_9_0 = {
    "name": "GrilledCheese_3_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_9_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_9_0)

GrilledCheese_3_10_0 = {
    "name": "GrilledCheese_3_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_10_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_10_0)

GrilledCheese_3_11_0 = {
    "name": "GrilledCheese_3_11_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_11_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to("kitchen")
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are not available"
    else:
        message = "all ingredients are available"
    say(message)
    go_to(start_loc)
"""

ordered_field_buffer.append(GrilledCheese_3_11_0)

GrilledCheese_3_12_0 = {
    "name": "GrilledCheese_3_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all items are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_12_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    items_not_available = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_available.append(ingredient)
    go_to(start_loc)
    if len(items_not_available) > 0:
        message = ""
        for item in items_not_available:
            message += item + ", "
        message += "are not available"
    else:
        message = "all items are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_12_0)

GrilledCheese_3_13_0 = {
    "name": "GrilledCheese_3_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_13_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = "Zarko does not have: "
        for item in missing_items:
            message += item + ", "
        say(message)
    else:
        say("Zarko has all the ingredients for grilled cheese")
"""

ordered_field_buffer.append(GrilledCheese_3_13_0)

GrilledCheese_3_14_0 = {
    "name": "GrilledCheese_3_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all items are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_14_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(ingredient)
    go_to(get_current_location())
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all items are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_14_0)

GrilledCheese_3_15_0 = {
    "name": "GrilledCheese_3_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all ingredients are present /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_15_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    start_loc = get_current_location()
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "all ingredients are present"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_15_0)

GrilledCheese_3_16_0 = {
    "name": "GrilledCheese_3_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_16_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are not available"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_16_0)

GrilledCheese_3_17_0 = {
    "name": "GrilledCheese_3_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_17_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_17_0)

GrilledCheese_3_18_0 = {
    "name": "GrilledCheese_3_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_18_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    missing_ingredients = []
    for ingredient in ingredients:
        go_to("Zarko's office")
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_3_18_0)

GrilledCheese_3_19_0 = {
    "name": "GrilledCheese_3_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_19_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_19_0)

GrilledCheese_3_20_0 = {
    "name": "GrilledCheese_3_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_20_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(ingredient)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = "Zarko does not have "
        for item in missing_items:
            message += item + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_20_0)

GrilledCheese_3_21_0 = {
    "name": "GrilledCheese_3_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_21_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        go_to("Zarko's office")
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_21_0)

GrilledCheese_3_22_0 = {
    "name": "GrilledCheese_3_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_22_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(get_current_location())
    if len(missing_items) > 0:
        message = "Zarko does not have: "
        for item in missing_items:
            message += item + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_22_0)

GrilledCheese_3_23_0 = {
    "name": "GrilledCheese_3_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_23_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_23_0)

GrilledCheese_3_24_0 = {
    "name": "GrilledCheese_3_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_24_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(get_current_location())
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are missing"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_24_0)

GrilledCheese_3_25_0 = {
    "name": "GrilledCheese_3_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_25_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are not available"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_25_0)

GrilledCheese_3_26_0 = {
    "name": "GrilledCheese_3_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_26_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(get_current_location())
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are missing"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_26_0)

GrilledCheese_3_27_0 = {
    "name": "GrilledCheese_3_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_27_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_27_0)

GrilledCheese_3_28_0 = {
    "name": "GrilledCheese_3_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for the grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_28_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for the grilled cheese"
    else:
        message = "Zarko has all the ingredients for the grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_28_0)

GrilledCheese_3_29_0 = {
    "name": "GrilledCheese_3_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all items are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_29_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all items are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_29_0)

GrilledCheese_3_30_0 = {
    "name": "GrilledCheese_3_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all items are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_30_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all items are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_30_0)

GrilledCheese_3_31_0 = {
    "name": "GrilledCheese_3_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_31_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_31_0)

GrilledCheese_3_32_0 = {
    "name": "GrilledCheese_3_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all items are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_32_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_items = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(ingredient)
    go_to(get_current_location())
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all items are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_32_0)

GrilledCheese_3_33_0 = {
    "name": "GrilledCheese_3_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all items are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_33_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    missing_items = []
    for ingredient in ingredients:
        go_to("Zarko's office")
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(ingredient)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all items are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_33_0)

GrilledCheese_3_34_0 = {
    "name": "GrilledCheese_3_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_34_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        go_to("Zarko's office")
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_34_0)

GrilledCheese_3_35_0 = {
    "name": "GrilledCheese_3_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_35_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        go_to("Zarko's office")
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_35_0)

GrilledCheese_3_36_0 = {
    "name": "GrilledCheese_3_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all items are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_36_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
        say(message)
    else:
        say("All items are available")
"""

ordered_field_buffer.append(GrilledCheese_3_36_0)

GrilledCheese_3_37_0 = {
    "name": "GrilledCheese_3_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all items are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_37_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(get_current_location())
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all items are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_37_0)

GrilledCheese_3_38_0 = {
    "name": "GrilledCheese_3_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all items are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_38_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "butter", "cheese"]
    missing_items = []
    for item in items:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(get_current_location())
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all items are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_38_0)

GrilledCheese_3_39_0 = {
    "name": "GrilledCheese_3_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_39_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
        say(message)
    else:
        say("all ingredients are available")
"""

ordered_field_buffer.append(GrilledCheese_3_39_0)

GrilledCheese_3_40_0 = {
    "name": "GrilledCheese_3_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all items are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_40_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    items_not_available = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            items_not_available.append(ingredient)
    go_to(get_current_location())
    if len(items_not_available) > 0:
        message = ""
        for item in items_not_available:
            message += item + ", "
        message += "are not available"
    else:
        message = "all items are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_40_0)

GrilledCheese_3_41_0 = {
    "name": "GrilledCheese_3_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_41_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(get_current_location())
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all ingredients are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_41_0)

GrilledCheese_3_42_0 = {
    "name": "GrilledCheese_3_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_42_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        go_to("Zarko's office")
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_42_0)

GrilledCheese_3_43_0 = {
    "name": "GrilledCheese_3_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_43_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_items = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(ingredient)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = "Zarko does not have: "
        for item in missing_items:
            message += item + ", "
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_43_0)

GrilledCheese_3_44_0 = {
    "name": "GrilledCheese_3_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_44_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    for ingredient in ingredients:
        go_to("Zarko's office")
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_44_0)

GrilledCheese_3_45_0 = {
    "name": "GrilledCheese_3_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_45_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = "Zarko does not have "
        for item in missing_items:
            message += item + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_45_0)

GrilledCheese_3_46_0 = {
    "name": "GrilledCheese_3_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_46_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_46_0)

GrilledCheese_3_47_0 = {
    "name": "GrilledCheese_3_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_47_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_47_0)

GrilledCheese_3_48_0 = {
    "name": "GrilledCheese_3_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all items are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_48_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_items = []
    for item in ingredients:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            missing_items.append(item)
    go_to(start_loc)
    if len(missing_items) > 0:
        message = ""
        for item in missing_items:
            message += item + ", "
        message += "are not available"
    else:
        message = "all items are available"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_48_0)

GrilledCheese_3_49_0 = {
    "name": "GrilledCheese_3_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_49_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko does not have: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_3_49_0)

GrilledCheese_4_0_0 = {
    "name": "GrilledCheese_4_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_0_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_0_0)

GrilledCheese_4_1_0 = {
    "name": "GrilledCheese_4_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_1_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_1_0)

GrilledCheese_4_2_0 = {
    "name": "GrilledCheese_4_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_2_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_2_0)

GrilledCheese_4_3_0 = {
    "name": "GrilledCheese_4_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_3_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_3_0)

GrilledCheese_4_4_0 = {
    "name": "GrilledCheese_4_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_4_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to("start_loc")
    if len(missing_ingredients) > 0:
        message = "Zarko is missing "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_4_0)

GrilledCheese_4_5_0 = {
    "name": "GrilledCheese_4_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_5_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_5_0)

GrilledCheese_4_6_0 = {
    "name": "GrilledCheese_4_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_6_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_6_0)

GrilledCheese_4_7_0 = {
    "name": "GrilledCheese_4_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_7_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_7_0)

GrilledCheese_4_8_0 = {
    "name": "GrilledCheese_4_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_8_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_8_0)

GrilledCheese_4_9_0 = {
    "name": "GrilledCheese_4_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_9_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_9_0)

GrilledCheese_4_10_0 = {
    "name": "GrilledCheese_4_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_10_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_10_0)

GrilledCheese_4_11_0 = {
    "name": "GrilledCheese_4_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_11_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_11_0)

GrilledCheese_4_12_0 = {
    "name": "GrilledCheese_4_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_12_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_12_0)

GrilledCheese_4_13_0 = {
    "name": "GrilledCheese_4_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_13_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_13_0)

GrilledCheese_4_14_0 = {
    "name": "GrilledCheese_4_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_14_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_14_0)

GrilledCheese_4_15_0 = {
    "name": "GrilledCheese_4_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_15_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_15_0)

GrilledCheese_4_16_0 = {
    "name": "GrilledCheese_4_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_16_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_16_0)

GrilledCheese_4_17_0 = {
    "name": "GrilledCheese_4_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_17_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_4_17_0)

GrilledCheese_4_18_0 = {
    "name": "GrilledCheese_4_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_18_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_18_0)

GrilledCheese_4_19_0 = {
    "name": "GrilledCheese_4_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_19_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_19_0)

GrilledCheese_4_20_0 = {
    "name": "GrilledCheese_4_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_4_20_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_20_0)

GrilledCheese_4_21_0 = {
    "name": "GrilledCheese_4_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_21_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_21_0)

GrilledCheese_4_22_0 = {
    "name": "GrilledCheese_4_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_22_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_22_0)

GrilledCheese_4_23_0 = {
    "name": "GrilledCheese_4_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_23_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_23_0)

GrilledCheese_4_24_0 = {
    "name": "GrilledCheese_4_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_4_24_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_24_0)

GrilledCheese_4_25_0 = {
    "name": "GrilledCheese_4_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_25_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_25_0)

GrilledCheese_4_26_0 = {
    "name": "GrilledCheese_4_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_26_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_26_0)

GrilledCheese_4_27_0 = {
    "name": "GrilledCheese_4_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_27_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_27_0)

GrilledCheese_4_28_0 = {
    "name": "GrilledCheese_4_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko is missing: /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_28_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    say("Zarko is missing: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_4_28_0)

GrilledCheese_4_29_0 = {
    "name": "GrilledCheese_4_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_29_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_29_0)

GrilledCheese_4_30_0 = {
    "name": "GrilledCheese_4_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_30_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_30_0)

GrilledCheese_4_31_0 = {
    "name": "GrilledCheese_4_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_4_31_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_31_0)

GrilledCheese_4_32_0 = {
    "name": "GrilledCheese_4_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_32_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_32_0)

GrilledCheese_4_33_0 = {
    "name": "GrilledCheese_4_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_33_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_33_0)

GrilledCheese_4_34_0 = {
    "name": "GrilledCheese_4_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'missing_ingredients' is not defined",
}

program_GrilledCheese_4_34_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    say("Zarko is missing: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_4_34_0)

GrilledCheese_4_35_0 = {
    "name": "GrilledCheese_4_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for making grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_35_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for making grilled cheese"
    else:
        message = "Zarko has all the ingredients for making grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_35_0)

GrilledCheese_4_36_0 = {
    "name": "GrilledCheese_4_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'missing_ingredients' is not defined",
}

program_GrilledCheese_4_36_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    say("Zarko is missing: " + ", ".join(missing_ingredients))
"""

ordered_field_buffer.append(GrilledCheese_4_36_0)

GrilledCheese_4_37_0 = {
    "name": "GrilledCheese_4_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_37_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_37_0)

GrilledCheese_4_38_0 = {
    "name": "GrilledCheese_4_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_38_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients for grilled cheese")
"""

ordered_field_buffer.append(GrilledCheese_4_38_0)

GrilledCheese_4_39_0 = {
    "name": "GrilledCheese_4_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_39_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients")
"""

ordered_field_buffer.append(GrilledCheese_4_39_0)

GrilledCheese_4_40_0 = {
    "name": "GrilledCheese_4_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_40_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_40_0)

GrilledCheese_4_41_0 = {
    "name": "GrilledCheese_4_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_41_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message = message[:-2]
    else:
        message = "Zarko has all the ingredients"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_41_0)

GrilledCheese_4_42_0 = {
    "name": "GrilledCheese_4_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_42_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_42_0)

GrilledCheese_4_43_0 = {
    "name": "GrilledCheese_4_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_43_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_43_0)

GrilledCheese_4_44_0 = {
    "name": "GrilledCheese_4_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_44_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_44_0)

GrilledCheese_4_45_0 = {
    "name": "GrilledCheese_4_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_45_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_45_0)

GrilledCheese_4_46_0 = {
    "name": "GrilledCheese_4_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_4_46_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_46_0)

GrilledCheese_4_47_0 = {
    "name": "GrilledCheese_4_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_47_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "butter", "cheese"]
    go_to("Zarko's office")
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        say(message)
    else:
        say("Zarko has all the ingredients for grilled cheese")
"""

ordered_field_buffer.append(GrilledCheese_4_47_0)

GrilledCheese_4_48_0 = {
    "name": "GrilledCheese_4_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Say /$@!/ zarko has all the ingredients for grilled cheese /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_48_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(get_current_location())
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_48_0)

GrilledCheese_4_49_0 = {
    "name": "GrilledCheese_4_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_GrilledCheese_4_49_0 = """
def task_program():
    ingredients = ["bread", "butter", "cheese"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = "Zarko is missing: "
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "for grilled cheese"
    else:
        message = "Zarko has all the ingredients for grilled cheese"
    say(message)
"""

ordered_field_buffer.append(GrilledCheese_4_49_0)

LunchTime_0_0_0 = {
    "name": "LunchTime_0_0_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_0_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_0_0)

LunchTime_0_0_1 = {
    "name": "LunchTime_0_0_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_0_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_0_1)

LunchTime_0_1_0 = {
    "name": "LunchTime_0_1_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_1_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_1_0)

LunchTime_0_1_1 = {
    "name": "LunchTime_0_1_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_1_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_1_1)

LunchTime_0_2_0 = {
    "name": "LunchTime_0_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_2_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_2_0)

LunchTime_0_2_1 = {
    "name": "LunchTime_0_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_2_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_2_1)

LunchTime_0_3_0 = {
    "name": "LunchTime_0_3_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_3_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_3_0)

LunchTime_0_3_1 = {
    "name": "LunchTime_0_3_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_3_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_3_1)

LunchTime_0_4_0 = {
    "name": "LunchTime_0_4_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_4_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_4_0)

LunchTime_0_4_1 = {
    "name": "LunchTime_0_4_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_4_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_4_1)

LunchTime_0_5_0 = {
    "name": "LunchTime_0_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ at what time? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_5_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_5_0)

LunchTime_0_5_1 = {
    "name": "LunchTime_0_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_5_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_5_1)

LunchTime_0_6_0 = {
    "name": "LunchTime_0_6_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_6_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_6_0)

LunchTime_0_6_1 = {
    "name": "LunchTime_0_6_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_6_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_6_1)

LunchTime_0_7_0 = {
    "name": "LunchTime_0_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_7_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_7_0)

LunchTime_0_7_1 = {
    "name": "LunchTime_0_7_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_7_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_7_1)

LunchTime_0_8_0 = {
    "name": "LunchTime_0_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_8_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_8_0)

LunchTime_0_8_1 = {
    "name": "LunchTime_0_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_8_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_8_1)

LunchTime_0_9_0 = {
    "name": "LunchTime_0_9_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_9_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_9_0)

LunchTime_0_9_1 = {
    "name": "LunchTime_0_9_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_9_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_9_1)

LunchTime_0_10_0 = {
    "name": "LunchTime_0_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_10_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_10_0)

LunchTime_0_10_1 = {
    "name": "LunchTime_0_10_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_10_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_10_1)

LunchTime_0_11_0 = {
    "name": "LunchTime_0_11_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_11_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_11_0)

LunchTime_0_11_1 = {
    "name": "LunchTime_0_11_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_11_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_11_1)

LunchTime_0_12_0 = {
    "name": "LunchTime_0_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_12_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_12_0)

LunchTime_0_12_1 = {
    "name": "LunchTime_0_12_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_12_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_12_1)

LunchTime_0_13_0 = {
    "name": "LunchTime_0_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ at what time? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_13_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_13_0)

LunchTime_0_13_1 = {
    "name": "LunchTime_0_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_13_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_13_1)

LunchTime_0_14_0 = {
    "name": "LunchTime_0_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_14_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_14_0)

LunchTime_0_14_1 = {
    "name": "LunchTime_0_14_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_14_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_14_1)

LunchTime_0_15_0 = {
    "name": "LunchTime_0_15_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_15_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_15_0)

LunchTime_0_15_1 = {
    "name": "LunchTime_0_15_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_15_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_15_1)

LunchTime_0_16_0 = {
    "name": "LunchTime_0_16_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_16_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_16_0)

LunchTime_0_16_1 = {
    "name": "LunchTime_0_16_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_16_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_16_1)

LunchTime_0_17_0 = {
    "name": "LunchTime_0_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_17_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response + " " + time)
"""

ordered_field_buffer.append(LunchTime_0_17_0)

LunchTime_0_17_1 = {
    "name": "LunchTime_0_17_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_17_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response + " " + time)
"""

ordered_field_buffer.append(LunchTime_0_17_1)

LunchTime_0_18_0 = {
    "name": "LunchTime_0_18_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_18_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_18_0)

LunchTime_0_18_1 = {
    "name": "LunchTime_0_18_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_18_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_18_1)

LunchTime_0_19_0 = {
    "name": "LunchTime_0_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_19_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_19_0)

LunchTime_0_19_1 = {
    "name": "LunchTime_0_19_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_19_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_19_1)

LunchTime_0_20_0 = {
    "name": "LunchTime_0_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_20_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_20_0)

LunchTime_0_20_1 = {
    "name": "LunchTime_0_20_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_20_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_20_1)

LunchTime_0_21_0 = {
    "name": "LunchTime_0_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_21_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_21_0)

LunchTime_0_21_1 = {
    "name": "LunchTime_0_21_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_21_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_21_1)

LunchTime_0_22_0 = {
    "name": "LunchTime_0_22_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_22_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_22_0)

LunchTime_0_22_1 = {
    "name": "LunchTime_0_22_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_22_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_22_1)

LunchTime_0_23_0 = {
    "name": "LunchTime_0_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_23_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12PM", "1PM", "2PM"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_23_0)

LunchTime_0_23_1 = {
    "name": "LunchTime_0_23_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_23_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12PM", "1PM", "2PM"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_23_1)

LunchTime_0_24_0 = {
    "name": "LunchTime_0_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_24_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_24_0)

LunchTime_0_24_1 = {
    "name": "LunchTime_0_24_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_24_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_24_1)

LunchTime_0_25_0 = {
    "name": "LunchTime_0_25_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_25_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_25_0)

LunchTime_0_25_1 = {
    "name": "LunchTime_0_25_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_25_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_25_1)

LunchTime_0_26_0 = {
    "name": "LunchTime_0_26_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_26_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_26_0)

LunchTime_0_26_1 = {
    "name": "LunchTime_0_26_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_26_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_26_1)

LunchTime_0_27_0 = {
    "name": "LunchTime_0_27_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_27_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_27_0)

LunchTime_0_27_1 = {
    "name": "LunchTime_0_27_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_27_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_27_1)

LunchTime_0_28_0 = {
    "name": "LunchTime_0_28_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_28_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_28_0)

LunchTime_0_28_1 = {
    "name": "LunchTime_0_28_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_28_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_28_1)

LunchTime_0_29_0 = {
    "name": "LunchTime_0_29_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_29_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_29_0)

LunchTime_0_29_1 = {
    "name": "LunchTime_0_29_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_29_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_29_1)

LunchTime_0_30_0 = {
    "name": "LunchTime_0_30_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_30_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_30_0)

LunchTime_0_30_1 = {
    "name": "LunchTime_0_30_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_30_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_30_1)

LunchTime_0_31_0 = {
    "name": "LunchTime_0_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_31_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response + " at " + time)
"""

ordered_field_buffer.append(LunchTime_0_31_0)

LunchTime_0_31_1 = {
    "name": "LunchTime_0_31_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_31_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response + " at " + time)
"""

ordered_field_buffer.append(LunchTime_0_31_1)

LunchTime_0_32_0 = {
    "name": "LunchTime_0_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_32_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_32_0)

LunchTime_0_32_1 = {
    "name": "LunchTime_0_32_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_32_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_32_1)

LunchTime_0_33_0 = {
    "name": "LunchTime_0_33_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_33_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_33_0)

LunchTime_0_33_1 = {
    "name": "LunchTime_0_33_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_33_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_33_1)

LunchTime_0_34_0 = {
    "name": "LunchTime_0_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_34_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_0_34_0)

LunchTime_0_34_1 = {
    "name": "LunchTime_0_34_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_34_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_0_34_1)

LunchTime_0_35_0 = {
    "name": "LunchTime_0_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ at what time? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_35_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_35_0)

LunchTime_0_35_1 = {
    "name": "LunchTime_0_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_35_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_35_1)

LunchTime_0_36_0 = {
    "name": "LunchTime_0_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_36_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_36_0)

LunchTime_0_36_1 = {
    "name": "LunchTime_0_36_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_36_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_36_1)

LunchTime_0_37_0 = {
    "name": "LunchTime_0_37_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_37_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_37_0)

LunchTime_0_37_1 = {
    "name": "LunchTime_0_37_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_37_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_37_1)

LunchTime_0_38_0 = {
    "name": "LunchTime_0_38_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_38_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_38_0)

LunchTime_0_38_1 = {
    "name": "LunchTime_0_38_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_38_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_38_1)

LunchTime_0_39_0 = {
    "name": "LunchTime_0_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_39_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response + " at " + time)
"""

ordered_field_buffer.append(LunchTime_0_39_0)

LunchTime_0_39_1 = {
    "name": "LunchTime_0_39_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_39_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response + " at " + time)
"""

ordered_field_buffer.append(LunchTime_0_39_1)

LunchTime_0_40_0 = {
    "name": "LunchTime_0_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_40_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_40_0)

LunchTime_0_40_1 = {
    "name": "LunchTime_0_40_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_40_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_40_1)

LunchTime_0_41_0 = {
    "name": "LunchTime_0_41_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_41_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_41_0)

LunchTime_0_41_1 = {
    "name": "LunchTime_0_41_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_41_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_41_1)

LunchTime_0_42_0 = {
    "name": "LunchTime_0_42_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_42_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response + " at " + time)
"""

ordered_field_buffer.append(LunchTime_0_42_0)

LunchTime_0_42_1 = {
    "name": "LunchTime_0_42_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_42_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response + " at " + time)
"""

ordered_field_buffer.append(LunchTime_0_42_1)

LunchTime_0_43_0 = {
    "name": "LunchTime_0_43_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_43_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_43_0)

LunchTime_0_43_1 = {
    "name": "LunchTime_0_43_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_43_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_43_1)

LunchTime_0_44_0 = {
    "name": "LunchTime_0_44_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_44_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_44_0)

LunchTime_0_44_1 = {
    "name": "LunchTime_0_44_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_44_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_44_1)

LunchTime_0_45_0 = {
    "name": "LunchTime_0_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_45_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_45_0)

LunchTime_0_45_1 = {
    "name": "LunchTime_0_45_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_45_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_45_1)

LunchTime_0_46_0 = {
    "name": "LunchTime_0_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_46_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response + " at " + time)
"""

ordered_field_buffer.append(LunchTime_0_46_0)

LunchTime_0_46_1 = {
    "name": "LunchTime_0_46_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_46_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response + " at " + time)
"""

ordered_field_buffer.append(LunchTime_0_46_1)

LunchTime_0_47_0 = {
    "name": "LunchTime_0_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_47_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_47_0)

LunchTime_0_47_1 = {
    "name": "LunchTime_0_47_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_47_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_47_1)

LunchTime_0_48_0 = {
    "name": "LunchTime_0_48_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_48_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said she is going for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_0_48_0)

LunchTime_0_48_1 = {
    "name": "LunchTime_0_48_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_48_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["11am", "12pm", "1pm"])
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said she is going for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_0_48_1)

LunchTime_0_49_0 = {
    "name": "LunchTime_0_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_49_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_49_0)

LunchTime_0_49_1 = {
    "name": "LunchTime_0_49_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_0_49_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "At what time?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_0_49_1)

LunchTime_1_0_0 = {
    "name": "LunchTime_1_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_0_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
    else:
        time = "not available"
    go_to(get_current_location())
    say("Jill said she is free at " + time)
"""

ordered_field_buffer.append(LunchTime_1_0_0)

LunchTime_1_0_1 = {
    "name": "LunchTime_1_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at not available /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_0_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
    else:
        time = "not available"
    go_to(get_current_location())
    say("Jill said she is free at " + time)
"""

ordered_field_buffer.append(LunchTime_1_0_1)

LunchTime_1_1_0 = {
    "name": "LunchTime_1_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_1_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_1_0)

LunchTime_1_1_1 = {
    "name": "LunchTime_1_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_1_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_1_1)

LunchTime_1_2_0 = {
    "name": "LunchTime_1_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12:00', '12:30', '13:00', '13:30']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: yes 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_2_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "When would you like to go?", times)
    go_to(get_current_location())
    say("Jill said: " + response + " " + time)
"""

ordered_field_buffer.append(LunchTime_1_2_0)

LunchTime_1_2_1 = {
    "name": "LunchTime_1_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time' referenced before assignment",
}

program_LunchTime_1_2_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "When would you like to go?", times)
    go_to(get_current_location())
    say("Jill said: " + response + " " + time)
"""

ordered_field_buffer.append(LunchTime_1_2_1)

LunchTime_1_3_0 = {
    "name": "LunchTime_1_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['11:00am', '12:00pm', '1:00pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 11:00am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_3_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "What time?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_3_0)

LunchTime_1_3_1 = {
    "name": "LunchTime_1_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_3_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "What time?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_3_1)

LunchTime_1_4_0 = {
    "name": "LunchTime_1_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_4_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_4_0)

LunchTime_1_4_1 = {
    "name": "LunchTime_1_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_4_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_4_1)

LunchTime_1_5_0 = {
    "name": "LunchTime_1_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['11:30am', '12:00pm', '12:30pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11:30am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_5_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:30am", "12:00pm", "12:30pm"]
        time = ask("Jill", "When?", times)
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_5_0)

LunchTime_1_5_1 = {
    "name": "LunchTime_1_5_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time' referenced before assignment",
}

program_LunchTime_1_5_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:30am", "12:00pm", "12:30pm"]
        time = ask("Jill", "When?", times)
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_5_1)

LunchTime_1_6_0 = {
    "name": "LunchTime_1_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_6_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she would like to go at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_6_0)

LunchTime_1_6_1 = {
    "name": "LunchTime_1_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free to go for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_6_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she would like to go at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_6_1)

LunchTime_1_7_0 = {
    "name": "LunchTime_1_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_7_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:00", "12:00", "13:00"]
        time = ask("Jill", "What time?", times)
    else:
        time = "not available"
    go_to(start_loc)
    say("Jill said she is available at " + time)
"""

ordered_field_buffer.append(LunchTime_1_7_0)

LunchTime_1_7_1 = {
    "name": "LunchTime_1_7_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_7_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:00", "12:00", "13:00"]
        time = ask("Jill", "What time?", times)
    else:
        time = "not available"
    go_to(start_loc)
    say("Jill said she is available at " + time)
"""

ordered_field_buffer.append(LunchTime_1_7_1)

LunchTime_1_8_0 = {
    "name": "LunchTime_1_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_8_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_8_0)

LunchTime_1_8_1 = {
    "name": "LunchTime_1_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_8_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_8_1)

LunchTime_1_9_0 = {
    "name": "LunchTime_1_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: yes 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_9_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "When?", times)
    go_to(get_current_location())
    say("Jill said: " + response + " " + time)
"""

ordered_field_buffer.append(LunchTime_1_9_0)

LunchTime_1_9_1 = {
    "name": "LunchTime_1_9_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time' referenced before assignment",
}

program_LunchTime_1_9_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "When?", times)
    go_to(get_current_location())
    say("Jill said: " + response + " " + time)
"""

ordered_field_buffer.append(LunchTime_1_9_1)

LunchTime_1_10_0 = {
    "name": "LunchTime_1_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_10_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "When would you like to go?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_10_0)

LunchTime_1_10_1 = {
    "name": "LunchTime_1_10_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_10_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "When would you like to go?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_10_1)

LunchTime_1_11_0 = {
    "name": "LunchTime_1_11_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_11_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_1_11_0)

LunchTime_1_11_1 = {
    "name": "LunchTime_1_11_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_11_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_1_11_1)

LunchTime_1_12_0 = {
    "name": "LunchTime_1_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_12_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_1_12_0)

LunchTime_1_12_1 = {
    "name": "LunchTime_1_12_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_12_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_1_12_1)

LunchTime_1_13_0 = {
    "name": "LunchTime_1_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_13_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_13_0)

LunchTime_1_13_1 = {
    "name": "LunchTime_1_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_13_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_13_1)

LunchTime_1_14_0 = {
    "name": "LunchTime_1_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_14_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_14_0)

LunchTime_1_14_1 = {
    "name": "LunchTime_1_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_14_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_14_1)

LunchTime_1_15_0 = {
    "name": "LunchTime_1_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_15_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she would like to go at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_15_0)

LunchTime_1_15_1 = {
    "name": "LunchTime_1_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free to go for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_15_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she would like to go at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_15_1)

LunchTime_1_16_0 = {
    "name": "LunchTime_1_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_16_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_16_0)

LunchTime_1_16_1 = {
    "name": "LunchTime_1_16_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time' referenced before assignment",
}

program_LunchTime_1_16_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_16_1)

LunchTime_1_17_0 = {
    "name": "LunchTime_1_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_17_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_17_0)

LunchTime_1_17_1 = {
    "name": "LunchTime_1_17_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_17_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_17_1)

LunchTime_1_18_0 = {
    "name": "LunchTime_1_18_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_18_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:00", "12:00", "13:00"]
        time = ask("Jill", "When?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_18_0)

LunchTime_1_18_1 = {
    "name": "LunchTime_1_18_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_18_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:00", "12:00", "13:00"]
        time = ask("Jill", "When?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_18_1)

LunchTime_1_19_0 = {
    "name": "LunchTime_1_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_19_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "When?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_19_0)

LunchTime_1_19_1 = {
    "name": "LunchTime_1_19_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_19_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "When?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_19_1)

LunchTime_1_20_0 = {
    "name": "LunchTime_1_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_20_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_20_0)

LunchTime_1_20_1 = {
    "name": "LunchTime_1_20_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_20_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_20_1)

LunchTime_1_21_0 = {
    "name": "LunchTime_1_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_21_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_1_21_0)

LunchTime_1_21_1 = {
    "name": "LunchTime_1_21_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_21_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_1_21_1)

LunchTime_1_22_0 = {
    "name": "LunchTime_1_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is available at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_22_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
    else:
        time = "not available"
    go_to(get_current_location())
    say("Jill said she is available at " + time)
"""

ordered_field_buffer.append(LunchTime_1_22_0)

LunchTime_1_22_1 = {
    "name": "LunchTime_1_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is available at not available /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_22_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
    else:
        time = "not available"
    go_to(get_current_location())
    say("Jill said she is available at " + time)
"""

ordered_field_buffer.append(LunchTime_1_22_1)

LunchTime_1_23_0 = {
    "name": "LunchTime_1_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11:00am', '12:00pm', '1:00pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free to go for lunch tomorrow at 11:00am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_23_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_1_23_0)

LunchTime_1_23_1 = {
    "name": "LunchTime_1_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
    ],
    "error_message": "",
}

program_LunchTime_1_23_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_1_23_1)

LunchTime_1_24_0 = {
    "name": "LunchTime_1_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_24_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "What time?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_24_0)

LunchTime_1_24_1 = {
    "name": "LunchTime_1_24_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_24_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "What time?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_24_1)

LunchTime_1_25_0 = {
    "name": "LunchTime_1_25_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_25_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "What time?", times)
    go_to(start_loc)
    say("Jill said: " + response + " " + time)
"""

ordered_field_buffer.append(LunchTime_1_25_0)

LunchTime_1_25_1 = {
    "name": "LunchTime_1_25_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_25_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "What time?", times)
    go_to(start_loc)
    say("Jill said: " + response + " " + time)
"""

ordered_field_buffer.append(LunchTime_1_25_1)

LunchTime_1_26_0 = {
    "name": "LunchTime_1_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free to go for lunch tomorrow at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_26_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free to go for lunch tomorrow at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_26_0)

LunchTime_1_26_1 = {
    "name": "LunchTime_1_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free to go for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_26_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free to go for lunch tomorrow at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_26_1)

LunchTime_1_27_0 = {
    "name": "LunchTime_1_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11:00', '12:00', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: yes 11:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_27_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:00", "12:00", "13:00"]
        time = ask("Jill", "When would you like to go?", times)
    go_to(get_current_location())
    say("Jill said: " + response + " " + time)
"""

ordered_field_buffer.append(LunchTime_1_27_0)

LunchTime_1_27_1 = {
    "name": "LunchTime_1_27_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time' referenced before assignment",
}

program_LunchTime_1_27_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:00", "12:00", "13:00"]
        time = ask("Jill", "When would you like to go?", times)
    go_to(get_current_location())
    say("Jill said: " + response + " " + time)
"""

ordered_field_buffer.append(LunchTime_1_27_1)

LunchTime_1_28_0 = {
    "name": "LunchTime_1_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_28_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_28_0)

LunchTime_1_28_1 = {
    "name": "LunchTime_1_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_28_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_28_1)

LunchTime_1_29_0 = {
    "name": "LunchTime_1_29_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_29_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_1_29_0)

LunchTime_1_29_1 = {
    "name": "LunchTime_1_29_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_29_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_1_29_1)

LunchTime_1_30_0 = {
    "name": "LunchTime_1_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_30_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_30_0)

LunchTime_1_30_1 = {
    "name": "LunchTime_1_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_30_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_30_1)

LunchTime_1_31_0 = {
    "name": "LunchTime_1_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_31_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "When?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_31_0)

LunchTime_1_31_1 = {
    "name": "LunchTime_1_31_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_31_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "When?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_31_1)

LunchTime_1_32_0 = {
    "name": "LunchTime_1_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_32_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_32_0)

LunchTime_1_32_1 = {
    "name": "LunchTime_1_32_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_32_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_32_1)

LunchTime_1_33_0 = {
    "name": "LunchTime_1_33_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_33_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_33_0)

LunchTime_1_33_1 = {
    "name": "LunchTime_1_33_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_33_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_33_1)

LunchTime_1_34_0 = {
    "name": "LunchTime_1_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free for lunch tomorrow at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_34_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free for lunch tomorrow at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_34_0)

LunchTime_1_34_1 = {
    "name": "LunchTime_1_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_34_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free for lunch tomorrow at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_34_1)

LunchTime_1_35_0 = {
    "name": "LunchTime_1_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free to go for lunch tomorrow at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_35_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free to go for lunch tomorrow at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_35_0)

LunchTime_1_35_1 = {
    "name": "LunchTime_1_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free to go for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_35_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free to go for lunch tomorrow at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_35_1)

LunchTime_1_36_0 = {
    "name": "LunchTime_1_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_36_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_36_0)

LunchTime_1_36_1 = {
    "name": "LunchTime_1_36_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_36_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_36_1)

LunchTime_1_37_0 = {
    "name": "LunchTime_1_37_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_37_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_37_0)

LunchTime_1_37_1 = {
    "name": "LunchTime_1_37_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_37_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_37_1)

LunchTime_1_38_0 = {
    "name": "LunchTime_1_38_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_38_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_38_0)

LunchTime_1_38_1 = {
    "name": "LunchTime_1_38_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_38_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_38_1)

LunchTime_1_39_0 = {
    "name": "LunchTime_1_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_39_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_39_0)

LunchTime_1_39_1 = {
    "name": "LunchTime_1_39_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_39_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_39_1)

LunchTime_1_40_0 = {
    "name": "LunchTime_1_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['11:00am', '12:00pm', '1:00pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 11:00am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_40_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_40_0)

LunchTime_1_40_1 = {
    "name": "LunchTime_1_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_40_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_40_1)

LunchTime_1_41_0 = {
    "name": "LunchTime_1_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_41_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "What time?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_41_0)

LunchTime_1_41_1 = {
    "name": "LunchTime_1_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_41_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "What time?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_41_1)

LunchTime_1_42_0 = {
    "name": "LunchTime_1_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free to go for lunch tomorrow at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_42_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free to go for lunch tomorrow at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_42_0)

LunchTime_1_42_1 = {
    "name": "LunchTime_1_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free to go for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_42_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free to go for lunch tomorrow at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_42_1)

LunchTime_1_43_0 = {
    "name": "LunchTime_1_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['11am', '12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_43_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm", "2pm"]
        time = ask("Jill", "What time?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_43_0)

LunchTime_1_43_1 = {
    "name": "LunchTime_1_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_43_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm", "2pm"]
        time = ask("Jill", "What time?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_43_1)

LunchTime_1_44_0 = {
    "name": "LunchTime_1_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_44_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_44_0)

LunchTime_1_44_1 = {
    "name": "LunchTime_1_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_44_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_44_1)

LunchTime_1_45_0 = {
    "name": "LunchTime_1_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_45_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "What time?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_45_0)

LunchTime_1_45_1 = {
    "name": "LunchTime_1_45_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_45_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "What time?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_45_1)

LunchTime_1_46_0 = {
    "name": "LunchTime_1_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_46_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_46_0)

LunchTime_1_46_1 = {
    "name": "LunchTime_1_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_46_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_46_1)

LunchTime_1_47_0 = {
    "name": "LunchTime_1_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free to go for lunch tomorrow at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_47_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free to go for lunch tomorrow at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_47_0)

LunchTime_1_47_1 = {
    "name": "LunchTime_1_47_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free to go for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_47_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", times)
        go_to(get_current_location())
        say("Jill said she is free to go for lunch tomorrow at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_1_47_1)

LunchTime_1_48_0 = {
    "name": "LunchTime_1_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is free at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_48_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_48_0)

LunchTime_1_48_1 = {
    "name": "LunchTime_1_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not free /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_48_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        times = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When?", times)
        go_to(get_current_location())
        say("Jill said she is free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she is not free")
"""

ordered_field_buffer.append(LunchTime_1_48_1)

LunchTime_1_49_0 = {
    "name": "LunchTime_1_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_49_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_49_0)

LunchTime_1_49_1 = {
    "name": "LunchTime_1_49_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_1_49_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_1_49_1)

LunchTime_2_0_0 = {
    "name": "LunchTime_2_0_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_0_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:30am", "12:00pm", "12:30pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_0_0)

LunchTime_2_0_1 = {
    "name": "LunchTime_2_0_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_0_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:30am", "12:00pm", "12:30pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_0_1)

LunchTime_2_1_0 = {
    "name": "LunchTime_2_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go for lunch? /$@!/ ['11:30am', '12:30pm', '1:30pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11:30am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_1_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go for lunch?", ["11:30am", "12:30pm", "1:30pm"])
    else:
        lunch_time = "not going"
    go_to(get_current_location())
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_1_0)

LunchTime_2_1_1 = {
    "name": "LunchTime_2_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_1_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go for lunch?", ["11:30am", "12:30pm", "1:30pm"])
    else:
        lunch_time = "not going"
    go_to(get_current_location())
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_1_1)

LunchTime_2_2_0 = {
    "name": "LunchTime_2_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_2_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_2_0)

LunchTime_2_2_1 = {
    "name": "LunchTime_2_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_2_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_2_1)

LunchTime_2_3_0 = {
    "name": "LunchTime_2_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go for lunch? /$@!/ ['11am', '12pm', '1pm']",
        "Say /$@!/ jill said: 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_3_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go for lunch?", ["11am", "12pm", "1pm"])
    else:
        lunch_time = "No"
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_3_0)

LunchTime_2_3_1 = {
    "name": "LunchTime_2_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_3_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go for lunch?", ["11am", "12pm", "1pm"])
    else:
        lunch_time = "No"
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_3_1)

LunchTime_2_4_0 = {
    "name": "LunchTime_2_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_4_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_4_0)

LunchTime_2_4_1 = {
    "name": "LunchTime_2_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_4_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_4_1)

LunchTime_2_5_0 = {
    "name": "LunchTime_2_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_5_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_5_0)

LunchTime_2_5_1 = {
    "name": "LunchTime_2_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_5_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_5_1)

LunchTime_2_6_0 = {
    "name": "LunchTime_2_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_6_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_6_0)

LunchTime_2_6_1 = {
    "name": "LunchTime_2_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_6_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_6_1)

LunchTime_2_7_0 = {
    "name": "LunchTime_2_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_7_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_2_7_0)

LunchTime_2_7_1 = {
    "name": "LunchTime_2_7_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_7_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_2_7_1)

LunchTime_2_8_0 = {
    "name": "LunchTime_2_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_8_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_2_8_0)

LunchTime_2_8_1 = {
    "name": "LunchTime_2_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_8_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_2_8_1)

LunchTime_2_9_0 = {
    "name": "LunchTime_2_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_9_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she is " + time)
"""

ordered_field_buffer.append(LunchTime_2_9_0)

LunchTime_2_9_1 = {
    "name": "LunchTime_2_9_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she is not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_9_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she is " + time)
"""

ordered_field_buffer.append(LunchTime_2_9_1)

LunchTime_2_10_0 = {
    "name": "LunchTime_2_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_10_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_10_0)

LunchTime_2_10_1 = {
    "name": "LunchTime_2_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_10_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_10_1)

LunchTime_2_11_0 = {
    "name": "LunchTime_2_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_11_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_11_0)

LunchTime_2_11_1 = {
    "name": "LunchTime_2_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_11_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_11_1)

LunchTime_2_12_0 = {
    "name": "LunchTime_2_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "Say /$@!/ jill said: 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_12_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    else:
        lunch_time = "No"
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_12_0)

LunchTime_2_12_1 = {
    "name": "LunchTime_2_12_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_12_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    else:
        lunch_time = "No"
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_12_1)

LunchTime_2_13_0 = {
    "name": "LunchTime_2_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_13_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_13_0)

LunchTime_2_13_1 = {
    "name": "LunchTime_2_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_13_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_13_1)

LunchTime_2_14_0 = {
    "name": "LunchTime_2_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_14_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_14_0)

LunchTime_2_14_1 = {
    "name": "LunchTime_2_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_14_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_14_1)

LunchTime_2_15_0 = {
    "name": "LunchTime_2_15_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12:00', '13:00', '14:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_15_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12:00", "13:00", "14:00"])
    else:
        time = "not going"
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_15_0)

LunchTime_2_15_1 = {
    "name": "LunchTime_2_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_15_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12:00", "13:00", "14:00"])
    else:
        time = "not going"
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_15_1)

LunchTime_2_16_0 = {
    "name": "LunchTime_2_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_16_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        response = ask("Jill", "When would you like to go?", time_options)
    go_to(get_current_location())
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_2_16_0)

LunchTime_2_16_1 = {
    "name": "LunchTime_2_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_16_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        response = ask("Jill", "When would you like to go?", time_options)
    go_to(get_current_location())
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_2_16_1)

LunchTime_2_17_0 = {
    "name": "LunchTime_2_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11:30am', '12:00pm', '12:30pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 11:30am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_17_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:30am", "12:00pm", "12:30pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_17_0)

LunchTime_2_17_1 = {
    "name": "LunchTime_2_17_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_17_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:30am", "12:00pm", "12:30pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_17_1)

LunchTime_2_18_0 = {
    "name": "LunchTime_2_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go for lunch? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_18_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go for lunch?", ["12pm", "1pm", "2pm"])
    else:
        lunch_time = "No"
    go_to(get_current_location())
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_18_0)

LunchTime_2_18_1 = {
    "name": "LunchTime_2_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_18_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go for lunch?", ["12pm", "1pm", "2pm"])
    else:
        lunch_time = "No"
    go_to(get_current_location())
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_18_1)

LunchTime_2_19_0 = {
    "name": "LunchTime_2_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_19_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_19_0)

LunchTime_2_19_1 = {
    "name": "LunchTime_2_19_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_19_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_19_1)

LunchTime_2_20_0 = {
    "name": "LunchTime_2_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_20_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_2_20_0)

LunchTime_2_20_1 = {
    "name": "LunchTime_2_20_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_20_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_2_20_1)

LunchTime_2_21_0 = {
    "name": "LunchTime_2_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_21_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_21_0)

LunchTime_2_21_1 = {
    "name": "LunchTime_2_21_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_21_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_21_1)

LunchTime_2_22_0 = {
    "name": "LunchTime_2_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00', '13:30']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: yes 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_22_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "What time?", time_options)
    go_to(get_current_location())
    say("Jill said: " + response + " " + time)
"""

ordered_field_buffer.append(LunchTime_2_22_0)

LunchTime_2_22_1 = {
    "name": "LunchTime_2_22_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time' referenced before assignment",
}

program_LunchTime_2_22_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "What time?", time_options)
    go_to(get_current_location())
    say("Jill said: " + response + " " + time)
"""

ordered_field_buffer.append(LunchTime_2_22_1)

LunchTime_2_23_0 = {
    "name": "LunchTime_2_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_23_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_23_0)

LunchTime_2_23_1 = {
    "name": "LunchTime_2_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_23_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_23_1)

LunchTime_2_24_0 = {
    "name": "LunchTime_2_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_24_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_24_0)

LunchTime_2_24_1 = {
    "name": "LunchTime_2_24_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_24_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_24_1)

LunchTime_2_25_0 = {
    "name": "LunchTime_2_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_25_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_25_0)

LunchTime_2_25_1 = {
    "name": "LunchTime_2_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_25_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_25_1)

LunchTime_2_26_0 = {
    "name": "LunchTime_2_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_26_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_26_0)

LunchTime_2_26_1 = {
    "name": "LunchTime_2_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_26_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_26_1)

LunchTime_2_27_0 = {
    "name": "LunchTime_2_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12:00', '12:30', '13:00', '13:30']",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_27_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_27_0)

LunchTime_2_27_1 = {
    "name": "LunchTime_2_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_27_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_27_1)

LunchTime_2_28_0 = {
    "name": "LunchTime_2_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_28_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_28_0)

LunchTime_2_28_1 = {
    "name": "LunchTime_2_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_28_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_28_1)

LunchTime_2_29_0 = {
    "name": "LunchTime_2_29_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_29_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_2_29_0)

LunchTime_2_29_1 = {
    "name": "LunchTime_2_29_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_29_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_2_29_1)

LunchTime_2_30_0 = {
    "name": "LunchTime_2_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_30_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_30_0)

LunchTime_2_30_1 = {
    "name": "LunchTime_2_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_30_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_30_1)

LunchTime_2_31_0 = {
    "name": "LunchTime_2_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go for lunch? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_31_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go for lunch?", ["12pm", "1pm", "2pm"])
    else:
        lunch_time = "No"
    go_to(get_current_location())
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_31_0)

LunchTime_2_31_1 = {
    "name": "LunchTime_2_31_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_31_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go for lunch?", ["12pm", "1pm", "2pm"])
    else:
        lunch_time = "No"
    go_to(get_current_location())
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_31_1)

LunchTime_2_32_0 = {
    "name": "LunchTime_2_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go for lunch? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_32_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go for lunch?", ["11am", "12pm", "1pm"])
    else:
        lunch_time = "No"
    go_to(get_current_location())
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_32_0)

LunchTime_2_32_1 = {
    "name": "LunchTime_2_32_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_32_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go for lunch?", ["11am", "12pm", "1pm"])
    else:
        lunch_time = "No"
    go_to(get_current_location())
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_32_1)

LunchTime_2_33_0 = {
    "name": "LunchTime_2_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12:00', '12:30', '13:00', '13:30']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_33_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_33_0)

LunchTime_2_33_1 = {
    "name": "LunchTime_2_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_33_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_33_1)

LunchTime_2_34_0 = {
    "name": "LunchTime_2_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_34_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_34_0)

LunchTime_2_34_1 = {
    "name": "LunchTime_2_34_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time' referenced before assignment",
}

program_LunchTime_2_34_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_34_1)

LunchTime_2_35_0 = {
    "name": "LunchTime_2_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_35_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_35_0)

LunchTime_2_35_1 = {
    "name": "LunchTime_2_35_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time' referenced before assignment",
}

program_LunchTime_2_35_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_35_1)

LunchTime_2_36_0 = {
    "name": "LunchTime_2_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_36_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(get_current_location())
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_36_0)

LunchTime_2_36_1 = {
    "name": "LunchTime_2_36_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'lunch_time' referenced before assignment",
}

program_LunchTime_2_36_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(get_current_location())
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_36_1)

LunchTime_2_37_0 = {
    "name": "LunchTime_2_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12:00', '12:30', '13:00', '13:30']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_37_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_37_0)

LunchTime_2_37_1 = {
    "name": "LunchTime_2_37_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_37_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_37_1)

LunchTime_2_38_0 = {
    "name": "LunchTime_2_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_38_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_38_0)

LunchTime_2_38_1 = {
    "name": "LunchTime_2_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_38_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_38_1)

LunchTime_2_39_0 = {
    "name": "LunchTime_2_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_39_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    else:
        lunch_time = "No"
    go_to(get_current_location())
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_39_0)

LunchTime_2_39_1 = {
    "name": "LunchTime_2_39_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_39_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    else:
        lunch_time = "No"
    go_to(get_current_location())
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_39_1)

LunchTime_2_40_0 = {
    "name": "LunchTime_2_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_40_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(get_current_location())
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_2_40_0)

LunchTime_2_40_1 = {
    "name": "LunchTime_2_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_40_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["11am", "12pm", "1pm"])
    go_to(get_current_location())
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_2_40_1)

LunchTime_2_41_0 = {
    "name": "LunchTime_2_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11:00am', '12:00pm', '1:00pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at 11:00am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_41_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_41_0)

LunchTime_2_41_1 = {
    "name": "LunchTime_2_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_41_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she would like to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_2_41_1)

LunchTime_2_42_0 = {
    "name": "LunchTime_2_42_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_42_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go for lunch?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_42_0)

LunchTime_2_42_1 = {
    "name": "LunchTime_2_42_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_42_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go for lunch?", ["11am", "12pm", "1pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_42_1)

LunchTime_2_43_0 = {
    "name": "LunchTime_2_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go for lunch? /$@!/ ['12pm', '1pm', '2pm']",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_43_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go for lunch?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_43_0)

LunchTime_2_43_1 = {
    "name": "LunchTime_2_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_43_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go for lunch?", ["12pm", "1pm", "2pm"])
    else:
        time = "No"
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_43_1)

LunchTime_2_44_0 = {
    "name": "LunchTime_2_44_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_44_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_2_44_0)

LunchTime_2_44_1 = {
    "name": "LunchTime_2_44_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_44_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + response)
"""

ordered_field_buffer.append(LunchTime_2_44_1)

LunchTime_2_45_0 = {
    "name": "LunchTime_2_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['11:00am', '12:00pm', '1:00pm']",
        "Say /$@!/ jill said: 11:00am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_45_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go?", ["11:00am", "12:00pm", "1:00pm"])
    else:
        lunch_time = "No"
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_45_0)

LunchTime_2_45_1 = {
    "name": "LunchTime_2_45_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_45_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        lunch_time = ask("Jill", "When would you like to go?", ["11:00am", "12:00pm", "1:00pm"])
    else:
        lunch_time = "No"
    say("Jill said: " + lunch_time)
"""

ordered_field_buffer.append(LunchTime_2_45_1)

LunchTime_2_46_0 = {
    "name": "LunchTime_2_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_46_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_46_0)

LunchTime_2_46_1 = {
    "name": "LunchTime_2_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_46_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "When would you like to go?", time_options)
    else:
        time = "not going"
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_46_1)

LunchTime_2_47_0 = {
    "name": "LunchTime_2_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: yes 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_47_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(get_current_location())
    say("Jill said: " + response + " " + time)
"""

ordered_field_buffer.append(LunchTime_2_47_0)

LunchTime_2_47_1 = {
    "name": "LunchTime_2_47_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time' referenced before assignment",
}

program_LunchTime_2_47_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(get_current_location())
    say("Jill said: " + response + " " + time)
"""

ordered_field_buffer.append(LunchTime_2_47_1)

LunchTime_2_48_0 = {
    "name": "LunchTime_2_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_48_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_48_0)

LunchTime_2_48_1 = {
    "name": "LunchTime_2_48_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time' referenced before assignment",
}

program_LunchTime_2_48_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_48_1)

LunchTime_2_49_0 = {
    "name": "LunchTime_2_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_49_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_49_0)

LunchTime_2_49_1 = {
    "name": "LunchTime_2_49_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_2_49_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time = ask("Jill", "When would you like to go?", ["12pm", "1pm", "2pm"])
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_2_49_1)

LunchTime_3_0_0 = {
    "name": "LunchTime_3_0_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_0_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_0_0)

LunchTime_3_0_1 = {
    "name": "LunchTime_3_0_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_0_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_0_1)

LunchTime_3_1_0 = {
    "name": "LunchTime_3_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_1_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_1_0)

LunchTime_3_1_1 = {
    "name": "LunchTime_3_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_1_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_1_1)

LunchTime_3_2_0 = {
    "name": "LunchTime_3_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_2_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + response + " and she wants to go at " + time)
"""

ordered_field_buffer.append(LunchTime_3_2_0)

LunchTime_3_2_1 = {
    "name": "LunchTime_3_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_2_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + response + " and she wants to go at " + time)
"""

ordered_field_buffer.append(LunchTime_3_2_1)

LunchTime_3_3_0 = {
    "name": "LunchTime_3_3_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_3_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_3_0)

LunchTime_3_3_1 = {
    "name": "LunchTime_3_3_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_3_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_3_1)

LunchTime_3_4_0 = {
    "name": "LunchTime_3_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will be free at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_4_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_4_0)

LunchTime_3_4_1 = {
    "name": "LunchTime_3_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will not be free for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_4_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_4_1)

LunchTime_3_5_0 = {
    "name": "LunchTime_3_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will be free at 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_5_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_5_0)

LunchTime_3_5_1 = {
    "name": "LunchTime_3_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will not be free for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_5_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_5_1)

LunchTime_3_6_0 = {
    "name": "LunchTime_3_6_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_6_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    else:
        time = "not available"
    go_to(start_loc)
    say("Jill said she will be free for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_3_6_0)

LunchTime_3_6_1 = {
    "name": "LunchTime_3_6_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_6_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    else:
        time = "not available"
    go_to(start_loc)
    say("Jill said she will be free for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_3_6_1)

LunchTime_3_7_0 = {
    "name": "LunchTime_3_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_7_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said: " + time_selected)
    else:
        go_to(start_loc)
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_7_0)

LunchTime_3_7_1 = {
    "name": "LunchTime_3_7_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_7_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said: " + time_selected)
    else:
        go_to(start_loc)
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_7_1)

LunchTime_3_8_0 = {
    "name": "LunchTime_3_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_8_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_8_0)

LunchTime_3_8_1 = {
    "name": "LunchTime_3_8_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_8_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_8_1)

LunchTime_3_9_0 = {
    "name": "LunchTime_3_9_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_9_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said she will be free at " + time_selected)
    else:
        go_to(start_loc)
        say("Jill said she will not be free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_9_0)

LunchTime_3_9_1 = {
    "name": "LunchTime_3_9_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_9_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said she will be free at " + time_selected)
    else:
        go_to(start_loc)
        say("Jill said she will not be free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_9_1)

LunchTime_3_10_0 = {
    "name": "LunchTime_3_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['11:00am', '12:00pm', '1:00pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11:00am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_10_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00am", "12:00pm", "1:00pm"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_10_0)

LunchTime_3_10_1 = {
    "name": "LunchTime_3_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_10_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00am", "12:00pm", "1:00pm"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_10_1)

LunchTime_3_11_0 = {
    "name": "LunchTime_3_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will be free at 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_11_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time_selected)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_11_0)

LunchTime_3_11_1 = {
    "name": "LunchTime_3_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will not be free to go for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_11_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time_selected)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_11_1)

LunchTime_3_12_0 = {
    "name": "LunchTime_3_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_12_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_12_0)

LunchTime_3_12_1 = {
    "name": "LunchTime_3_12_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_12_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_12_1)

LunchTime_3_13_0 = {
    "name": "LunchTime_3_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_13_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_selected)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_13_0)

LunchTime_3_13_1 = {
    "name": "LunchTime_3_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_13_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_selected)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_13_1)

LunchTime_3_14_0 = {
    "name": "LunchTime_3_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_14_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_14_0)

LunchTime_3_14_1 = {
    "name": "LunchTime_3_14_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_14_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_14_1)

LunchTime_3_15_0 = {
    "name": "LunchTime_3_15_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_15_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + response + " and she would like to go at " + time)
"""

ordered_field_buffer.append(LunchTime_3_15_0)

LunchTime_3_15_1 = {
    "name": "LunchTime_3_15_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_15_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + response + " and she would like to go at " + time)
"""

ordered_field_buffer.append(LunchTime_3_15_1)

LunchTime_3_16_0 = {
    "name": "LunchTime_3_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will be free at 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_16_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time_selected)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_16_0)

LunchTime_3_16_1 = {
    "name": "LunchTime_3_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will not be free to go for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_16_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time_selected)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_16_1)

LunchTime_3_17_0 = {
    "name": "LunchTime_3_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_17_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00pm", "12:30pm", "1:00pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_17_0)

LunchTime_3_17_1 = {
    "name": "LunchTime_3_17_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_17_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00pm", "12:30pm", "1:00pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_17_1)

LunchTime_3_18_0 = {
    "name": "LunchTime_3_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she would like to go at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_18_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she would like to go at " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said she won't be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_18_0)

LunchTime_3_18_1 = {
    "name": "LunchTime_3_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she won't be free to go for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_18_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she would like to go at " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said she won't be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_18_1)

LunchTime_3_19_0 = {
    "name": "LunchTime_3_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_19_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12 pm", "1 pm", "2 pm"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said: " + time_response)
    else:
        go_to(start_loc)
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_19_0)

LunchTime_3_19_1 = {
    "name": "LunchTime_3_19_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_19_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12 pm", "1 pm", "2 pm"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said: " + time_response)
    else:
        go_to(start_loc)
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_19_1)

LunchTime_3_20_0 = {
    "name": "LunchTime_3_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_20_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said: " + time_response)
    else:
        go_to(start_loc)
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_20_0)

LunchTime_3_20_1 = {
    "name": "LunchTime_3_20_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_20_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said: " + time_response)
    else:
        go_to(start_loc)
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_20_1)

LunchTime_3_21_0 = {
    "name": "LunchTime_3_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_21_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    else:
        time = "not available"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_21_0)

LunchTime_3_21_1 = {
    "name": "LunchTime_3_21_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not available /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_21_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    else:
        time = "not available"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_21_1)

LunchTime_3_22_0 = {
    "name": "LunchTime_3_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will be free to go for lunch tomorrow at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_22_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free to go for lunch tomorrow at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_22_0)

LunchTime_3_22_1 = {
    "name": "LunchTime_3_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will not be free to go for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_22_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free to go for lunch tomorrow at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_22_1)

LunchTime_3_23_0 = {
    "name": "LunchTime_3_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_23_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said she will be free to go for lunch tomorrow at " + time_response)
    else:
        go_to(start_loc)
        say("Jill said she will not be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_23_0)

LunchTime_3_23_1 = {
    "name": "LunchTime_3_23_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_23_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said she will be free to go for lunch tomorrow at " + time_response)
    else:
        go_to(start_loc)
        say("Jill said she will not be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_23_1)

LunchTime_3_24_0 = {
    "name": "LunchTime_3_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_24_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_24_0)

LunchTime_3_24_1 = {
    "name": "LunchTime_3_24_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_24_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_24_1)

LunchTime_3_25_0 = {
    "name": "LunchTime_3_25_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_25_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    else:
        time = "not available"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_25_0)

LunchTime_3_25_1 = {
    "name": "LunchTime_3_25_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_25_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    else:
        time = "not available"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_25_1)

LunchTime_3_26_0 = {
    "name": "LunchTime_3_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_26_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_selected)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_26_0)

LunchTime_3_26_1 = {
    "name": "LunchTime_3_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_26_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_selected)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_26_1)

LunchTime_3_27_0 = {
    "name": "LunchTime_3_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_27_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_27_0)

LunchTime_3_27_1 = {
    "name": "LunchTime_3_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_27_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_27_1)

LunchTime_3_28_0 = {
    "name": "LunchTime_3_28_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_28_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00pm", "12:30pm", "1:00pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_28_0)

LunchTime_3_28_1 = {
    "name": "LunchTime_3_28_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_28_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00pm", "12:30pm", "1:00pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_28_1)

LunchTime_3_29_0 = {
    "name": "LunchTime_3_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_29_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_selected)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_29_0)

LunchTime_3_29_1 = {
    "name": "LunchTime_3_29_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_29_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_selected)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_29_1)

LunchTime_3_30_0 = {
    "name": "LunchTime_3_30_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_30_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_30_0)

LunchTime_3_30_1 = {
    "name": "LunchTime_3_30_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_30_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_30_1)

LunchTime_3_31_0 = {
    "name": "LunchTime_3_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_31_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_31_0)

LunchTime_3_31_1 = {
    "name": "LunchTime_3_31_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_31_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_31_1)

LunchTime_3_32_0 = {
    "name": "LunchTime_3_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_32_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_32_0)

LunchTime_3_32_1 = {
    "name": "LunchTime_3_32_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_32_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_32_1)

LunchTime_3_33_0 = {
    "name": "LunchTime_3_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_33_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_33_0)

LunchTime_3_33_1 = {
    "name": "LunchTime_3_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_33_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_33_1)

LunchTime_3_34_0 = {
    "name": "LunchTime_3_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_34_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_34_0)

LunchTime_3_34_1 = {
    "name": "LunchTime_3_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_34_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_34_1)

LunchTime_3_35_0 = {
    "name": "LunchTime_3_35_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_35_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said: " + time_selected)
    else:
        go_to(start_loc)
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_35_0)

LunchTime_3_35_1 = {
    "name": "LunchTime_3_35_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_35_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said: " + time_selected)
    else:
        go_to(start_loc)
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_35_1)

LunchTime_3_36_0 = {
    "name": "LunchTime_3_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_36_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
        say("Jill said: " + time)
    else:
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_36_0)

LunchTime_3_36_1 = {
    "name": "LunchTime_3_36_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_36_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
        say("Jill said: " + time)
    else:
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_36_1)

LunchTime_3_37_0 = {
    "name": "LunchTime_3_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_37_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    else:
        time = "not available"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_37_0)

LunchTime_3_37_1 = {
    "name": "LunchTime_3_37_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not available /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_37_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    else:
        time = "not available"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_37_1)

LunchTime_3_38_0 = {
    "name": "LunchTime_3_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will be free at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_38_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_38_0)

LunchTime_3_38_1 = {
    "name": "LunchTime_3_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will not be free for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_38_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_38_1)

LunchTime_3_39_0 = {
    "name": "LunchTime_3_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_39_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said she will be free at " + time)
    else:
        go_to(start_loc)
        say("Jill said she will not be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_39_0)

LunchTime_3_39_1 = {
    "name": "LunchTime_3_39_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_39_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said she will be free at " + time)
    else:
        go_to(start_loc)
        say("Jill said she will not be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_39_1)

LunchTime_3_40_0 = {
    "name": "LunchTime_3_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_40_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
    go_to(get_current_location())
    say("Jill said: " + time_selected)
"""

ordered_field_buffer.append(LunchTime_3_40_0)

LunchTime_3_40_1 = {
    "name": "LunchTime_3_40_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time_selected' referenced before assignment",
}

program_LunchTime_3_40_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_selected = ask("Jill", "What time would you like to go?", time_options)
    go_to(get_current_location())
    say("Jill said: " + time_selected)
"""

ordered_field_buffer.append(LunchTime_3_40_1)

LunchTime_3_41_0 = {
    "name": "LunchTime_3_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will be free at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_41_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12PM", "1PM", "2PM"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_41_0)

LunchTime_3_41_1 = {
    "name": "LunchTime_3_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will not be free to go for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_41_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12PM", "1PM", "2PM"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_41_1)

LunchTime_3_42_0 = {
    "name": "LunchTime_3_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_42_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_42_0)

LunchTime_3_42_1 = {
    "name": "LunchTime_3_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_42_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_42_1)

LunchTime_3_43_0 = {
    "name": "LunchTime_3_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_43_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_43_0)

LunchTime_3_43_1 = {
    "name": "LunchTime_3_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_43_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_43_1)

LunchTime_3_44_0 = {
    "name": "LunchTime_3_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12 pm', '1 pm', '2 pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will be free at 12 pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_44_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12 PM", "1 PM", "2 PM"]
        time_chosen = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time_chosen)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_44_0)

LunchTime_3_44_1 = {
    "name": "LunchTime_3_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will not be free for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_44_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12 PM", "1 PM", "2 PM"]
        time_chosen = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time_chosen)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_44_1)

LunchTime_3_45_0 = {
    "name": "LunchTime_3_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_45_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_45_0)

LunchTime_3_45_1 = {
    "name": "LunchTime_3_45_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_45_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_45_1)

LunchTime_3_46_0 = {
    "name": "LunchTime_3_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12 pm', '1 pm', '2 pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will be free at 12 pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_46_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12 PM", "1 PM", "2 PM"]
        time_chosen = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time_chosen)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_46_0)

LunchTime_3_46_1 = {
    "name": "LunchTime_3_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she will not be free to go for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_46_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12 PM", "1 PM", "2 PM"]
        time_chosen = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said she will be free at " + time_chosen)
    else:
        go_to(get_current_location())
        say("Jill said she will not be free to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_46_1)

LunchTime_3_47_0 = {
    "name": "LunchTime_3_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_47_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said she will be free at " + time)
    else:
        go_to(start_loc)
        say("Jill said she will not be free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_47_0)

LunchTime_3_47_1 = {
    "name": "LunchTime_3_47_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_3_47_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time would you like to go?", time_options)
        go_to(start_loc)
        say("Jill said she will be free at " + time)
    else:
        go_to(start_loc)
        say("Jill said she will not be free for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_3_47_1)

LunchTime_3_48_0 = {
    "name": "LunchTime_3_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_48_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    else:
        time = "not available"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_48_0)

LunchTime_3_48_1 = {
    "name": "LunchTime_3_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not available /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_48_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time would you like to go?", time_options)
    else:
        time = "not available"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_3_48_1)

LunchTime_3_49_0 = {
    "name": "LunchTime_3_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00 pm', '12:30 pm', '1:00 pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_49_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00 PM", "12:30 PM", "1:00 PM"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_49_0)

LunchTime_3_49_1 = {
    "name": "LunchTime_3_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_49_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00 PM", "12:30 PM", "1:00 PM"]
        time_response = ask("Jill", "What time would you like to go?", time_options)
        go_to(get_current_location())
        say("Jill said: " + time_response)
    else:
        go_to(get_current_location())
        say("Jill said: No")
"""

ordered_field_buffer.append(LunchTime_3_49_1)

LunchTime_4_0_0 = {
    "name": "LunchTime_4_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go for lunch tomorrow at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_0_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she wants to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_4_0_0)

LunchTime_4_0_1 = {
    "name": "LunchTime_4_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go for lunch tomorrow at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_0_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she wants to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_4_0_1)

LunchTime_4_1_0 = {
    "name": "LunchTime_4_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_1_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_1_0)

LunchTime_4_1_1 = {
    "name": "LunchTime_4_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_1_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_1_1)

LunchTime_4_2_0 = {
    "name": "LunchTime_4_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: yes and she chose 12:00 as the time /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_2_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(get_current_location())
    say("Jill said: " + response + " and she chose " + time + " as the time")
"""

ordered_field_buffer.append(LunchTime_4_2_0)

LunchTime_4_2_1 = {
    "name": "LunchTime_4_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time' referenced before assignment",
}

program_LunchTime_4_2_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(get_current_location())
    say("Jill said: " + response + " and she chose " + time + " as the time")
"""

ordered_field_buffer.append(LunchTime_4_2_1)

LunchTime_4_3_0 = {
    "name": "LunchTime_4_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_3_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_3_0)

LunchTime_4_3_1 = {
    "name": "LunchTime_4_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_3_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_3_1)

LunchTime_4_4_0 = {
    "name": "LunchTime_4_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_4_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
        go_to(get_current_location())
        say("Jill said she wants to go at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she does not want to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_4_4_0)

LunchTime_4_4_1 = {
    "name": "LunchTime_4_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she does not want to go for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_4_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
        go_to(get_current_location())
        say("Jill said she wants to go at " + time)
    else:
        go_to(get_current_location())
        say("Jill said she does not want to go for lunch tomorrow")
"""

ordered_field_buffer.append(LunchTime_4_4_1)

LunchTime_4_5_0 = {
    "name": "LunchTime_4_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['11:00 am', '12:00 pm', '1:00 pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go at 11:00 am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_5_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00 am", "12:00 pm", "1:00 pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she wants to go at " + time)
"""

ordered_field_buffer.append(LunchTime_4_5_0)

LunchTime_4_5_1 = {
    "name": "LunchTime_4_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_5_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00 am", "12:00 pm", "1:00 pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she wants to go at " + time)
"""

ordered_field_buffer.append(LunchTime_4_5_1)

LunchTime_4_6_0 = {
    "name": "LunchTime_4_6_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_6_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_response = ask("Jill", "What time do you want to go?", time_options)
        go_to(start_loc)
        say("Jill said she wants to go at " + time_response)
    else:
        go_to(start_loc)
        say("Jill said she does not want to go")
"""

ordered_field_buffer.append(LunchTime_4_6_0)

LunchTime_4_6_1 = {
    "name": "LunchTime_4_6_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_6_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_response = ask("Jill", "What time do you want to go?", time_options)
        go_to(start_loc)
        say("Jill said she wants to go at " + time_response)
    else:
        go_to(start_loc)
        say("Jill said she does not want to go")
"""

ordered_field_buffer.append(LunchTime_4_6_1)

LunchTime_4_7_0 = {
    "name": "LunchTime_4_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_7_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she wants to go at " + time)
"""

ordered_field_buffer.append(LunchTime_4_7_0)

LunchTime_4_7_1 = {
    "name": "LunchTime_4_7_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_7_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she wants to go at " + time)
"""

ordered_field_buffer.append(LunchTime_4_7_1)

LunchTime_4_8_0 = {
    "name": "LunchTime_4_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_8_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_8_0)

LunchTime_4_8_1 = {
    "name": "LunchTime_4_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_8_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_8_1)

LunchTime_4_9_0 = {
    "name": "LunchTime_4_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_9_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_9_0)

LunchTime_4_9_1 = {
    "name": "LunchTime_4_9_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time' referenced before assignment",
}

program_LunchTime_4_9_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_9_1)

LunchTime_4_10_0 = {
    "name": "LunchTime_4_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['11:00am', '12:00pm', '1:00pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11:00am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_10_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_10_0)

LunchTime_4_10_1 = {
    "name": "LunchTime_4_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_10_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_10_1)

LunchTime_4_11_0 = {
    "name": "LunchTime_4_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['11:00am', '12:00pm', '1:00pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11:00am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_11_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_11_0)

LunchTime_4_11_1 = {
    "name": "LunchTime_4_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_11_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_11_1)

LunchTime_4_12_0 = {
    "name": "LunchTime_4_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_12_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_12_0)

LunchTime_4_12_1 = {
    "name": "LunchTime_4_12_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_12_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_12_1)

LunchTime_4_13_0 = {
    "name": "LunchTime_4_13_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_13_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_13_0)

LunchTime_4_13_1 = {
    "name": "LunchTime_4_13_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_13_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_13_1)

LunchTime_4_14_0 = {
    "name": "LunchTime_4_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_14_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_14_0)

LunchTime_4_14_1 = {
    "name": "LunchTime_4_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_14_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_14_1)

LunchTime_4_15_0 = {
    "name": "LunchTime_4_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_15_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she wants to go at " + time)
"""

ordered_field_buffer.append(LunchTime_4_15_0)

LunchTime_4_15_1 = {
    "name": "LunchTime_4_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_15_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she wants to go at " + time)
"""

ordered_field_buffer.append(LunchTime_4_15_1)

LunchTime_4_16_0 = {
    "name": "LunchTime_4_16_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_16_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12 PM", "1 PM", "2 PM"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_16_0)

LunchTime_4_16_1 = {
    "name": "LunchTime_4_16_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_16_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12 PM", "1 PM", "2 PM"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_16_1)

LunchTime_4_17_0 = {
    "name": "LunchTime_4_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00 pm', '1:00 pm', '2:00 pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_17_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00 PM", "1:00 PM", "2:00 PM"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_17_0)

LunchTime_4_17_1 = {
    "name": "LunchTime_4_17_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_17_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00 PM", "1:00 PM", "2:00 PM"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_17_1)

LunchTime_4_18_0 = {
    "name": "LunchTime_4_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ which time do you prefer? /$@!/ ['12:00 pm', '12:30 pm', '1:00 pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_18_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00 PM", "12:30 PM", "1:00 PM"]
        time = ask("Jill", "Which time do you prefer?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_18_0)

LunchTime_4_18_1 = {
    "name": "LunchTime_4_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_18_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00 PM", "12:30 PM", "1:00 PM"]
        time = ask("Jill", "Which time do you prefer?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_18_1)

LunchTime_4_19_0 = {
    "name": "LunchTime_4_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_19_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said she wants to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_4_19_0)

LunchTime_4_19_1 = {
    "name": "LunchTime_4_19_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_19_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said she wants to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_4_19_1)

LunchTime_4_20_0 = {
    "name": "LunchTime_4_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00 pm', '12:30 pm', '1:00 pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_20_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00 pm", "12:30 pm", "1:00 pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_20_0)

LunchTime_4_20_1 = {
    "name": "LunchTime_4_20_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_20_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00 pm", "12:30 pm", "1:00 pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_20_1)

LunchTime_4_21_0 = {
    "name": "LunchTime_4_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_21_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "N/A"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_21_0)

LunchTime_4_21_1 = {
    "name": "LunchTime_4_21_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_21_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "N/A"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_21_1)

LunchTime_4_22_0 = {
    "name": "LunchTime_4_22_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_22_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said she wants to go for lunch at " + time)
"""

ordered_field_buffer.append(LunchTime_4_22_0)

LunchTime_4_22_1 = {
    "name": "LunchTime_4_22_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_22_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said she wants to go for lunch at " + time)
"""

ordered_field_buffer.append(LunchTime_4_22_1)

LunchTime_4_23_0 = {
    "name": "LunchTime_4_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_23_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "Which time do you prefer?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_23_0)

LunchTime_4_23_1 = {
    "name": "LunchTime_4_23_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_23_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "Which time do you prefer?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_23_1)

LunchTime_4_24_0 = {
    "name": "LunchTime_4_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_24_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time do you want to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time_selected)
"""

ordered_field_buffer.append(LunchTime_4_24_0)

LunchTime_4_24_1 = {
    "name": "LunchTime_4_24_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_24_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time_selected = ask("Jill", "What time do you want to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time_selected)
"""

ordered_field_buffer.append(LunchTime_4_24_1)

LunchTime_4_25_0 = {
    "name": "LunchTime_4_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_25_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_25_0)

LunchTime_4_25_1 = {
    "name": "LunchTime_4_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_25_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_25_1)

LunchTime_4_26_0 = {
    "name": "LunchTime_4_26_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_26_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_26_0)

LunchTime_4_26_1 = {
    "name": "LunchTime_4_26_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_26_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_26_1)

LunchTime_4_27_0 = {
    "name": "LunchTime_4_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['11am', '12pm', '1pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_27_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_27_0)

LunchTime_4_27_1 = {
    "name": "LunchTime_4_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_27_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11am", "12pm", "1pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_27_1)

LunchTime_4_28_0 = {
    "name": "LunchTime_4_28_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_28_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said she wants to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_4_28_0)

LunchTime_4_28_1 = {
    "name": "LunchTime_4_28_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_28_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(start_loc)
    say("Jill said she wants to go for lunch tomorrow at " + time)
"""

ordered_field_buffer.append(LunchTime_4_28_1)

LunchTime_4_29_0 = {
    "name": "LunchTime_4_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_29_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_29_0)

LunchTime_4_29_1 = {
    "name": "LunchTime_4_29_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_29_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_29_1)

LunchTime_4_30_0 = {
    "name": "LunchTime_4_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['11:00am', '12:00pm', '1:00pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go for lunch at 11:00am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_30_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she wants to go for lunch at " + time)
"""

ordered_field_buffer.append(LunchTime_4_30_0)

LunchTime_4_30_1 = {
    "name": "LunchTime_4_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go for lunch at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_30_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she wants to go for lunch at " + time)
"""

ordered_field_buffer.append(LunchTime_4_30_1)

LunchTime_4_31_0 = {
    "name": "LunchTime_4_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_31_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_31_0)

LunchTime_4_31_1 = {
    "name": "LunchTime_4_31_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_31_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_31_1)

LunchTime_4_32_0 = {
    "name": "LunchTime_4_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_32_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_32_0)

LunchTime_4_32_1 = {
    "name": "LunchTime_4_32_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_32_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_32_1)

LunchTime_4_33_0 = {
    "name": "LunchTime_4_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_33_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_33_0)

LunchTime_4_33_1 = {
    "name": "LunchTime_4_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_33_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_33_1)

LunchTime_4_34_0 = {
    "name": "LunchTime_4_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['11:00am', '12:00pm', '1:00pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11:00am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_34_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_34_0)

LunchTime_4_34_1 = {
    "name": "LunchTime_4_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_34_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_34_1)

LunchTime_4_35_0 = {
    "name": "LunchTime_4_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_35_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_35_0)

LunchTime_4_35_1 = {
    "name": "LunchTime_4_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_35_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_35_1)

LunchTime_4_36_0 = {
    "name": "LunchTime_4_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_36_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_36_0)

LunchTime_4_36_1 = {
    "name": "LunchTime_4_36_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_36_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_36_1)

LunchTime_4_37_0 = {
    "name": "LunchTime_4_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_37_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_37_0)

LunchTime_4_37_1 = {
    "name": "LunchTime_4_37_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time' referenced before assignment",
}

program_LunchTime_4_37_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_37_1)

LunchTime_4_38_0 = {
    "name": "LunchTime_4_38_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_38_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_38_0)

LunchTime_4_38_1 = {
    "name": "LunchTime_4_38_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_38_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "No"
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_38_1)

LunchTime_4_39_0 = {
    "name": "LunchTime_4_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_39_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_39_0)

LunchTime_4_39_1 = {
    "name": "LunchTime_4_39_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_LunchTime_4_39_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(start_loc)
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_39_1)

LunchTime_4_40_0 = {
    "name": "LunchTime_4_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go for lunch at 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_40_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she wants to go for lunch at " + time)
"""

ordered_field_buffer.append(LunchTime_4_40_0)

LunchTime_4_40_1 = {
    "name": "LunchTime_4_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go for lunch at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_40_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she wants to go for lunch at " + time)
"""

ordered_field_buffer.append(LunchTime_4_40_1)

LunchTime_4_41_0 = {
    "name": "LunchTime_4_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00', '13:30']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_41_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_41_0)

LunchTime_4_41_1 = {
    "name": "LunchTime_4_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_41_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00", "13:30"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_41_1)

LunchTime_4_42_0 = {
    "name": "LunchTime_4_42_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '13:00', '14:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_42_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "13:00", "14:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_42_0)

LunchTime_4_42_1 = {
    "name": "LunchTime_4_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_42_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "13:00", "14:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_42_1)

LunchTime_4_43_0 = {
    "name": "LunchTime_4_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_43_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_43_0)

LunchTime_4_43_1 = {
    "name": "LunchTime_4_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_43_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_43_1)

LunchTime_4_44_0 = {
    "name": "LunchTime_4_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_44_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_chosen = ask("Jill", "What time do you want to go?", time_options)
    else:
        time_chosen = "No"
    go_to(get_current_location())
    say("Jill said: " + time_chosen)
"""

ordered_field_buffer.append(LunchTime_4_44_0)

LunchTime_4_44_1 = {
    "name": "LunchTime_4_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_44_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time_chosen = ask("Jill", "What time do you want to go?", time_options)
    else:
        time_chosen = "No"
    go_to(get_current_location())
    say("Jill said: " + time_chosen)
"""

ordered_field_buffer.append(LunchTime_4_44_1)

LunchTime_4_45_0 = {
    "name": "LunchTime_4_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_45_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_45_0)

LunchTime_4_45_1 = {
    "name": "LunchTime_4_45_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_45_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_45_1)

LunchTime_4_46_0 = {
    "name": "LunchTime_4_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['11:00am', '12:00pm', '1:00pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 11:00am /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_46_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_46_0)

LunchTime_4_46_1 = {
    "name": "LunchTime_4_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_46_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["11:00am", "12:00pm", "1:00pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_46_1)

LunchTime_4_47_0 = {
    "name": "LunchTime_4_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: yes and she wants to go at 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_47_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(get_current_location())
    say("Jill said: " + response + " and she wants to go at " + time)
"""

ordered_field_buffer.append(LunchTime_4_47_0)

LunchTime_4_47_1 = {
    "name": "LunchTime_4_47_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: UnboundLocalError: local variable 'time' referenced before assignment",
}

program_LunchTime_4_47_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12:00", "12:30", "13:00"]
        time = ask("Jill", "What time do you want to go?", time_options)
    go_to(get_current_location())
    say("Jill said: " + response + " and she wants to go at " + time)
"""

ordered_field_buffer.append(LunchTime_4_47_1)

LunchTime_4_48_0 = {
    "name": "LunchTime_4_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_48_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_48_0)

LunchTime_4_48_1 = {
    "name": "LunchTime_4_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_48_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said: " + time)
"""

ordered_field_buffer.append(LunchTime_4_48_1)

LunchTime_4_49_0 = {
    "name": "LunchTime_4_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12pm', '1pm', '2pm']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go for lunch at 12pm /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_49_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she wants to go for lunch at " + time)
"""

ordered_field_buffer.append(LunchTime_4_49_0)

LunchTime_4_49_1 = {
    "name": "LunchTime_4_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said she wants to go for lunch at not going /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_49_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        time_options = ["12pm", "1pm", "2pm"]
        time = ask("Jill", "What time do you want to go?", time_options)
    else:
        time = "not going"
    go_to(get_current_location())
    say("Jill said she wants to go for lunch at " + time)
"""

ordered_field_buffer.append(LunchTime_4_49_1)

SetTemperature_0_0_0 = {
    "name": "SetTemperature_0_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_0_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_0_0)

SetTemperature_0_0_1 = {
    "name": "SetTemperature_0_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_0_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_0_1)

SetTemperature_0_1_0 = {
    "name": "SetTemperature_0_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_1_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_1_0)

SetTemperature_0_1_1 = {
    "name": "SetTemperature_0_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_1_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_1_1)

SetTemperature_0_2_0 = {
    "name": "SetTemperature_0_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_2_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_2_0)

SetTemperature_0_2_1 = {
    "name": "SetTemperature_0_2_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_2_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_2_1)

SetTemperature_0_3_0 = {
    "name": "SetTemperature_0_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_3_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_3_0)

SetTemperature_0_3_1 = {
    "name": "SetTemperature_0_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_3_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_3_1)

SetTemperature_0_4_0 = {
    "name": "SetTemperature_0_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_4_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_4_0)

SetTemperature_0_4_1 = {
    "name": "SetTemperature_0_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_4_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_4_1)

SetTemperature_0_5_0 = {
    "name": "SetTemperature_0_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_5_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_5_0)

SetTemperature_0_5_1 = {
    "name": "SetTemperature_0_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_5_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_5_1)

SetTemperature_0_6_0 = {
    "name": "SetTemperature_0_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_6_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_6_0)

SetTemperature_0_6_1 = {
    "name": "SetTemperature_0_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_6_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_6_1)

SetTemperature_0_7_0 = {
    "name": "SetTemperature_0_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_7_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_7_0)

SetTemperature_0_7_1 = {
    "name": "SetTemperature_0_7_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_7_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_7_1)

SetTemperature_0_8_0 = {
    "name": "SetTemperature_0_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_8_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_8_0)

SetTemperature_0_8_1 = {
    "name": "SetTemperature_0_8_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_8_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_8_1)

SetTemperature_0_9_0 = {
    "name": "SetTemperature_0_9_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_9_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = int(new_temp) + 72
    else:
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = 72 - int(new_temp)
    go_to(start_loc)
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_9_0)

SetTemperature_0_9_1 = {
    "name": "SetTemperature_0_9_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_9_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = int(new_temp) + 72
    else:
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = 72 - int(new_temp)
    go_to(start_loc)
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_9_1)

SetTemperature_0_10_0 = {
    "name": "SetTemperature_0_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_10_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_10_0)

SetTemperature_0_10_1 = {
    "name": "SetTemperature_0_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_10_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_10_1)

SetTemperature_0_11_0 = {
    "name": "SetTemperature_0_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_11_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_11_0)

SetTemperature_0_11_1 = {
    "name": "SetTemperature_0_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_11_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_11_1)

SetTemperature_0_12_0 = {
    "name": "SetTemperature_0_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_12_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "How many degrees warmer?", ["1", "2", "3"])
        new_temp = int(new_temp) + 72
    else:
        new_temp = ask("Arjun", "How many degrees colder?", ["1", "2", "3"])
        new_temp = 72 - int(new_temp)
    go_to(start_loc)
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_12_0)

SetTemperature_0_12_1 = {
    "name": "SetTemperature_0_12_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_12_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "How many degrees warmer?", ["1", "2", "3"])
        new_temp = int(new_temp) + 72
    else:
        new_temp = ask("Arjun", "How many degrees colder?", ["1", "2", "3"])
        new_temp = 72 - int(new_temp)
    go_to(start_loc)
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_12_1)

SetTemperature_0_13_0 = {
    "name": "SetTemperature_0_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_13_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_13_0)

SetTemperature_0_13_1 = {
    "name": "SetTemperature_0_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_13_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_13_1)

SetTemperature_0_14_0 = {
    "name": "SetTemperature_0_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_14_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_14_0)

SetTemperature_0_14_1 = {
    "name": "SetTemperature_0_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_14_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_14_1)

SetTemperature_0_15_0 = {
    "name": "SetTemperature_0_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_15_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_15_0)

SetTemperature_0_15_1 = {
    "name": "SetTemperature_0_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_15_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_15_1)

SetTemperature_0_16_0 = {
    "name": "SetTemperature_0_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_16_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_16_0)

SetTemperature_0_16_1 = {
    "name": "SetTemperature_0_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_16_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_16_1)

SetTemperature_0_17_0 = {
    "name": "SetTemperature_0_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_17_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_17_0)

SetTemperature_0_17_1 = {
    "name": "SetTemperature_0_17_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_17_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_17_1)

SetTemperature_0_18_0 = {
    "name": "SetTemperature_0_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_18_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = 73
    else:
        new_temp = 71
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_18_0)

SetTemperature_0_18_1 = {
    "name": "SetTemperature_0_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_18_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = 73
    else:
        new_temp = 71
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_18_1)

SetTemperature_0_19_0 = {
    "name": "SetTemperature_0_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_19_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "How many degrees warmer?", ["1", "2", "3", "4"])
        new_temp = int(new_temp) + 72
    else:
        new_temp = ask("Arjun", "How many degrees colder?", ["1", "2", "3", "4"])
        new_temp = 72 - int(new_temp)
    go_to(start_loc)
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_19_0)

SetTemperature_0_19_1 = {
    "name": "SetTemperature_0_19_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_19_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "How many degrees warmer?", ["1", "2", "3", "4"])
        new_temp = int(new_temp) + 72
    else:
        new_temp = ask("Arjun", "How many degrees colder?", ["1", "2", "3", "4"])
        new_temp = 72 - int(new_temp)
    go_to(start_loc)
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_19_1)

SetTemperature_0_20_0 = {
    "name": "SetTemperature_0_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_20_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_20_0)

SetTemperature_0_20_1 = {
    "name": "SetTemperature_0_20_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_20_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_20_1)

SetTemperature_0_21_0 = {
    "name": "SetTemperature_0_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_21_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = int(new_temp) + 72
    else:
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = 72 - int(new_temp)
    go_to(start_loc)
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_21_0)

SetTemperature_0_21_1 = {
    "name": "SetTemperature_0_21_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_21_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = int(new_temp) + 72
    else:
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = 72 - int(new_temp)
    go_to(start_loc)
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_21_1)

SetTemperature_0_22_0 = {
    "name": "SetTemperature_0_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_22_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_22_0)

SetTemperature_0_22_1 = {
    "name": "SetTemperature_0_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_22_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_22_1)

SetTemperature_0_23_0 = {
    "name": "SetTemperature_0_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_23_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = 73
    else:
        new_temp = 71
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_23_0)

SetTemperature_0_23_1 = {
    "name": "SetTemperature_0_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_23_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = 73
    else:
        new_temp = 71
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_23_1)

SetTemperature_0_24_0 = {
    "name": "SetTemperature_0_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_24_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_24_0)

SetTemperature_0_24_1 = {
    "name": "SetTemperature_0_24_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_24_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_24_1)

SetTemperature_0_25_0 = {
    "name": "SetTemperature_0_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_25_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        temperature = 73
    else:
        temperature = 71
    say("Set the thermostat to " + str(temperature) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_25_0)

SetTemperature_0_25_1 = {
    "name": "SetTemperature_0_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_25_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        temperature = 73
    else:
        temperature = 71
    say("Set the thermostat to " + str(temperature) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_25_1)

SetTemperature_0_26_0 = {
    "name": "SetTemperature_0_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_26_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_26_0)

SetTemperature_0_26_1 = {
    "name": "SetTemperature_0_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_26_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_26_1)

SetTemperature_0_27_0 = {
    "name": "SetTemperature_0_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_27_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = 73
    else:
        new_temp = 71
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_27_0)

SetTemperature_0_27_1 = {
    "name": "SetTemperature_0_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_27_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = 73
    else:
        new_temp = 71
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_27_1)

SetTemperature_0_28_0 = {
    "name": "SetTemperature_0_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_28_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_28_0)

SetTemperature_0_28_1 = {
    "name": "SetTemperature_0_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_28_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_28_1)

SetTemperature_0_29_0 = {
    "name": "SetTemperature_0_29_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_29_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        temperature = int(temperature) + 72
    else:
        temperature = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        temperature = 72 - int(temperature)
    go_to(start_loc)
    say("Set the thermostat to " + str(temperature) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_29_0)

SetTemperature_0_29_1 = {
    "name": "SetTemperature_0_29_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_29_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        temperature = int(temperature) + 72
    else:
        temperature = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        temperature = 72 - int(temperature)
    go_to(start_loc)
    say("Set the thermostat to " + str(temperature) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_29_1)

SetTemperature_0_30_0 = {
    "name": "SetTemperature_0_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_30_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_30_0)

SetTemperature_0_30_1 = {
    "name": "SetTemperature_0_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_30_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_30_1)

SetTemperature_0_31_0 = {
    "name": "SetTemperature_0_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_31_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_31_0)

SetTemperature_0_31_1 = {
    "name": "SetTemperature_0_31_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_31_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_31_1)

SetTemperature_0_32_0 = {
    "name": "SetTemperature_0_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_32_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = int(new_temp) + 72
    else:
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = 72 - int(new_temp)
    go_to(start_loc)
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_32_0)

SetTemperature_0_32_1 = {
    "name": "SetTemperature_0_32_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_32_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = int(new_temp) + 72
    else:
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = 72 - int(new_temp)
    go_to(start_loc)
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_32_1)

SetTemperature_0_33_0 = {
    "name": "SetTemperature_0_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_33_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_33_0)

SetTemperature_0_33_1 = {
    "name": "SetTemperature_0_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_33_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_33_1)

SetTemperature_0_34_0 = {
    "name": "SetTemperature_0_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_34_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_34_0)

SetTemperature_0_34_1 = {
    "name": "SetTemperature_0_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_34_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_34_1)

SetTemperature_0_35_0 = {
    "name": "SetTemperature_0_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_35_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_35_0)

SetTemperature_0_35_1 = {
    "name": "SetTemperature_0_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_35_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_35_1)

SetTemperature_0_36_0 = {
    "name": "SetTemperature_0_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_36_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "How many degrees warmer?", ["1", "2", "3"])
        new_temp = int(new_temp) + 72
    else:
        new_temp = ask("Arjun", "How many degrees colder?", ["1", "2", "3"])
        new_temp = 72 - int(new_temp)
    go_to(start_loc)
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_36_0)

SetTemperature_0_36_1 = {
    "name": "SetTemperature_0_36_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_36_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "How many degrees warmer?", ["1", "2", "3"])
        new_temp = int(new_temp) + 72
    else:
        new_temp = ask("Arjun", "How many degrees colder?", ["1", "2", "3"])
        new_temp = 72 - int(new_temp)
    go_to(start_loc)
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_36_1)

SetTemperature_0_37_0 = {
    "name": "SetTemperature_0_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_37_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_37_0)

SetTemperature_0_37_1 = {
    "name": "SetTemperature_0_37_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_37_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_37_1)

SetTemperature_0_38_0 = {
    "name": "SetTemperature_0_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_38_0 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_38_0)

SetTemperature_0_38_1 = {
    "name": "SetTemperature_0_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_38_1 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_38_1)

SetTemperature_0_39_0 = {
    "name": "SetTemperature_0_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_39_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_39_0)

SetTemperature_0_39_1 = {
    "name": "SetTemperature_0_39_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_39_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_39_1)

SetTemperature_0_40_0 = {
    "name": "SetTemperature_0_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_40_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_40_0)

SetTemperature_0_40_1 = {
    "name": "SetTemperature_0_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_40_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_40_1)

SetTemperature_0_41_0 = {
    "name": "SetTemperature_0_41_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_41_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = int(new_temp) + 72
    else:
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = 72 - int(new_temp)
    go_to(start_loc)
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_41_0)

SetTemperature_0_41_1 = {
    "name": "SetTemperature_0_41_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_41_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = int(new_temp) + 72
    else:
        new_temp = ask("Arjun", "By how many degrees?", ["1", "2", "3"])
        new_temp = 72 - int(new_temp)
    go_to(start_loc)
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_41_1)

SetTemperature_0_42_0 = {
    "name": "SetTemperature_0_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_42_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_42_0)

SetTemperature_0_42_1 = {
    "name": "SetTemperature_0_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_42_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_42_1)

SetTemperature_0_43_0 = {
    "name": "SetTemperature_0_43_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_43_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "How many degrees warmer?", ["1", "2", "3"])
        temperature = int(temperature) + 72
    else:
        temperature = ask("Arjun", "How many degrees colder?", ["1", "2", "3"])
        temperature = 72 - int(temperature)
    go_to(start_loc)
    say("Set the thermostat to " + str(temperature) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_43_0)

SetTemperature_0_43_1 = {
    "name": "SetTemperature_0_43_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_43_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "How many degrees warmer?", ["1", "2", "3"])
        temperature = int(temperature) + 72
    else:
        temperature = ask("Arjun", "How many degrees colder?", ["1", "2", "3"])
        temperature = 72 - int(temperature)
    go_to(start_loc)
    say("Set the thermostat to " + str(temperature) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_43_1)

SetTemperature_0_44_0 = {
    "name": "SetTemperature_0_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like the temperature to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_44_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_44_0)

SetTemperature_0_44_1 = {
    "name": "SetTemperature_0_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like the temperature to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_44_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_44_1)

SetTemperature_0_45_0 = {
    "name": "SetTemperature_0_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_45_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_45_0)

SetTemperature_0_45_1 = {
    "name": "SetTemperature_0_45_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_45_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_45_1)

SetTemperature_0_46_0 = {
    "name": "SetTemperature_0_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_46_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_46_0)

SetTemperature_0_46_1 = {
    "name": "SetTemperature_0_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_46_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_46_1)

SetTemperature_0_47_0 = {
    "name": "SetTemperature_0_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_47_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_47_0)

SetTemperature_0_47_1 = {
    "name": "SetTemperature_0_47_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_47_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_47_1)

SetTemperature_0_48_0 = {
    "name": "SetTemperature_0_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_48_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_48_0)

SetTemperature_0_48_1 = {
    "name": "SetTemperature_0_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_48_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_0_48_1)

SetTemperature_0_49_0 = {
    "name": "SetTemperature_0_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_49_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = 73
    else:
        new_temp = 71
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_49_0)

SetTemperature_0_49_1 = {
    "name": "SetTemperature_0_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_49_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = 73
    else:
        new_temp = 71
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_0_49_1)

SetTemperature_1_0_0 = {
    "name": "SetTemperature_1_0_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_0_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_0_0)

SetTemperature_1_0_1 = {
    "name": "SetTemperature_1_0_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_0_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_0_1)

SetTemperature_1_1_0 = {
    "name": "SetTemperature_1_1_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_1_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_1_0)

SetTemperature_1_1_1 = {
    "name": "SetTemperature_1_1_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_1_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_1_1)

SetTemperature_1_2_0 = {
    "name": "SetTemperature_1_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_2_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_2_0)

SetTemperature_1_2_1 = {
    "name": "SetTemperature_1_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_2_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_2_1)

SetTemperature_1_3_0 = {
    "name": "SetTemperature_1_3_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_3_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_3_0)

SetTemperature_1_3_1 = {
    "name": "SetTemperature_1_3_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_3_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_3_1)

SetTemperature_1_4_0 = {
    "name": "SetTemperature_1_4_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_4_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_4_0)

SetTemperature_1_4_1 = {
    "name": "SetTemperature_1_4_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_4_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_4_1)

SetTemperature_1_5_0 = {
    "name": "SetTemperature_1_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_5_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_1_5_0)

SetTemperature_1_5_1 = {
    "name": "SetTemperature_1_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_5_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_1_5_1)

SetTemperature_1_6_0 = {
    "name": "SetTemperature_1_6_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_6_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_6_0)

SetTemperature_1_6_1 = {
    "name": "SetTemperature_1_6_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_6_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_6_1)

SetTemperature_1_7_0 = {
    "name": "SetTemperature_1_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_7_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_7_0)

SetTemperature_1_7_1 = {
    "name": "SetTemperature_1_7_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_7_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_7_1)

SetTemperature_1_8_0 = {
    "name": "SetTemperature_1_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_8_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_8_0)

SetTemperature_1_8_1 = {
    "name": "SetTemperature_1_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_8_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_8_1)

SetTemperature_1_9_0 = {
    "name": "SetTemperature_1_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_9_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_1_9_0)

SetTemperature_1_9_1 = {
    "name": "SetTemperature_1_9_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_9_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_1_9_1)

SetTemperature_1_10_0 = {
    "name": "SetTemperature_1_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_10_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_10_0)

SetTemperature_1_10_1 = {
    "name": "SetTemperature_1_10_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_10_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_10_1)

SetTemperature_1_11_0 = {
    "name": "SetTemperature_1_11_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_11_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_11_0)

SetTemperature_1_11_1 = {
    "name": "SetTemperature_1_11_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_11_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_11_1)

SetTemperature_1_12_0 = {
    "name": "SetTemperature_1_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_12_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_12_0)

SetTemperature_1_12_1 = {
    "name": "SetTemperature_1_12_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_12_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_12_1)

SetTemperature_1_13_0 = {
    "name": "SetTemperature_1_13_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_13_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 75 degrees")
    else:
        say("Set the thermostat to 69 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_13_0)

SetTemperature_1_13_1 = {
    "name": "SetTemperature_1_13_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_13_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 75 degrees")
    else:
        say("Set the thermostat to 69 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_13_1)

SetTemperature_1_14_0 = {
    "name": "SetTemperature_1_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_14_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(get_current_location())
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_14_0)

SetTemperature_1_14_1 = {
    "name": "SetTemperature_1_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_14_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(get_current_location())
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_14_1)

SetTemperature_1_15_0 = {
    "name": "SetTemperature_1_15_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_15_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_15_0)

SetTemperature_1_15_1 = {
    "name": "SetTemperature_1_15_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_15_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_15_1)

SetTemperature_1_16_0 = {
    "name": "SetTemperature_1_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_16_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(get_current_location())
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_16_0)

SetTemperature_1_16_1 = {
    "name": "SetTemperature_1_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_16_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(get_current_location())
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_16_1)

SetTemperature_1_17_0 = {
    "name": "SetTemperature_1_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_17_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_17_0)

SetTemperature_1_17_1 = {
    "name": "SetTemperature_1_17_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_17_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_17_1)

SetTemperature_1_18_0 = {
    "name": "SetTemperature_1_18_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_18_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_18_0)

SetTemperature_1_18_1 = {
    "name": "SetTemperature_1_18_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_18_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_18_1)

SetTemperature_1_19_0 = {
    "name": "SetTemperature_1_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_19_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_19_0)

SetTemperature_1_19_1 = {
    "name": "SetTemperature_1_19_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_19_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_19_1)

SetTemperature_1_20_0 = {
    "name": "SetTemperature_1_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_20_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_20_0)

SetTemperature_1_20_1 = {
    "name": "SetTemperature_1_20_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_20_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_20_1)

SetTemperature_1_21_0 = {
    "name": "SetTemperature_1_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_21_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_21_0)

SetTemperature_1_21_1 = {
    "name": "SetTemperature_1_21_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_21_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_21_1)

SetTemperature_1_22_0 = {
    "name": "SetTemperature_1_22_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_22_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_22_0)

SetTemperature_1_22_1 = {
    "name": "SetTemperature_1_22_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_22_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_22_1)

SetTemperature_1_23_0 = {
    "name": "SetTemperature_1_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_23_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_23_0)

SetTemperature_1_23_1 = {
    "name": "SetTemperature_1_23_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_23_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_23_1)

SetTemperature_1_24_0 = {
    "name": "SetTemperature_1_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_24_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_24_0)

SetTemperature_1_24_1 = {
    "name": "SetTemperature_1_24_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_24_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_24_1)

SetTemperature_1_25_0 = {
    "name": "SetTemperature_1_25_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_25_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_25_0)

SetTemperature_1_25_1 = {
    "name": "SetTemperature_1_25_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_25_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_25_1)

SetTemperature_1_26_0 = {
    "name": "SetTemperature_1_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_26_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_1_26_0)

SetTemperature_1_26_1 = {
    "name": "SetTemperature_1_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_26_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_1_26_1)

SetTemperature_1_27_0 = {
    "name": "SetTemperature_1_27_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_27_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_27_0)

SetTemperature_1_27_1 = {
    "name": "SetTemperature_1_27_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_27_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_27_1)

SetTemperature_1_28_0 = {
    "name": "SetTemperature_1_28_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_28_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_28_0)

SetTemperature_1_28_1 = {
    "name": "SetTemperature_1_28_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_28_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_28_1)

SetTemperature_1_29_0 = {
    "name": "SetTemperature_1_29_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_29_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 75 degrees")
    else:
        say("Set the thermostat to 69 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_29_0)

SetTemperature_1_29_1 = {
    "name": "SetTemperature_1_29_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_29_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 75 degrees")
    else:
        say("Set the thermostat to 69 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_29_1)

SetTemperature_1_30_0 = {
    "name": "SetTemperature_1_30_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_30_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_30_0)

SetTemperature_1_30_1 = {
    "name": "SetTemperature_1_30_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_30_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_30_1)

SetTemperature_1_31_0 = {
    "name": "SetTemperature_1_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_31_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_31_0)

SetTemperature_1_31_1 = {
    "name": "SetTemperature_1_31_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_31_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_31_1)

SetTemperature_1_32_0 = {
    "name": "SetTemperature_1_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_32_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_32_0)

SetTemperature_1_32_1 = {
    "name": "SetTemperature_1_32_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_32_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_32_1)

SetTemperature_1_33_0 = {
    "name": "SetTemperature_1_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_33_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_1_33_0)

SetTemperature_1_33_1 = {
    "name": "SetTemperature_1_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_33_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_1_33_1)

SetTemperature_1_34_0 = {
    "name": "SetTemperature_1_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_34_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_34_0)

SetTemperature_1_34_1 = {
    "name": "SetTemperature_1_34_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_34_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_34_1)

SetTemperature_1_35_0 = {
    "name": "SetTemperature_1_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_35_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_1_35_0)

SetTemperature_1_35_1 = {
    "name": "SetTemperature_1_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_35_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_1_35_1)

SetTemperature_1_36_0 = {
    "name": "SetTemperature_1_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_36_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_36_0)

SetTemperature_1_36_1 = {
    "name": "SetTemperature_1_36_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_36_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_36_1)

SetTemperature_1_37_0 = {
    "name": "SetTemperature_1_37_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_37_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_37_0)

SetTemperature_1_37_1 = {
    "name": "SetTemperature_1_37_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_37_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_37_1)

SetTemperature_1_38_0 = {
    "name": "SetTemperature_1_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_38_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(get_current_location())
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_38_0)

SetTemperature_1_38_1 = {
    "name": "SetTemperature_1_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_38_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(get_current_location())
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_38_1)

SetTemperature_1_39_0 = {
    "name": "SetTemperature_1_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_39_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_39_0)

SetTemperature_1_39_1 = {
    "name": "SetTemperature_1_39_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_39_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_39_1)

SetTemperature_1_40_0 = {
    "name": "SetTemperature_1_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_40_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_40_0)

SetTemperature_1_40_1 = {
    "name": "SetTemperature_1_40_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_40_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_40_1)

SetTemperature_1_41_0 = {
    "name": "SetTemperature_1_41_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_41_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_41_0)

SetTemperature_1_41_1 = {
    "name": "SetTemperature_1_41_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_41_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_41_1)

SetTemperature_1_42_0 = {
    "name": "SetTemperature_1_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_42_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(get_current_location())
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_42_0)

SetTemperature_1_42_1 = {
    "name": "SetTemperature_1_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_42_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(get_current_location())
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_42_1)

SetTemperature_1_43_0 = {
    "name": "SetTemperature_1_43_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_43_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_43_0)

SetTemperature_1_43_1 = {
    "name": "SetTemperature_1_43_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_43_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_43_1)

SetTemperature_1_44_0 = {
    "name": "SetTemperature_1_44_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_44_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_44_0)

SetTemperature_1_44_1 = {
    "name": "SetTemperature_1_44_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_44_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_44_1)

SetTemperature_1_45_0 = {
    "name": "SetTemperature_1_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_45_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_45_0)

SetTemperature_1_45_1 = {
    "name": "SetTemperature_1_45_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_45_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_45_1)

SetTemperature_1_46_0 = {
    "name": "SetTemperature_1_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_46_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_46_0)

SetTemperature_1_46_1 = {
    "name": "SetTemperature_1_46_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_46_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_46_1)

SetTemperature_1_47_0 = {
    "name": "SetTemperature_1_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_47_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_47_0)

SetTemperature_1_47_1 = {
    "name": "SetTemperature_1_47_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_47_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_47_1)

SetTemperature_1_48_0 = {
    "name": "SetTemperature_1_48_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_48_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_48_0)

SetTemperature_1_48_1 = {
    "name": "SetTemperature_1_48_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_48_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_48_1)

SetTemperature_1_49_0 = {
    "name": "SetTemperature_1_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_49_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_49_0)

SetTemperature_1_49_1 = {
    "name": "SetTemperature_1_49_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_1_49_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_1_49_1)

SetTemperature_2_0_0 = {
    "name": "SetTemperature_2_0_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_0_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_0_0)

SetTemperature_2_0_1 = {
    "name": "SetTemperature_2_0_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_0_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_0_1)

SetTemperature_2_1_0 = {
    "name": "SetTemperature_2_1_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_1_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_1_0)

SetTemperature_2_1_1 = {
    "name": "SetTemperature_2_1_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_1_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_1_1)

SetTemperature_2_2_0 = {
    "name": "SetTemperature_2_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_2_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_2_0)

SetTemperature_2_2_1 = {
    "name": "SetTemperature_2_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_2_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_2_1)

SetTemperature_2_3_0 = {
    "name": "SetTemperature_2_3_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_3_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_3_0)

SetTemperature_2_3_1 = {
    "name": "SetTemperature_2_3_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_3_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_3_1)

SetTemperature_2_4_0 = {
    "name": "SetTemperature_2_4_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_4_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    elif response == "Warmer":
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_4_0)

SetTemperature_2_4_1 = {
    "name": "SetTemperature_2_4_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_4_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    elif response == "Warmer":
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_4_1)

SetTemperature_2_5_0 = {
    "name": "SetTemperature_2_5_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_5_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_5_0)

SetTemperature_2_5_1 = {
    "name": "SetTemperature_2_5_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_5_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_5_1)

SetTemperature_2_6_0 = {
    "name": "SetTemperature_2_6_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_6_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_6_0)

SetTemperature_2_6_1 = {
    "name": "SetTemperature_2_6_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_6_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_6_1)

SetTemperature_2_7_0 = {
    "name": "SetTemperature_2_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_7_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_7_0)

SetTemperature_2_7_1 = {
    "name": "SetTemperature_2_7_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_7_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_7_1)

SetTemperature_2_8_0 = {
    "name": "SetTemperature_2_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_8_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_8_0)

SetTemperature_2_8_1 = {
    "name": "SetTemperature_2_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_8_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_8_1)

SetTemperature_2_9_0 = {
    "name": "SetTemperature_2_9_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_9_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder should it be?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer should it be?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_9_0)

SetTemperature_2_9_1 = {
    "name": "SetTemperature_2_9_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_9_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder should it be?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer should it be?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_9_1)

SetTemperature_2_10_0 = {
    "name": "SetTemperature_2_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_10_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_10_0)

SetTemperature_2_10_1 = {
    "name": "SetTemperature_2_10_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_10_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_10_1)

SetTemperature_2_11_0 = {
    "name": "SetTemperature_2_11_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_11_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder should it be?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer should it be?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_11_0)

SetTemperature_2_11_1 = {
    "name": "SetTemperature_2_11_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_11_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder should it be?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer should it be?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_11_1)

SetTemperature_2_12_0 = {
    "name": "SetTemperature_2_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_12_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_12_0)

SetTemperature_2_12_1 = {
    "name": "SetTemperature_2_12_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_12_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_12_1)

SetTemperature_2_13_0 = {
    "name": "SetTemperature_2_13_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_13_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "By how many degrees?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    elif response == "Warmer":
        new_temp = int(ask("Arjun", "By how many degrees?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_13_0)

SetTemperature_2_13_1 = {
    "name": "SetTemperature_2_13_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_13_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "By how many degrees?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    elif response == "Warmer":
        new_temp = int(ask("Arjun", "By how many degrees?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_13_1)

SetTemperature_2_14_0 = {
    "name": "SetTemperature_2_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_14_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees should I change the thermostat to?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees should I change the thermostat to?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_14_0)

SetTemperature_2_14_1 = {
    "name": "SetTemperature_2_14_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_14_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees should I change the thermostat to?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees should I change the thermostat to?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_14_1)

SetTemperature_2_15_0 = {
    "name": "SetTemperature_2_15_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_15_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_15_0)

SetTemperature_2_15_1 = {
    "name": "SetTemperature_2_15_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_15_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_15_1)

SetTemperature_2_16_0 = {
    "name": "SetTemperature_2_16_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_16_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_16_0)

SetTemperature_2_16_1 = {
    "name": "SetTemperature_2_16_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_16_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_16_1)

SetTemperature_2_17_0 = {
    "name": "SetTemperature_2_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_17_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_17_0)

SetTemperature_2_17_1 = {
    "name": "SetTemperature_2_17_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_17_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_17_1)

SetTemperature_2_18_0 = {
    "name": "SetTemperature_2_18_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_18_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_18_0)

SetTemperature_2_18_1 = {
    "name": "SetTemperature_2_18_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_18_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_18_1)

SetTemperature_2_19_0 = {
    "name": "SetTemperature_2_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think your office should be colder or warmer? /$@!/ ['colder', 'warmer']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ change the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_19_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    go_to(start_loc)
    if response == "Colder":
        say("Change the thermostat to 70 degrees")
    else:
        say("Change the thermostat to 74 degrees")
"""

ordered_field_buffer.append(SetTemperature_2_19_0)

SetTemperature_2_19_1 = {
    "name": "SetTemperature_2_19_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think your office should be colder or warmer? /$@!/ ['colder', 'warmer']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ change the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_19_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    go_to(start_loc)
    if response == "Colder":
        say("Change the thermostat to 70 degrees")
    else:
        say("Change the thermostat to 74 degrees")
"""

ordered_field_buffer.append(SetTemperature_2_19_1)

SetTemperature_2_20_0 = {
    "name": "SetTemperature_2_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_20_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_20_0)

SetTemperature_2_20_1 = {
    "name": "SetTemperature_2_20_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_20_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_20_1)

SetTemperature_2_21_0 = {
    "name": "SetTemperature_2_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_21_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_21_0)

SetTemperature_2_21_1 = {
    "name": "SetTemperature_2_21_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_21_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_21_1)

SetTemperature_2_22_0 = {
    "name": "SetTemperature_2_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think your office should be colder or warmer? /$@!/ ['colder', 'warmer']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ change the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_22_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    go_to(start_loc)
    if response == "Colder":
        say("Change the thermostat to 70 degrees")
    else:
        say("Change the thermostat to 74 degrees")
"""

ordered_field_buffer.append(SetTemperature_2_22_0)

SetTemperature_2_22_1 = {
    "name": "SetTemperature_2_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think your office should be colder or warmer? /$@!/ ['colder', 'warmer']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ change the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_22_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    go_to(start_loc)
    if response == "Colder":
        say("Change the thermostat to 70 degrees")
    else:
        say("Change the thermostat to 74 degrees")
"""

ordered_field_buffer.append(SetTemperature_2_22_1)

SetTemperature_2_23_0 = {
    "name": "SetTemperature_2_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_23_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "What temperature in degrees should I set the thermostat to?", ["50", "60", "70"]))
    elif response == "Warmer":
        new_temp = int(ask("Arjun", "What temperature in degrees should I set the thermostat to?", ["80", "90", "100"]))
    go_to(get_current_location())
    say("The thermostat should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_23_0)

SetTemperature_2_23_1 = {
    "name": "SetTemperature_2_23_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_23_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "What temperature in degrees should I set the thermostat to?", ["50", "60", "70"]))
    elif response == "Warmer":
        new_temp = int(ask("Arjun", "What temperature in degrees should I set the thermostat to?", ["80", "90", "100"]))
    go_to(get_current_location())
    say("The thermostat should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_23_1)

SetTemperature_2_24_0 = {
    "name": "SetTemperature_2_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_24_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_24_0)

SetTemperature_2_24_1 = {
    "name": "SetTemperature_2_24_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_24_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_24_1)

SetTemperature_2_25_0 = {
    "name": "SetTemperature_2_25_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_25_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees should it be colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees should it be warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_25_0)

SetTemperature_2_25_1 = {
    "name": "SetTemperature_2_25_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_25_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees should it be colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees should it be warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_25_1)

SetTemperature_2_26_0 = {
    "name": "SetTemperature_2_26_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_26_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_26_0)

SetTemperature_2_26_1 = {
    "name": "SetTemperature_2_26_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_26_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_26_1)

SetTemperature_2_27_0 = {
    "name": "SetTemperature_2_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think your office should be colder or warmer? /$@!/ ['colder', 'warmer']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ change the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_27_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    go_to(start_loc)
    if response == "Colder":
        say("Change the thermostat to 70 degrees")
    else:
        say("Change the thermostat to 74 degrees")
"""

ordered_field_buffer.append(SetTemperature_2_27_0)

SetTemperature_2_27_1 = {
    "name": "SetTemperature_2_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think your office should be colder or warmer? /$@!/ ['colder', 'warmer']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ change the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_27_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    go_to(start_loc)
    if response == "Colder":
        say("Change the thermostat to 70 degrees")
    else:
        say("Change the thermostat to 74 degrees")
"""

ordered_field_buffer.append(SetTemperature_2_27_1)

SetTemperature_2_28_0 = {
    "name": "SetTemperature_2_28_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_28_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees should I change the thermostat to?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees should I change the thermostat to?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_28_0)

SetTemperature_2_28_1 = {
    "name": "SetTemperature_2_28_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_28_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees should I change the thermostat to?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees should I change the thermostat to?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_28_1)

SetTemperature_2_29_0 = {
    "name": "SetTemperature_2_29_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_29_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees should I lower the temperature?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees should I raise the temperature?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_29_0)

SetTemperature_2_29_1 = {
    "name": "SetTemperature_2_29_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_29_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees should I lower the temperature?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees should I raise the temperature?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_29_1)

SetTemperature_2_30_0 = {
    "name": "SetTemperature_2_30_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_30_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_30_0)

SetTemperature_2_30_1 = {
    "name": "SetTemperature_2_30_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_30_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_30_1)

SetTemperature_2_31_0 = {
    "name": "SetTemperature_2_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_31_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_31_0)

SetTemperature_2_31_1 = {
    "name": "SetTemperature_2_31_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_31_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_31_1)

SetTemperature_2_32_0 = {
    "name": "SetTemperature_2_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_32_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder should it be?", ["1", "2", "3", "4"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer should it be?", ["1", "2", "3", "4"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_32_0)

SetTemperature_2_32_1 = {
    "name": "SetTemperature_2_32_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_32_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder should it be?", ["1", "2", "3", "4"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer should it be?", ["1", "2", "3", "4"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_32_1)

SetTemperature_2_33_0 = {
    "name": "SetTemperature_2_33_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_33_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_33_0)

SetTemperature_2_33_1 = {
    "name": "SetTemperature_2_33_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_33_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_33_1)

SetTemperature_2_34_0 = {
    "name": "SetTemperature_2_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_34_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder should it be?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer should it be?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_34_0)

SetTemperature_2_34_1 = {
    "name": "SetTemperature_2_34_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_34_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder should it be?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer should it be?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_34_1)

SetTemperature_2_35_0 = {
    "name": "SetTemperature_2_35_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_35_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_35_0)

SetTemperature_2_35_1 = {
    "name": "SetTemperature_2_35_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_35_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_35_1)

SetTemperature_2_36_0 = {
    "name": "SetTemperature_2_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_36_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_36_0)

SetTemperature_2_36_1 = {
    "name": "SetTemperature_2_36_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_36_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_36_1)

SetTemperature_2_37_0 = {
    "name": "SetTemperature_2_37_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_37_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees should I lower the temperature?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees should I raise the temperature?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_37_0)

SetTemperature_2_37_1 = {
    "name": "SetTemperature_2_37_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_37_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees should I lower the temperature?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees should I raise the temperature?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_37_1)

SetTemperature_2_38_0 = {
    "name": "SetTemperature_2_38_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_38_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder should it be?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer should it be?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_38_0)

SetTemperature_2_38_1 = {
    "name": "SetTemperature_2_38_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_38_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder should it be?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer should it be?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_38_1)

SetTemperature_2_39_0 = {
    "name": "SetTemperature_2_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_39_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "By how many degrees?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "By how many degrees?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_39_0)

SetTemperature_2_39_1 = {
    "name": "SetTemperature_2_39_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_39_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "By how many degrees?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "By how many degrees?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_39_1)

SetTemperature_2_40_0 = {
    "name": "SetTemperature_2_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_40_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_40_0)

SetTemperature_2_40_1 = {
    "name": "SetTemperature_2_40_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_40_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_40_1)

SetTemperature_2_41_0 = {
    "name": "SetTemperature_2_41_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_41_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_41_0)

SetTemperature_2_41_1 = {
    "name": "SetTemperature_2_41_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_41_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_41_1)

SetTemperature_2_42_0 = {
    "name": "SetTemperature_2_42_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_42_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_42_0)

SetTemperature_2_42_1 = {
    "name": "SetTemperature_2_42_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_42_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_42_1)

SetTemperature_2_43_0 = {
    "name": "SetTemperature_2_43_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_43_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_43_0)

SetTemperature_2_43_1 = {
    "name": "SetTemperature_2_43_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_43_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_43_1)

SetTemperature_2_44_0 = {
    "name": "SetTemperature_2_44_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_44_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_44_0)

SetTemperature_2_44_1 = {
    "name": "SetTemperature_2_44_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_44_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_44_1)

SetTemperature_2_45_0 = {
    "name": "SetTemperature_2_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_45_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "What temperature in degrees should I set the thermostat to?", ["60", "62", "64", "66", "68", "70", "72"]))
    else:
        new_temp = int(ask("Arjun", "What temperature in degrees should I set the thermostat to?", ["72", "74", "76", "78", "80", "82", "84"]))
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_45_0)

SetTemperature_2_45_1 = {
    "name": "SetTemperature_2_45_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_45_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "What temperature in degrees should I set the thermostat to?", ["60", "62", "64", "66", "68", "70", "72"]))
    else:
        new_temp = int(ask("Arjun", "What temperature in degrees should I set the thermostat to?", ["72", "74", "76", "78", "80", "82", "84"]))
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_45_1)

SetTemperature_2_46_0 = {
    "name": "SetTemperature_2_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_46_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_46_0)

SetTemperature_2_46_1 = {
    "name": "SetTemperature_2_46_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_46_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_46_1)

SetTemperature_2_47_0 = {
    "name": "SetTemperature_2_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_47_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "By how many degrees should I lower the temperature?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "By how many degrees should I raise the temperature?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_47_0)

SetTemperature_2_47_1 = {
    "name": "SetTemperature_2_47_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_47_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "By how many degrees should I lower the temperature?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "By how many degrees should I raise the temperature?", ["1", "2", "3", "4", "5"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_47_1)

SetTemperature_2_48_0 = {
    "name": "SetTemperature_2_48_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_48_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_48_0)

SetTemperature_2_48_1 = {
    "name": "SetTemperature_2_48_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_48_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "How many degrees colder?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "How many degrees warmer?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_48_1)

SetTemperature_2_49_0 = {
    "name": "SetTemperature_2_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_49_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "By how many degrees?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "By how many degrees?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_49_0)

SetTemperature_2_49_1 = {
    "name": "SetTemperature_2_49_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_49_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think your office should be colder or warmer?", ["Colder", "Warmer"])
    if response == "Colder":
        new_temp = int(ask("Arjun", "By how many degrees?", ["1", "2", "3"]))
        new_temp = 72 - new_temp
    else:
        new_temp = int(ask("Arjun", "By how many degrees?", ["1", "2", "3"]))
        new_temp = 72 + new_temp
    go_to(get_current_location())
    say("Change the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_2_49_1)

SetTemperature_3_0_0 = {
    "name": "SetTemperature_3_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 77 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_0_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_0_0)

SetTemperature_3_0_1 = {
    "name": "SetTemperature_3_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 67 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_0_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_0_1)

SetTemperature_3_1_0 = {
    "name": "SetTemperature_3_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_1_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_1_0)

SetTemperature_3_1_1 = {
    "name": "SetTemperature_3_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_1_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_1_1)

SetTemperature_3_2_0 = {
    "name": "SetTemperature_3_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_2_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the temperature to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_2_0)

SetTemperature_3_2_1 = {
    "name": "SetTemperature_3_2_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_2_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the temperature to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_2_1)

SetTemperature_3_3_0 = {
    "name": "SetTemperature_3_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_3_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_3_0)

SetTemperature_3_3_1 = {
    "name": "SetTemperature_3_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_3_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_3_1)

SetTemperature_3_4_0 = {
    "name": "SetTemperature_3_4_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_4_0 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    say("I should reset the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_4_0)

SetTemperature_3_4_1 = {
    "name": "SetTemperature_3_4_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_4_1 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    say("I should reset the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_4_1)

SetTemperature_3_5_0 = {
    "name": "SetTemperature_3_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_5_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_5_0)

SetTemperature_3_5_1 = {
    "name": "SetTemperature_3_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_5_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_5_1)

SetTemperature_3_6_0 = {
    "name": "SetTemperature_3_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_6_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_6_0)

SetTemperature_3_6_1 = {
    "name": "SetTemperature_3_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_6_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_6_1)

SetTemperature_3_7_0 = {
    "name": "SetTemperature_3_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_7_0 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_7_0)

SetTemperature_3_7_1 = {
    "name": "SetTemperature_3_7_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_7_1 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_7_1)

SetTemperature_3_8_0 = {
    "name": "SetTemperature_3_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_8_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_8_0)

SetTemperature_3_8_1 = {
    "name": "SetTemperature_3_8_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_8_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_8_1)

SetTemperature_3_9_0 = {
    "name": "SetTemperature_3_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 77 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_9_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_9_0)

SetTemperature_3_9_1 = {
    "name": "SetTemperature_3_9_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 67 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_9_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_9_1)

SetTemperature_3_10_0 = {
    "name": "SetTemperature_3_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 77 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_10_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_10_0)

SetTemperature_3_10_1 = {
    "name": "SetTemperature_3_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 67 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_10_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_10_1)

SetTemperature_3_11_0 = {
    "name": "SetTemperature_3_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 77 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_11_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_11_0)

SetTemperature_3_11_1 = {
    "name": "SetTemperature_3_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 67 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_11_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_11_1)

SetTemperature_3_12_0 = {
    "name": "SetTemperature_3_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like the office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_12_0 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_12_0)

SetTemperature_3_12_1 = {
    "name": "SetTemperature_3_12_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like the office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_12_1 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_12_1)

SetTemperature_3_13_0 = {
    "name": "SetTemperature_3_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_13_0 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_13_0)

SetTemperature_3_13_1 = {
    "name": "SetTemperature_3_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_13_1 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_13_1)

SetTemperature_3_14_0 = {
    "name": "SetTemperature_3_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ reset the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_14_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Reset the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_14_0)

SetTemperature_3_14_1 = {
    "name": "SetTemperature_3_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ reset the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_14_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Reset the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_14_1)

SetTemperature_3_15_0 = {
    "name": "SetTemperature_3_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_15_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the temperature to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_15_0)

SetTemperature_3_15_1 = {
    "name": "SetTemperature_3_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_15_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the temperature to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_15_1)

SetTemperature_3_16_0 = {
    "name": "SetTemperature_3_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_16_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_16_0)

SetTemperature_3_16_1 = {
    "name": "SetTemperature_3_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_16_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_16_1)

SetTemperature_3_17_0 = {
    "name": "SetTemperature_3_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 77 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_17_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_17_0)

SetTemperature_3_17_1 = {
    "name": "SetTemperature_3_17_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 67 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_17_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_17_1)

SetTemperature_3_18_0 = {
    "name": "SetTemperature_3_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_18_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_3_18_0)

SetTemperature_3_18_1 = {
    "name": "SetTemperature_3_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_18_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to 74 degrees")
    else:
        say("Set the thermostat to 70 degrees")
"""

ordered_field_buffer.append(SetTemperature_3_18_1)

SetTemperature_3_19_0 = {
    "name": "SetTemperature_3_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_19_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_19_0)

SetTemperature_3_19_1 = {
    "name": "SetTemperature_3_19_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_19_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_19_1)

SetTemperature_3_20_0 = {
    "name": "SetTemperature_3_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_20_0 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    say("I should reset the thermostat to " + str(new_temp) + " degrees.")
"""

ordered_field_buffer.append(SetTemperature_3_20_0)

SetTemperature_3_20_1 = {
    "name": "SetTemperature_3_20_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_20_1 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    say("I should reset the thermostat to " + str(new_temp) + " degrees.")
"""

ordered_field_buffer.append(SetTemperature_3_20_1)

SetTemperature_3_21_0 = {
    "name": "SetTemperature_3_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_21_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_21_0)

SetTemperature_3_21_1 = {
    "name": "SetTemperature_3_21_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_21_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_21_1)

SetTemperature_3_22_0 = {
    "name": "SetTemperature_3_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_22_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_22_0)

SetTemperature_3_22_1 = {
    "name": "SetTemperature_3_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_22_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_22_1)

SetTemperature_3_23_0 = {
    "name": "SetTemperature_3_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the temperature should be set to 77 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_23_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(start_loc)
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_23_0)

SetTemperature_3_23_1 = {
    "name": "SetTemperature_3_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the temperature should be set to 67 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_23_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(start_loc)
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_23_1)

SetTemperature_3_24_0 = {
    "name": "SetTemperature_3_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 77 /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_24_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp))
"""

ordered_field_buffer.append(SetTemperature_3_24_0)

SetTemperature_3_24_1 = {
    "name": "SetTemperature_3_24_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 67 /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_24_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp))
"""

ordered_field_buffer.append(SetTemperature_3_24_1)

SetTemperature_3_25_0 = {
    "name": "SetTemperature_3_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_25_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_25_0)

SetTemperature_3_25_1 = {
    "name": "SetTemperature_3_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_25_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_25_1)

SetTemperature_3_26_0 = {
    "name": "SetTemperature_3_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 77 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_26_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_26_0)

SetTemperature_3_26_1 = {
    "name": "SetTemperature_3_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 67 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_26_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_26_1)

SetTemperature_3_27_0 = {
    "name": "SetTemperature_3_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the temperature to 74 /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_27_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the temperature to " + str(new_temp))
"""

ordered_field_buffer.append(SetTemperature_3_27_0)

SetTemperature_3_27_1 = {
    "name": "SetTemperature_3_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the temperature to 70 /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_27_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the temperature to " + str(new_temp))
"""

ordered_field_buffer.append(SetTemperature_3_27_1)

SetTemperature_3_28_0 = {
    "name": "SetTemperature_3_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_28_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_28_0)

SetTemperature_3_28_1 = {
    "name": "SetTemperature_3_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_28_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_28_1)

SetTemperature_3_29_0 = {
    "name": "SetTemperature_3_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be reset to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_29_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be reset to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_29_0)

SetTemperature_3_29_1 = {
    "name": "SetTemperature_3_29_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be reset to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_29_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be reset to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_29_1)

SetTemperature_3_30_0 = {
    "name": "SetTemperature_3_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_30_0 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the temperature to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_30_0)

SetTemperature_3_30_1 = {
    "name": "SetTemperature_3_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_30_1 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the temperature to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_30_1)

SetTemperature_3_31_0 = {
    "name": "SetTemperature_3_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ reset the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_31_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Reset the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_31_0)

SetTemperature_3_31_1 = {
    "name": "SetTemperature_3_31_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ reset the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_31_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    current_temp = 72
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Reset the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_31_1)

SetTemperature_3_32_0 = {
    "name": "SetTemperature_3_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_32_0 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    say("I should reset the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_32_0)

SetTemperature_3_32_1 = {
    "name": "SetTemperature_3_32_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_32_1 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    say("I should reset the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_32_1)

SetTemperature_3_33_0 = {
    "name": "SetTemperature_3_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 77 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_33_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_33_0)

SetTemperature_3_33_1 = {
    "name": "SetTemperature_3_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 67 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_33_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_33_1)

SetTemperature_3_34_0 = {
    "name": "SetTemperature_3_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_34_0 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_34_0)

SetTemperature_3_34_1 = {
    "name": "SetTemperature_3_34_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_34_1 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_34_1)

SetTemperature_3_35_0 = {
    "name": "SetTemperature_3_35_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_35_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    say("Reset the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_35_0)

SetTemperature_3_35_1 = {
    "name": "SetTemperature_3_35_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_35_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        new_temp = current_temp + 1
    else:
        new_temp = current_temp - 1
    say("Reset the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_35_1)

SetTemperature_3_36_0 = {
    "name": "SetTemperature_3_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_36_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_36_0)

SetTemperature_3_36_1 = {
    "name": "SetTemperature_3_36_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_36_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_36_1)

SetTemperature_3_37_0 = {
    "name": "SetTemperature_3_37_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_37_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(start_loc)
    say("The temperature should be set to " + str(new_temp))
"""

ordered_field_buffer.append(SetTemperature_3_37_0)

SetTemperature_3_37_1 = {
    "name": "SetTemperature_3_37_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_37_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(start_loc)
    say("The temperature should be set to " + str(new_temp))
"""

ordered_field_buffer.append(SetTemperature_3_37_1)

SetTemperature_3_38_0 = {
    "name": "SetTemperature_3_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_38_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_38_0)

SetTemperature_3_38_1 = {
    "name": "SetTemperature_3_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_38_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_38_1)

SetTemperature_3_39_0 = {
    "name": "SetTemperature_3_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ reset the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_39_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(start_loc)
    say("Reset the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_39_0)

SetTemperature_3_39_1 = {
    "name": "SetTemperature_3_39_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ reset the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_39_1 = """
def task_program():
    start_loc = get_current_location()
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(start_loc)
    say("Reset the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_39_1)

SetTemperature_3_40_0 = {
    "name": "SetTemperature_3_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 77 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_40_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_40_0)

SetTemperature_3_40_1 = {
    "name": "SetTemperature_3_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 67 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_40_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_40_1)

SetTemperature_3_41_0 = {
    "name": "SetTemperature_3_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_41_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_41_0)

SetTemperature_3_41_1 = {
    "name": "SetTemperature_3_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_41_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_41_1)

SetTemperature_3_42_0 = {
    "name": "SetTemperature_3_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 77 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_42_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_42_0)

SetTemperature_3_42_1 = {
    "name": "SetTemperature_3_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 67 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_42_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_42_1)

SetTemperature_3_43_0 = {
    "name": "SetTemperature_3_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 77 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_43_0 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_43_0)

SetTemperature_3_43_1 = {
    "name": "SetTemperature_3_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the thermostat to 67 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_43_1 = """
def task_program():
    current_temp = 72
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("Set the thermostat to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_43_1)

SetTemperature_3_44_0 = {
    "name": "SetTemperature_3_44_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_44_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to " + str(current_temp + 1))
    else:
        say("Set the thermostat to " + str(current_temp - 1))
"""

ordered_field_buffer.append(SetTemperature_3_44_0)

SetTemperature_3_44_1 = {
    "name": "SetTemperature_3_44_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: NameError: name 'start_loc' is not defined",
}

program_SetTemperature_3_44_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    go_to(start_loc)
    if response == "Warmer":
        say("Set the thermostat to " + str(current_temp + 1))
    else:
        say("Set the thermostat to " + str(current_temp - 1))
"""

ordered_field_buffer.append(SetTemperature_3_44_1)

SetTemperature_3_45_0 = {
    "name": "SetTemperature_3_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 77 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_45_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_45_0)

SetTemperature_3_45_1 = {
    "name": "SetTemperature_3_45_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 67 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_45_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_45_1)

SetTemperature_3_46_0 = {
    "name": "SetTemperature_3_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 77 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_46_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_46_0)

SetTemperature_3_46_1 = {
    "name": "SetTemperature_3_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 67 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_46_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 5
    else:
        new_temp = current_temp - 5
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_46_1)

SetTemperature_3_47_0 = {
    "name": "SetTemperature_3_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_47_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_47_0)

SetTemperature_3_47_1 = {
    "name": "SetTemperature_3_47_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_47_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_47_1)

SetTemperature_3_48_0 = {
    "name": "SetTemperature_3_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the temperature to 74 /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_48_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the temperature to " + str(new_temp))
"""

ordered_field_buffer.append(SetTemperature_3_48_0)

SetTemperature_3_48_1 = {
    "name": "SetTemperature_3_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ set the temperature to 70 /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_48_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("Set the temperature to " + str(new_temp))
"""

ordered_field_buffer.append(SetTemperature_3_48_1)

SetTemperature_3_49_0 = {
    "name": "SetTemperature_3_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_49_0 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_49_0)

SetTemperature_3_49_1 = {
    "name": "SetTemperature_3_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Say /$@!/ the temperature should be set to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_49_1 = """
def task_program():
    go_to("Arjun's office")
    current_temp = 72
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = current_temp + 2
    else:
        new_temp = current_temp - 2
    go_to(get_current_location())
    say("The temperature should be set to " + str(new_temp) + " degrees")
"""

ordered_field_buffer.append(SetTemperature_3_49_1)

SetTemperature_4_0_0 = {
    "name": "SetTemperature_4_0_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_0_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(start_loc)
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_0_0)

SetTemperature_4_0_1 = {
    "name": "SetTemperature_4_0_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_0_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(start_loc)
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_0_1)

SetTemperature_4_1_0 = {
    "name": "SetTemperature_4_1_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_1_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_1_0)

SetTemperature_4_1_1 = {
    "name": "SetTemperature_4_1_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_1_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_1_1)

SetTemperature_4_2_0 = {
    "name": "SetTemperature_4_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_2_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_2_0)

SetTemperature_4_2_1 = {
    "name": "SetTemperature_4_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_2_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_2_1)

SetTemperature_4_3_0 = {
    "name": "SetTemperature_4_3_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_3_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["75", "78", "81"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["69", "66", "63"])
    go_to(start_loc)
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_3_0)

SetTemperature_4_3_1 = {
    "name": "SetTemperature_4_3_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_3_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["75", "78", "81"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["69", "66", "63"])
    go_to(start_loc)
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_3_1)

SetTemperature_4_4_0 = {
    "name": "SetTemperature_4_4_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_4_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    elif response == "Colder":
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    else:
        temperature = "72"
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_4_0)

SetTemperature_4_4_1 = {
    "name": "SetTemperature_4_4_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_4_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    elif response == "Colder":
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    else:
        temperature = "72"
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_4_1)

SetTemperature_4_5_0 = {
    "name": "SetTemperature_4_5_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_5_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "80"])
    else:
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["68", "65", "60"])
    go_to(get_current_location())
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_5_0)

SetTemperature_4_5_1 = {
    "name": "SetTemperature_4_5_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_5_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "80"])
    else:
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["68", "65", "60"])
    go_to(get_current_location())
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_5_1)

SetTemperature_4_6_0 = {
    "name": "SetTemperature_4_6_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_6_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_6_0)

SetTemperature_4_6_1 = {
    "name": "SetTemperature_4_6_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_6_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_6_1)

SetTemperature_4_7_0 = {
    "name": "SetTemperature_4_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_7_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like?", ["75", "78", "80"])
    else:
        new_temp = ask("Arjun", "What temperature would you like?", ["68", "65", "62"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_7_0)

SetTemperature_4_7_1 = {
    "name": "SetTemperature_4_7_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_7_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like?", ["75", "78", "80"])
    else:
        new_temp = ask("Arjun", "What temperature would you like?", ["68", "65", "62"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_7_1)

SetTemperature_4_8_0 = {
    "name": "SetTemperature_4_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_8_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_8_0)

SetTemperature_4_8_1 = {
    "name": "SetTemperature_4_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_8_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_8_1)

SetTemperature_4_9_0 = {
    "name": "SetTemperature_4_9_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_9_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_9_0)

SetTemperature_4_9_1 = {
    "name": "SetTemperature_4_9_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_9_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_9_1)

SetTemperature_4_10_0 = {
    "name": "SetTemperature_4_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_10_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_10_0)

SetTemperature_4_10_1 = {
    "name": "SetTemperature_4_10_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_10_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_10_1)

SetTemperature_4_11_0 = {
    "name": "SetTemperature_4_11_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_11_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_11_0)

SetTemperature_4_11_1 = {
    "name": "SetTemperature_4_11_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_11_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_11_1)

SetTemperature_4_12_0 = {
    "name": "SetTemperature_4_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_12_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_12_0)

SetTemperature_4_12_1 = {
    "name": "SetTemperature_4_12_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_12_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_12_1)

SetTemperature_4_13_0 = {
    "name": "SetTemperature_4_13_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_13_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_13_0)

SetTemperature_4_13_1 = {
    "name": "SetTemperature_4_13_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_13_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_13_1)

SetTemperature_4_14_0 = {
    "name": "SetTemperature_4_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_14_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees should I set the thermostat to?", ["68", "70", "72", "74", "76"])
    else:
        temperature = ask("Arjun", "What temperature in degrees should I set the thermostat to?", ["72", "70", "68", "66", "64"])
    go_to(start_loc)
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_14_0)

SetTemperature_4_14_1 = {
    "name": "SetTemperature_4_14_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_14_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees should I set the thermostat to?", ["68", "70", "72", "74", "76"])
    else:
        temperature = ask("Arjun", "What temperature in degrees should I set the thermostat to?", ["72", "70", "68", "66", "64"])
    go_to(start_loc)
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_14_1)

SetTemperature_4_15_0 = {
    "name": "SetTemperature_4_15_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_15_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_15_0)

SetTemperature_4_15_1 = {
    "name": "SetTemperature_4_15_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_15_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_15_1)

SetTemperature_4_16_0 = {
    "name": "SetTemperature_4_16_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_16_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like it to be?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like it to be?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_16_0)

SetTemperature_4_16_1 = {
    "name": "SetTemperature_4_16_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_16_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like it to be?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like it to be?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_16_1)

SetTemperature_4_17_0 = {
    "name": "SetTemperature_4_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_17_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_17_0)

SetTemperature_4_17_1 = {
    "name": "SetTemperature_4_17_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_17_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_17_1)

SetTemperature_4_18_0 = {
    "name": "SetTemperature_4_18_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_18_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_18_0)

SetTemperature_4_18_1 = {
    "name": "SetTemperature_4_18_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_18_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_18_1)

SetTemperature_4_19_0 = {
    "name": "SetTemperature_4_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_19_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_19_0)

SetTemperature_4_19_1 = {
    "name": "SetTemperature_4_19_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_19_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_19_1)

SetTemperature_4_20_0 = {
    "name": "SetTemperature_4_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_20_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_20_0)

SetTemperature_4_20_1 = {
    "name": "SetTemperature_4_20_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_20_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_20_1)

SetTemperature_4_21_0 = {
    "name": "SetTemperature_4_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_21_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_21_0)

SetTemperature_4_21_1 = {
    "name": "SetTemperature_4_21_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_21_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_21_1)

SetTemperature_4_22_0 = {
    "name": "SetTemperature_4_22_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_22_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_22_0)

SetTemperature_4_22_1 = {
    "name": "SetTemperature_4_22_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_22_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_22_1)

SetTemperature_4_23_0 = {
    "name": "SetTemperature_4_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_23_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like?", ["73", "74", "75"])
    elif response == "Colder":
        temperature = ask("Arjun", "What temperature in degrees would you like?", ["71", "70", "69"])
    go_to(start_loc)
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_23_0)

SetTemperature_4_23_1 = {
    "name": "SetTemperature_4_23_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_23_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like?", ["73", "74", "75"])
    elif response == "Colder":
        temperature = ask("Arjun", "What temperature in degrees would you like?", ["71", "70", "69"])
    go_to(start_loc)
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_23_1)

SetTemperature_4_24_0 = {
    "name": "SetTemperature_4_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_24_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_24_0)

SetTemperature_4_24_1 = {
    "name": "SetTemperature_4_24_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_24_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_24_1)

SetTemperature_4_25_0 = {
    "name": "SetTemperature_4_25_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_25_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["75", "78", "80"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["68", "65", "62"])
    go_to(start_loc)
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_25_0)

SetTemperature_4_25_1 = {
    "name": "SetTemperature_4_25_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_25_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["75", "78", "80"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["68", "65", "62"])
    go_to(start_loc)
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_25_1)

SetTemperature_4_26_0 = {
    "name": "SetTemperature_4_26_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_26_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_26_0)

SetTemperature_4_26_1 = {
    "name": "SetTemperature_4_26_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_26_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_26_1)

SetTemperature_4_27_0 = {
    "name": "SetTemperature_4_27_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_27_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["68", "70", "72", "74", "76"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["68", "70", "72", "74", "76"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_27_0)

SetTemperature_4_27_1 = {
    "name": "SetTemperature_4_27_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_27_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["68", "70", "72", "74", "76"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["68", "70", "72", "74", "76"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_27_1)

SetTemperature_4_28_0 = {
    "name": "SetTemperature_4_28_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_28_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_28_0)

SetTemperature_4_28_1 = {
    "name": "SetTemperature_4_28_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_28_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_28_1)

SetTemperature_4_29_0 = {
    "name": "SetTemperature_4_29_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_29_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_29_0)

SetTemperature_4_29_1 = {
    "name": "SetTemperature_4_29_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_29_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_29_1)

SetTemperature_4_30_0 = {
    "name": "SetTemperature_4_30_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_30_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_30_0)

SetTemperature_4_30_1 = {
    "name": "SetTemperature_4_30_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_30_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_30_1)

SetTemperature_4_31_0 = {
    "name": "SetTemperature_4_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_31_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_31_0)

SetTemperature_4_31_1 = {
    "name": "SetTemperature_4_31_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_31_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_31_1)

SetTemperature_4_32_0 = {
    "name": "SetTemperature_4_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_32_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_32_0)

SetTemperature_4_32_1 = {
    "name": "SetTemperature_4_32_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_32_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_32_1)

SetTemperature_4_33_0 = {
    "name": "SetTemperature_4_33_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_33_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_33_0)

SetTemperature_4_33_1 = {
    "name": "SetTemperature_4_33_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_33_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_33_1)

SetTemperature_4_34_0 = {
    "name": "SetTemperature_4_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_34_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(start_loc)
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_34_0)

SetTemperature_4_34_1 = {
    "name": "SetTemperature_4_34_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_34_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(start_loc)
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_34_1)

SetTemperature_4_35_0 = {
    "name": "SetTemperature_4_35_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_35_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_35_0)

SetTemperature_4_35_1 = {
    "name": "SetTemperature_4_35_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_35_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_35_1)

SetTemperature_4_36_0 = {
    "name": "SetTemperature_4_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_36_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_36_0)

SetTemperature_4_36_1 = {
    "name": "SetTemperature_4_36_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_36_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_36_1)

SetTemperature_4_37_0 = {
    "name": "SetTemperature_4_37_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_37_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["75", "78", "80"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["68", "65", "62"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_37_0)

SetTemperature_4_37_1 = {
    "name": "SetTemperature_4_37_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_37_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["75", "78", "80"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["68", "65", "62"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_37_1)

SetTemperature_4_38_0 = {
    "name": "SetTemperature_4_38_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_38_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "80"])
    else:
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["68", "65", "62"])
    go_to(start_loc)
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_38_0)

SetTemperature_4_38_1 = {
    "name": "SetTemperature_4_38_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_38_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "80"])
    else:
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["68", "65", "62"])
    go_to(start_loc)
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_38_1)

SetTemperature_4_39_0 = {
    "name": "SetTemperature_4_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_39_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["71", "70", "69"])
    go_to(start_loc)
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_39_0)

SetTemperature_4_39_1 = {
    "name": "SetTemperature_4_39_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_39_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["71", "70", "69"])
    go_to(start_loc)
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_39_1)

SetTemperature_4_40_0 = {
    "name": "SetTemperature_4_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_40_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(start_loc)
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_40_0)

SetTemperature_4_40_1 = {
    "name": "SetTemperature_4_40_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_40_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(start_loc)
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_40_1)

SetTemperature_4_41_0 = {
    "name": "SetTemperature_4_41_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_41_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_41_0)

SetTemperature_4_41_1 = {
    "name": "SetTemperature_4_41_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_41_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_41_1)

SetTemperature_4_42_0 = {
    "name": "SetTemperature_4_42_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_42_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_42_0)

SetTemperature_4_42_1 = {
    "name": "SetTemperature_4_42_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_42_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_42_1)

SetTemperature_4_43_0 = {
    "name": "SetTemperature_4_43_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_43_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_43_0)

SetTemperature_4_43_1 = {
    "name": "SetTemperature_4_43_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_43_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_43_1)

SetTemperature_4_44_0 = {
    "name": "SetTemperature_4_44_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_44_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_44_0)

SetTemperature_4_44_1 = {
    "name": "SetTemperature_4_44_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_44_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like the thermostat to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_44_1)

SetTemperature_4_45_0 = {
    "name": "SetTemperature_4_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_45_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_45_0)

SetTemperature_4_45_1 = {
    "name": "SetTemperature_4_45_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_45_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_45_1)

SetTemperature_4_46_0 = {
    "name": "SetTemperature_4_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_46_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_46_0)

SetTemperature_4_46_1 = {
    "name": "SetTemperature_4_46_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_46_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["75", "78", "81"])
    else:
        new_temp = ask("Arjun", "What temperature would you like it to be set to?", ["69", "66", "63"])
    go_to(get_current_location())
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_46_1)

SetTemperature_4_47_0 = {
    "name": "SetTemperature_4_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_47_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_47_0)

SetTemperature_4_47_1 = {
    "name": "SetTemperature_4_47_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_47_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be set to a warmer or colder value?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature in degrees would you like it to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_47_1)

SetTemperature_4_48_0 = {
    "name": "SetTemperature_4_48_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_48_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_48_0)

SetTemperature_4_48_1 = {
    "name": "SetTemperature_4_48_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_48_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["73", "74", "75"])
    else:
        temperature = ask("Arjun", "What temperature would you like it to be set to?", ["71", "70", "69"])
    go_to(get_current_location())
    say("Set the thermostat to " + temperature + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_48_1)

SetTemperature_4_49_0 = {
    "name": "SetTemperature_4_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_49_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["71", "70", "69"])
    go_to(start_loc)
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_49_0)

SetTemperature_4_49_1 = {
    "name": "SetTemperature_4_49_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_4_49_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["73", "74", "75"])
    else:
        new_temp = ask("Arjun", "What temperature in degrees would you like?", ["71", "70", "69"])
    go_to(start_loc)
    say("Set the thermostat to " + new_temp + " degrees")
"""

ordered_field_buffer.append(SetTemperature_4_49_1)
