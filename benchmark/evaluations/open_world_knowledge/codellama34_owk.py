"""field: TASKNAME_PROMPTNUM_COMPLNUM_TESTNUM"""

ordered_field_buffer = []

CountSavory_0_0_0 = {
    "name": "CountSavory_0_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_0_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_0_0)

CountSavory_0_0_1 = {
    "name": "CountSavory_0_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_0_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_0_1)

CountSavory_0_0_2 = {
    "name": "CountSavory_0_0_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_0_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_0_2)

CountSavory_0_0_3 = {
    "name": "CountSavory_0_0_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_0_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_0_3)

CountSavory_0_1_0 = {
    "name": "CountSavory_0_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_1_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_1_0)

CountSavory_0_1_1 = {
    "name": "CountSavory_0_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_1_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_1_1)

CountSavory_0_1_2 = {
    "name": "CountSavory_0_1_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_1_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_1_2)

CountSavory_0_1_3 = {
    "name": "CountSavory_0_1_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_1_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_1_3)

CountSavory_0_2_0 = {
    "name": "CountSavory_0_2_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_2_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_2_0)

CountSavory_0_2_1 = {
    "name": "CountSavory_0_2_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_2_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_2_1)

CountSavory_0_2_2 = {
    "name": "CountSavory_0_2_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_2_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_2_2)

CountSavory_0_2_3 = {
    "name": "CountSavory_0_2_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_2_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_2_3)

CountSavory_0_3_0 = {
    "name": "CountSavory_0_3_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_3_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_3_0)

CountSavory_0_3_1 = {
    "name": "CountSavory_0_3_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_3_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_3_1)

CountSavory_0_3_2 = {
    "name": "CountSavory_0_3_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_3_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_3_2)

CountSavory_0_3_3 = {
    "name": "CountSavory_0_3_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_3_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_3_3)

CountSavory_0_4_0 = {
    "name": "CountSavory_0_4_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_4_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_4_0)

CountSavory_0_4_1 = {
    "name": "CountSavory_0_4_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_4_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_4_1)

CountSavory_0_4_2 = {
    "name": "CountSavory_0_4_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_4_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_4_2)

CountSavory_0_4_3 = {
    "name": "CountSavory_0_4_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_4_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_4_3)

CountSavory_0_5_0 = {
    "name": "CountSavory_0_5_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_5_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_5_0)

CountSavory_0_5_1 = {
    "name": "CountSavory_0_5_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_5_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_5_1)

CountSavory_0_5_2 = {
    "name": "CountSavory_0_5_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_5_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_5_2)

CountSavory_0_5_3 = {
    "name": "CountSavory_0_5_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_5_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_5_3)

CountSavory_0_6_0 = {
    "name": "CountSavory_0_6_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_6_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "donut" or response == "beef jerky":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_6_0)

CountSavory_0_6_1 = {
    "name": "CountSavory_0_6_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_6_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "donut" or response == "beef jerky":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_6_1)

CountSavory_0_6_2 = {
    "name": "CountSavory_0_6_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_6_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "donut" or response == "beef jerky":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_6_2)

CountSavory_0_6_3 = {
    "name": "CountSavory_0_6_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_6_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "donut" or response == "beef jerky":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_6_3)

CountSavory_0_7_0 = {
    "name": "CountSavory_0_7_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_7_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_7_0)

CountSavory_0_7_1 = {
    "name": "CountSavory_0_7_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_7_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_7_1)

CountSavory_0_7_2 = {
    "name": "CountSavory_0_7_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_7_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_7_2)

CountSavory_0_7_3 = {
    "name": "CountSavory_0_7_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_7_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_7_3)

CountSavory_0_8_0 = {
    "name": "CountSavory_0_8_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_8_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_8_0)

CountSavory_0_8_1 = {
    "name": "CountSavory_0_8_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_8_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_8_1)

CountSavory_0_8_2 = {
    "name": "CountSavory_0_8_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_8_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_8_2)

CountSavory_0_8_3 = {
    "name": "CountSavory_0_8_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_8_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_8_3)

CountSavory_0_9_0 = {
    "name": "CountSavory_0_9_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_9_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_9_0)

CountSavory_0_9_1 = {
    "name": "CountSavory_0_9_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_9_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_9_1)

CountSavory_0_9_2 = {
    "name": "CountSavory_0_9_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_9_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_9_2)

CountSavory_0_9_3 = {
    "name": "CountSavory_0_9_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_9_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_9_3)

CountSavory_0_10_0 = {
    "name": "CountSavory_0_10_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_10_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_10_0)

CountSavory_0_10_1 = {
    "name": "CountSavory_0_10_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_10_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_10_1)

CountSavory_0_10_2 = {
    "name": "CountSavory_0_10_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_10_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_10_2)

CountSavory_0_10_3 = {
    "name": "CountSavory_0_10_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_10_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_10_3)

CountSavory_0_11_0 = {
    "name": "CountSavory_0_11_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_11_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory_options += 1
    go_to(start_loc)
    say(str(num_savory_options) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_11_0)

CountSavory_0_11_1 = {
    "name": "CountSavory_0_11_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_11_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory_options += 1
    go_to(start_loc)
    say(str(num_savory_options) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_11_1)

CountSavory_0_11_2 = {
    "name": "CountSavory_0_11_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_11_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory_options += 1
    go_to(start_loc)
    say(str(num_savory_options) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_11_2)

CountSavory_0_11_3 = {
    "name": "CountSavory_0_11_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_11_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory_options += 1
    go_to(start_loc)
    say(str(num_savory_options) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_11_3)

CountSavory_0_12_0 = {
    "name": "CountSavory_0_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_12_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_12_0)

CountSavory_0_12_1 = {
    "name": "CountSavory_0_12_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_12_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_12_1)

CountSavory_0_12_2 = {
    "name": "CountSavory_0_12_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_12_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_12_2)

CountSavory_0_12_3 = {
    "name": "CountSavory_0_12_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_12_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_12_3)

CountSavory_0_13_0 = {
    "name": "CountSavory_0_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_13_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory_options += 1
    go_to(start_loc)
    say(str(num_savory_options) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_13_0)

CountSavory_0_13_1 = {
    "name": "CountSavory_0_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_13_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory_options += 1
    go_to(start_loc)
    say(str(num_savory_options) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_13_1)

CountSavory_0_13_2 = {
    "name": "CountSavory_0_13_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_13_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory_options += 1
    go_to(start_loc)
    say(str(num_savory_options) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_13_2)

CountSavory_0_13_3 = {
    "name": "CountSavory_0_13_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_13_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory_options += 1
    go_to(start_loc)
    say(str(num_savory_options) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_13_3)

CountSavory_0_14_0 = {
    "name": "CountSavory_0_14_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_14_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_14_0)

CountSavory_0_14_1 = {
    "name": "CountSavory_0_14_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_14_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_14_1)

CountSavory_0_14_2 = {
    "name": "CountSavory_0_14_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_14_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_14_2)

CountSavory_0_14_3 = {
    "name": "CountSavory_0_14_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_14_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_14_3)

CountSavory_0_15_0 = {
    "name": "CountSavory_0_15_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_15_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_15_0)

CountSavory_0_15_1 = {
    "name": "CountSavory_0_15_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_15_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_15_1)

CountSavory_0_15_2 = {
    "name": "CountSavory_0_15_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_15_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_15_2)

CountSavory_0_15_3 = {
    "name": "CountSavory_0_15_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_15_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_15_3)

CountSavory_0_16_0 = {
    "name": "CountSavory_0_16_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_16_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_16_0)

CountSavory_0_16_1 = {
    "name": "CountSavory_0_16_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_16_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_16_1)

CountSavory_0_16_2 = {
    "name": "CountSavory_0_16_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_16_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_16_2)

CountSavory_0_16_3 = {
    "name": "CountSavory_0_16_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_16_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_16_3)

CountSavory_0_17_0 = {
    "name": "CountSavory_0_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_17_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory_options += 1
    go_to(start_loc)
    say(str(num_savory_options) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_17_0)

CountSavory_0_17_1 = {
    "name": "CountSavory_0_17_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_17_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory_options += 1
    go_to(start_loc)
    say(str(num_savory_options) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_17_1)

CountSavory_0_17_2 = {
    "name": "CountSavory_0_17_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_17_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory_options += 1
    go_to(start_loc)
    say(str(num_savory_options) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_17_2)

CountSavory_0_17_3 = {
    "name": "CountSavory_0_17_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_17_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_options = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory_options += 1
    go_to(start_loc)
    say(str(num_savory_options) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_17_3)

CountSavory_0_18_0 = {
    "name": "CountSavory_0_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_18_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_18_0)

CountSavory_0_18_1 = {
    "name": "CountSavory_0_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_18_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_18_1)

CountSavory_0_18_2 = {
    "name": "CountSavory_0_18_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_18_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_18_2)

CountSavory_0_18_3 = {
    "name": "CountSavory_0_18_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_18_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_18_3)

CountSavory_0_19_0 = {
    "name": "CountSavory_0_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_19_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_19_0)

CountSavory_0_19_1 = {
    "name": "CountSavory_0_19_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_19_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_19_1)

CountSavory_0_19_2 = {
    "name": "CountSavory_0_19_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_19_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_19_2)

CountSavory_0_19_3 = {
    "name": "CountSavory_0_19_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_19_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_19_3)

CountSavory_0_20_0 = {
    "name": "CountSavory_0_20_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_20_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_20_0)

CountSavory_0_20_1 = {
    "name": "CountSavory_0_20_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_20_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_20_1)

CountSavory_0_20_2 = {
    "name": "CountSavory_0_20_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_20_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_20_2)

CountSavory_0_20_3 = {
    "name": "CountSavory_0_20_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_20_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_20_3)

CountSavory_0_21_0 = {
    "name": "CountSavory_0_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_21_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_21_0)

CountSavory_0_21_1 = {
    "name": "CountSavory_0_21_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_21_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_21_1)

CountSavory_0_21_2 = {
    "name": "CountSavory_0_21_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_21_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_21_2)

CountSavory_0_21_3 = {
    "name": "CountSavory_0_21_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_21_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_21_3)

CountSavory_0_22_0 = {
    "name": "CountSavory_0_22_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_22_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_22_0)

CountSavory_0_22_1 = {
    "name": "CountSavory_0_22_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_22_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_22_1)

CountSavory_0_22_2 = {
    "name": "CountSavory_0_22_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_22_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_22_2)

CountSavory_0_22_3 = {
    "name": "CountSavory_0_22_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_22_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_22_3)

CountSavory_0_23_0 = {
    "name": "CountSavory_0_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_23_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_23_0)

CountSavory_0_23_1 = {
    "name": "CountSavory_0_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_23_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_23_1)

CountSavory_0_23_2 = {
    "name": "CountSavory_0_23_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_23_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_23_2)

CountSavory_0_23_3 = {
    "name": "CountSavory_0_23_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_23_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_23_3)

CountSavory_0_24_0 = {
    "name": "CountSavory_0_24_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_24_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_24_0)

CountSavory_0_24_1 = {
    "name": "CountSavory_0_24_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_24_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_24_1)

CountSavory_0_24_2 = {
    "name": "CountSavory_0_24_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_24_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_24_2)

CountSavory_0_24_3 = {
    "name": "CountSavory_0_24_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_24_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_24_3)

CountSavory_0_25_0 = {
    "name": "CountSavory_0_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_25_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_25_0)

CountSavory_0_25_1 = {
    "name": "CountSavory_0_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_25_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_25_1)

CountSavory_0_25_2 = {
    "name": "CountSavory_0_25_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_25_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_25_2)

CountSavory_0_25_3 = {
    "name": "CountSavory_0_25_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_25_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_25_3)

CountSavory_0_26_0 = {
    "name": "CountSavory_0_26_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_26_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_26_0)

CountSavory_0_26_1 = {
    "name": "CountSavory_0_26_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_26_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_26_1)

CountSavory_0_26_2 = {
    "name": "CountSavory_0_26_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_26_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_26_2)

CountSavory_0_26_3 = {
    "name": "CountSavory_0_26_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_26_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_26_3)

CountSavory_0_27_0 = {
    "name": "CountSavory_0_27_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_27_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_27_0)

CountSavory_0_27_1 = {
    "name": "CountSavory_0_27_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_27_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_27_1)

CountSavory_0_27_2 = {
    "name": "CountSavory_0_27_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_27_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_27_2)

CountSavory_0_27_3 = {
    "name": "CountSavory_0_27_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_27_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_27_3)

CountSavory_0_28_0 = {
    "name": "CountSavory_0_28_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_28_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_28_0)

CountSavory_0_28_1 = {
    "name": "CountSavory_0_28_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_28_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_28_1)

CountSavory_0_28_2 = {
    "name": "CountSavory_0_28_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_28_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_28_2)

CountSavory_0_28_3 = {
    "name": "CountSavory_0_28_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_28_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_28_3)

CountSavory_0_29_0 = {
    "name": "CountSavory_0_29_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_29_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_29_0)

CountSavory_0_29_1 = {
    "name": "CountSavory_0_29_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_29_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_29_1)

CountSavory_0_29_2 = {
    "name": "CountSavory_0_29_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_29_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_29_2)

CountSavory_0_29_3 = {
    "name": "CountSavory_0_29_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_29_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_29_3)

CountSavory_0_30_0 = {
    "name": "CountSavory_0_30_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_30_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_30_0)

CountSavory_0_30_1 = {
    "name": "CountSavory_0_30_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_30_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_30_1)

CountSavory_0_30_2 = {
    "name": "CountSavory_0_30_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_30_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_30_2)

CountSavory_0_30_3 = {
    "name": "CountSavory_0_30_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_30_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_30_3)

CountSavory_0_31_0 = {
    "name": "CountSavory_0_31_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_31_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_31_0)

CountSavory_0_31_1 = {
    "name": "CountSavory_0_31_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_31_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_31_1)

CountSavory_0_31_2 = {
    "name": "CountSavory_0_31_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_31_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_31_2)

CountSavory_0_31_3 = {
    "name": "CountSavory_0_31_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_31_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_31_3)

CountSavory_0_32_0 = {
    "name": "CountSavory_0_32_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_32_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_32_0)

CountSavory_0_32_1 = {
    "name": "CountSavory_0_32_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_32_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_32_1)

CountSavory_0_32_2 = {
    "name": "CountSavory_0_32_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_32_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_32_2)

CountSavory_0_32_3 = {
    "name": "CountSavory_0_32_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_32_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_32_3)

CountSavory_0_33_0 = {
    "name": "CountSavory_0_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_33_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_33_0)

CountSavory_0_33_1 = {
    "name": "CountSavory_0_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_33_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_33_1)

CountSavory_0_33_2 = {
    "name": "CountSavory_0_33_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_33_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_33_2)

CountSavory_0_33_3 = {
    "name": "CountSavory_0_33_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_33_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_33_3)

CountSavory_0_34_0 = {
    "name": "CountSavory_0_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_34_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_34_0)

CountSavory_0_34_1 = {
    "name": "CountSavory_0_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_34_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_34_1)

CountSavory_0_34_2 = {
    "name": "CountSavory_0_34_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_34_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_34_2)

CountSavory_0_34_3 = {
    "name": "CountSavory_0_34_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_34_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_34_3)

CountSavory_0_35_0 = {
    "name": "CountSavory_0_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_35_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_35_0)

CountSavory_0_35_1 = {
    "name": "CountSavory_0_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_35_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_35_1)

CountSavory_0_35_2 = {
    "name": "CountSavory_0_35_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_35_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_35_2)

CountSavory_0_35_3 = {
    "name": "CountSavory_0_35_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_35_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_35_3)

CountSavory_0_36_0 = {
    "name": "CountSavory_0_36_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_36_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_36_0)

CountSavory_0_36_1 = {
    "name": "CountSavory_0_36_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_36_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_36_1)

CountSavory_0_36_2 = {
    "name": "CountSavory_0_36_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_36_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_36_2)

CountSavory_0_36_3 = {
    "name": "CountSavory_0_36_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_36_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_36_3)

CountSavory_0_37_0 = {
    "name": "CountSavory_0_37_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_37_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_37_0)

CountSavory_0_37_1 = {
    "name": "CountSavory_0_37_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_37_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_37_1)

CountSavory_0_37_2 = {
    "name": "CountSavory_0_37_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_37_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_37_2)

CountSavory_0_37_3 = {
    "name": "CountSavory_0_37_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_37_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_37_3)

CountSavory_0_38_0 = {
    "name": "CountSavory_0_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_38_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_38_0)

CountSavory_0_38_1 = {
    "name": "CountSavory_0_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_38_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_38_1)

CountSavory_0_38_2 = {
    "name": "CountSavory_0_38_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_38_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_38_2)

CountSavory_0_38_3 = {
    "name": "CountSavory_0_38_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_38_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_38_3)

CountSavory_0_39_0 = {
    "name": "CountSavory_0_39_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_39_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_39_0)

CountSavory_0_39_1 = {
    "name": "CountSavory_0_39_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_39_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_39_1)

CountSavory_0_39_2 = {
    "name": "CountSavory_0_39_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_39_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_39_2)

CountSavory_0_39_3 = {
    "name": "CountSavory_0_39_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_39_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_39_3)

CountSavory_0_40_0 = {
    "name": "CountSavory_0_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_40_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_40_0)

CountSavory_0_40_1 = {
    "name": "CountSavory_0_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_40_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_40_1)

CountSavory_0_40_2 = {
    "name": "CountSavory_0_40_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_40_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_40_2)

CountSavory_0_40_3 = {
    "name": "CountSavory_0_40_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_40_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_40_3)

CountSavory_0_41_0 = {
    "name": "CountSavory_0_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_41_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_41_0)

CountSavory_0_41_1 = {
    "name": "CountSavory_0_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_41_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_41_1)

CountSavory_0_41_2 = {
    "name": "CountSavory_0_41_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_41_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_41_2)

CountSavory_0_41_3 = {
    "name": "CountSavory_0_41_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_41_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_41_3)

CountSavory_0_42_0 = {
    "name": "CountSavory_0_42_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_42_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_42_0)

CountSavory_0_42_1 = {
    "name": "CountSavory_0_42_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_42_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_42_1)

CountSavory_0_42_2 = {
    "name": "CountSavory_0_42_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_42_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_42_2)

CountSavory_0_42_3 = {
    "name": "CountSavory_0_42_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_42_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response == "ham sandwich" or response == "donut" or response == "beef jerky":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_42_3)

CountSavory_0_43_0 = {
    "name": "CountSavory_0_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_43_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "beef jerky":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_43_0)

CountSavory_0_43_1 = {
    "name": "CountSavory_0_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_43_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "beef jerky":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_43_1)

CountSavory_0_43_2 = {
    "name": "CountSavory_0_43_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_43_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "beef jerky":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_43_2)

CountSavory_0_43_3 = {
    "name": "CountSavory_0_43_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_43_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "beef jerky":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_43_3)

CountSavory_0_44_0 = {
    "name": "CountSavory_0_44_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_44_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_44_0)

CountSavory_0_44_1 = {
    "name": "CountSavory_0_44_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_44_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_44_1)

CountSavory_0_44_2 = {
    "name": "CountSavory_0_44_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_44_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_44_2)

CountSavory_0_44_3 = {
    "name": "CountSavory_0_44_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_44_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_44_3)

CountSavory_0_45_0 = {
    "name": "CountSavory_0_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_45_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_45_0)

CountSavory_0_45_1 = {
    "name": "CountSavory_0_45_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_45_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_45_1)

CountSavory_0_45_2 = {
    "name": "CountSavory_0_45_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_45_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_45_2)

CountSavory_0_45_3 = {
    "name": "CountSavory_0_45_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_45_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response in ["ham sandwich", "beef jerky"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_45_3)

CountSavory_0_46_0 = {
    "name": "CountSavory_0_46_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_46_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_46_0)

CountSavory_0_46_1 = {
    "name": "CountSavory_0_46_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_46_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_46_1)

CountSavory_0_46_2 = {
    "name": "CountSavory_0_46_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_46_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_46_2)

CountSavory_0_46_3 = {
    "name": "CountSavory_0_46_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_46_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_46_3)

CountSavory_0_47_0 = {
    "name": "CountSavory_0_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_47_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_47_0)

CountSavory_0_47_1 = {
    "name": "CountSavory_0_47_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_47_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_47_1)

CountSavory_0_47_2 = {
    "name": "CountSavory_0_47_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_47_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_47_2)

CountSavory_0_47_3 = {
    "name": "CountSavory_0_47_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_47_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_47_3)

CountSavory_0_48_0 = {
    "name": "CountSavory_0_48_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_48_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_48_0)

CountSavory_0_48_1 = {
    "name": "CountSavory_0_48_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_48_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_48_1)

CountSavory_0_48_2 = {
    "name": "CountSavory_0_48_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_48_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_48_2)

CountSavory_0_48_3 = {
    "name": "CountSavory_0_48_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_48_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
        if response != "cupcake":
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_48_3)

CountSavory_0_49_0 = {
    "name": "CountSavory_0_49_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_49_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_49_0)

CountSavory_0_49_1 = {
    "name": "CountSavory_0_49_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_49_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_49_1)

CountSavory_0_49_2 = {
    "name": "CountSavory_0_49_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_49_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_49_2)

CountSavory_0_49_3 = {
    "name": "CountSavory_0_49_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_0_49_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_0_49_3)

CountSavory_1_0_0 = {
    "name": "CountSavory_1_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_0_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_0_0)

CountSavory_1_0_1 = {
    "name": "CountSavory_1_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_0_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_0_1)

CountSavory_1_0_2 = {
    "name": "CountSavory_1_0_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_0_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_0_2)

CountSavory_1_0_3 = {
    "name": "CountSavory_1_0_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_0_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_0_3)

CountSavory_1_1_0 = {
    "name": "CountSavory_1_1_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_1_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_1_0)

CountSavory_1_1_1 = {
    "name": "CountSavory_1_1_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_1_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_1_1)

CountSavory_1_1_2 = {
    "name": "CountSavory_1_1_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_1_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_1_2)

CountSavory_1_1_3 = {
    "name": "CountSavory_1_1_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_1_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_1_3)

CountSavory_1_2_0 = {
    "name": "CountSavory_1_2_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_2_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_2_0)

CountSavory_1_2_1 = {
    "name": "CountSavory_1_2_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_2_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_2_1)

CountSavory_1_2_2 = {
    "name": "CountSavory_1_2_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_2_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_2_2)

CountSavory_1_2_3 = {
    "name": "CountSavory_1_2_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_2_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_2_3)

CountSavory_1_3_0 = {
    "name": "CountSavory_1_3_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_3_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_3_0)

CountSavory_1_3_1 = {
    "name": "CountSavory_1_3_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_3_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_3_1)

CountSavory_1_3_2 = {
    "name": "CountSavory_1_3_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_3_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_3_2)

CountSavory_1_3_3 = {
    "name": "CountSavory_1_3_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_3_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_3_3)

CountSavory_1_4_0 = {
    "name": "CountSavory_1_4_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_4_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_4_0)

CountSavory_1_4_1 = {
    "name": "CountSavory_1_4_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_4_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_4_1)

CountSavory_1_4_2 = {
    "name": "CountSavory_1_4_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_4_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_4_2)

CountSavory_1_4_3 = {
    "name": "CountSavory_1_4_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_4_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_4_3)

CountSavory_1_5_0 = {
    "name": "CountSavory_1_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_5_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_5_0)

CountSavory_1_5_1 = {
    "name": "CountSavory_1_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_5_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_5_1)

CountSavory_1_5_2 = {
    "name": "CountSavory_1_5_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_5_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_5_2)

CountSavory_1_5_3 = {
    "name": "CountSavory_1_5_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_5_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_5_3)

CountSavory_1_6_0 = {
    "name": "CountSavory_1_6_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 savory options chosen /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_6_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options chosen")

"""

ordered_field_buffer.append(CountSavory_1_6_0)

CountSavory_1_6_1 = {
    "name": "CountSavory_1_6_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options chosen /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_6_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options chosen")

"""

ordered_field_buffer.append(CountSavory_1_6_1)

CountSavory_1_6_2 = {
    "name": "CountSavory_1_6_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 savory options chosen /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_6_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options chosen")

"""

ordered_field_buffer.append(CountSavory_1_6_2)

CountSavory_1_6_3 = {
    "name": "CountSavory_1_6_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options chosen /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_6_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options chosen")

"""

ordered_field_buffer.append(CountSavory_1_6_3)

CountSavory_1_7_0 = {
    "name": "CountSavory_1_7_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_7_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_7_0)

CountSavory_1_7_1 = {
    "name": "CountSavory_1_7_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_7_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_7_1)

CountSavory_1_7_2 = {
    "name": "CountSavory_1_7_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_7_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_7_2)

CountSavory_1_7_3 = {
    "name": "CountSavory_1_7_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_7_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_7_3)

CountSavory_1_8_0 = {
    "name": "CountSavory_1_8_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_8_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_8_0)

CountSavory_1_8_1 = {
    "name": "CountSavory_1_8_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_8_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_8_1)

CountSavory_1_8_2 = {
    "name": "CountSavory_1_8_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_8_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_8_2)

CountSavory_1_8_3 = {
    "name": "CountSavory_1_8_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_8_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_8_3)

CountSavory_1_9_0 = {
    "name": "CountSavory_1_9_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of savory snacks selected: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_9_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say("Number of savory snacks selected: " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_1_9_0)

CountSavory_1_9_1 = {
    "name": "CountSavory_1_9_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of savory snacks selected: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_9_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say("Number of savory snacks selected: " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_1_9_1)

CountSavory_1_9_2 = {
    "name": "CountSavory_1_9_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of savory snacks selected: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_9_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say("Number of savory snacks selected: " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_1_9_2)

CountSavory_1_9_3 = {
    "name": "CountSavory_1_9_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of savory snacks selected: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_9_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say("Number of savory snacks selected: " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_1_9_3)

CountSavory_1_10_0 = {
    "name": "CountSavory_1_10_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_10_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_10_0)

CountSavory_1_10_1 = {
    "name": "CountSavory_1_10_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_10_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_10_1)

CountSavory_1_10_2 = {
    "name": "CountSavory_1_10_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_10_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_10_2)

CountSavory_1_10_3 = {
    "name": "CountSavory_1_10_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_10_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_10_3)

CountSavory_1_11_0 = {
    "name": "CountSavory_1_11_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_11_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_11_0)

CountSavory_1_11_1 = {
    "name": "CountSavory_1_11_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_11_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_11_1)

CountSavory_1_11_2 = {
    "name": "CountSavory_1_11_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_11_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_11_2)

CountSavory_1_11_3 = {
    "name": "CountSavory_1_11_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_11_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_11_3)

CountSavory_1_12_0 = {
    "name": "CountSavory_1_12_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_12_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_12_0)

CountSavory_1_12_1 = {
    "name": "CountSavory_1_12_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_12_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_12_1)

CountSavory_1_12_2 = {
    "name": "CountSavory_1_12_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_12_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_12_2)

CountSavory_1_12_3 = {
    "name": "CountSavory_1_12_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_12_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_12_3)

CountSavory_1_13_0 = {
    "name": "CountSavory_1_13_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_13_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_13_0)

CountSavory_1_13_1 = {
    "name": "CountSavory_1_13_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_13_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_13_1)

CountSavory_1_13_2 = {
    "name": "CountSavory_1_13_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_13_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_13_2)

CountSavory_1_13_3 = {
    "name": "CountSavory_1_13_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_13_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_13_3)

CountSavory_1_14_0 = {
    "name": "CountSavory_1_14_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of savory options selected: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_14_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "donut" or response == "beef jerky":
                num_savory += 1
    go_to(start_loc)
    say("Number of savory options selected: " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_1_14_0)

CountSavory_1_14_1 = {
    "name": "CountSavory_1_14_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of savory options selected: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_14_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "donut" or response == "beef jerky":
                num_savory += 1
    go_to(start_loc)
    say("Number of savory options selected: " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_1_14_1)

CountSavory_1_14_2 = {
    "name": "CountSavory_1_14_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of savory options selected: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_14_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "donut" or response == "beef jerky":
                num_savory += 1
    go_to(start_loc)
    say("Number of savory options selected: " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_1_14_2)

CountSavory_1_14_3 = {
    "name": "CountSavory_1_14_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the options of cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ number of savory options selected: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_14_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the options of cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response == "ham sandwich" or response == "donut" or response == "beef jerky":
                num_savory += 1
    go_to(start_loc)
    say("Number of savory options selected: " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_1_14_3)

CountSavory_1_15_0 = {
    "name": "CountSavory_1_15_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_15_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_15_0)

CountSavory_1_15_1 = {
    "name": "CountSavory_1_15_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_15_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_15_1)

CountSavory_1_15_2 = {
    "name": "CountSavory_1_15_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_15_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_15_2)

CountSavory_1_15_3 = {
    "name": "CountSavory_1_15_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_15_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_15_3)

CountSavory_1_16_0 = {
    "name": "CountSavory_1_16_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_16_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_16_0)

CountSavory_1_16_1 = {
    "name": "CountSavory_1_16_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_16_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_16_1)

CountSavory_1_16_2 = {
    "name": "CountSavory_1_16_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_16_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_16_2)

CountSavory_1_16_3 = {
    "name": "CountSavory_1_16_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_16_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_16_3)

CountSavory_1_17_0 = {
    "name": "CountSavory_1_17_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_17_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_17_0)

CountSavory_1_17_1 = {
    "name": "CountSavory_1_17_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_17_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_17_1)

CountSavory_1_17_2 = {
    "name": "CountSavory_1_17_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_17_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_17_2)

CountSavory_1_17_3 = {
    "name": "CountSavory_1_17_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_17_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_17_3)

CountSavory_1_18_0 = {
    "name": "CountSavory_1_18_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_18_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_18_0)

CountSavory_1_18_1 = {
    "name": "CountSavory_1_18_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_18_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_18_1)

CountSavory_1_18_2 = {
    "name": "CountSavory_1_18_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_18_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_18_2)

CountSavory_1_18_3 = {
    "name": "CountSavory_1_18_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_18_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_18_3)

CountSavory_1_19_0 = {
    "name": "CountSavory_1_19_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_19_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_19_0)

CountSavory_1_19_1 = {
    "name": "CountSavory_1_19_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_19_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_19_1)

CountSavory_1_19_2 = {
    "name": "CountSavory_1_19_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_19_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_19_2)

CountSavory_1_19_3 = {
    "name": "CountSavory_1_19_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_19_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_19_3)

CountSavory_1_20_0 = {
    "name": "CountSavory_1_20_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_20_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_20_0)

CountSavory_1_20_1 = {
    "name": "CountSavory_1_20_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_20_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_20_1)

CountSavory_1_20_2 = {
    "name": "CountSavory_1_20_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_20_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_20_2)

CountSavory_1_20_3 = {
    "name": "CountSavory_1_20_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_20_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_20_3)

CountSavory_1_21_0 = {
    "name": "CountSavory_1_21_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_21_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say("There were " + str(num_savory) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_21_0)

CountSavory_1_21_1 = {
    "name": "CountSavory_1_21_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_21_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say("There were " + str(num_savory) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_21_1)

CountSavory_1_21_2 = {
    "name": "CountSavory_1_21_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_21_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say("There were " + str(num_savory) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_21_2)

CountSavory_1_21_3 = {
    "name": "CountSavory_1_21_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_21_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say("There were " + str(num_savory) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_21_3)

CountSavory_1_22_0 = {
    "name": "CountSavory_1_22_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_22_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_22_0)

CountSavory_1_22_1 = {
    "name": "CountSavory_1_22_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_22_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_22_1)

CountSavory_1_22_2 = {
    "name": "CountSavory_1_22_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_22_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_22_2)

CountSavory_1_22_3 = {
    "name": "CountSavory_1_22_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_22_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_22_3)

CountSavory_1_23_0 = {
    "name": "CountSavory_1_23_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_23_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_23_0)

CountSavory_1_23_1 = {
    "name": "CountSavory_1_23_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_23_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_23_1)

CountSavory_1_23_2 = {
    "name": "CountSavory_1_23_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_23_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_23_2)

CountSavory_1_23_3 = {
    "name": "CountSavory_1_23_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_23_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_23_3)

CountSavory_1_24_0 = {
    "name": "CountSavory_1_24_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_24_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_24_0)

CountSavory_1_24_1 = {
    "name": "CountSavory_1_24_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_24_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_24_1)

CountSavory_1_24_2 = {
    "name": "CountSavory_1_24_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_24_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_24_2)

CountSavory_1_24_3 = {
    "name": "CountSavory_1_24_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_24_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_24_3)

CountSavory_1_25_0 = {
    "name": "CountSavory_1_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_25_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_25_0)

CountSavory_1_25_1 = {
    "name": "CountSavory_1_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_25_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_25_1)

CountSavory_1_25_2 = {
    "name": "CountSavory_1_25_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_25_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_25_2)

CountSavory_1_25_3 = {
    "name": "CountSavory_1_25_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_25_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_25_3)

CountSavory_1_26_0 = {
    "name": "CountSavory_1_26_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_26_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_26_0)

CountSavory_1_26_1 = {
    "name": "CountSavory_1_26_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_26_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_26_1)

CountSavory_1_26_2 = {
    "name": "CountSavory_1_26_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_26_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_26_2)

CountSavory_1_26_3 = {
    "name": "CountSavory_1_26_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_26_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_26_3)

CountSavory_1_27_0 = {
    "name": "CountSavory_1_27_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_27_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))

"""

ordered_field_buffer.append(CountSavory_1_27_0)

CountSavory_1_27_1 = {
    "name": "CountSavory_1_27_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_27_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))

"""

ordered_field_buffer.append(CountSavory_1_27_1)

CountSavory_1_27_2 = {
    "name": "CountSavory_1_27_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_27_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))

"""

ordered_field_buffer.append(CountSavory_1_27_2)

CountSavory_1_27_3 = {
    "name": "CountSavory_1_27_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_27_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))

"""

ordered_field_buffer.append(CountSavory_1_27_3)

CountSavory_1_28_0 = {
    "name": "CountSavory_1_28_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_28_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_28_0)

CountSavory_1_28_1 = {
    "name": "CountSavory_1_28_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_28_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_28_1)

CountSavory_1_28_2 = {
    "name": "CountSavory_1_28_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_28_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_28_2)

CountSavory_1_28_3 = {
    "name": "CountSavory_1_28_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_28_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_28_3)

CountSavory_1_29_0 = {
    "name": "CountSavory_1_29_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_29_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_29_0)

CountSavory_1_29_1 = {
    "name": "CountSavory_1_29_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_29_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_29_1)

CountSavory_1_29_2 = {
    "name": "CountSavory_1_29_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_29_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_29_2)

CountSavory_1_29_3 = {
    "name": "CountSavory_1_29_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_29_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_29_3)

CountSavory_1_30_0 = {
    "name": "CountSavory_1_30_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_30_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_30_0)

CountSavory_1_30_1 = {
    "name": "CountSavory_1_30_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_30_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_30_1)

CountSavory_1_30_2 = {
    "name": "CountSavory_1_30_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_30_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_30_2)

CountSavory_1_30_3 = {
    "name": "CountSavory_1_30_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_30_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_30_3)

CountSavory_1_31_0 = {
    "name": "CountSavory_1_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_31_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_31_0)

CountSavory_1_31_1 = {
    "name": "CountSavory_1_31_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_31_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_31_1)

CountSavory_1_31_2 = {
    "name": "CountSavory_1_31_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_31_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_31_2)

CountSavory_1_31_3 = {
    "name": "CountSavory_1_31_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_31_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_31_3)

CountSavory_1_32_0 = {
    "name": "CountSavory_1_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_32_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_32_0)

CountSavory_1_32_1 = {
    "name": "CountSavory_1_32_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_32_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_32_1)

CountSavory_1_32_2 = {
    "name": "CountSavory_1_32_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_32_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_32_2)

CountSavory_1_32_3 = {
    "name": "CountSavory_1_32_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_32_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_32_3)

CountSavory_1_33_0 = {
    "name": "CountSavory_1_33_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_33_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_33_0)

CountSavory_1_33_1 = {
    "name": "CountSavory_1_33_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_33_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_33_1)

CountSavory_1_33_2 = {
    "name": "CountSavory_1_33_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_33_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_33_2)

CountSavory_1_33_3 = {
    "name": "CountSavory_1_33_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_33_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_33_3)

CountSavory_1_34_0 = {
    "name": "CountSavory_1_34_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_34_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_34_0)

CountSavory_1_34_1 = {
    "name": "CountSavory_1_34_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_34_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_34_1)

CountSavory_1_34_2 = {
    "name": "CountSavory_1_34_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_34_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_34_2)

CountSavory_1_34_3 = {
    "name": "CountSavory_1_34_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_34_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_34_3)

CountSavory_1_35_0 = {
    "name": "CountSavory_1_35_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_35_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_35_0)

CountSavory_1_35_1 = {
    "name": "CountSavory_1_35_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_35_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_35_1)

CountSavory_1_35_2 = {
    "name": "CountSavory_1_35_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_35_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_35_2)

CountSavory_1_35_3 = {
    "name": "CountSavory_1_35_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_35_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_35_3)

CountSavory_1_36_0 = {
    "name": "CountSavory_1_36_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_36_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_36_0)

CountSavory_1_36_1 = {
    "name": "CountSavory_1_36_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_36_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_36_1)

CountSavory_1_36_2 = {
    "name": "CountSavory_1_36_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_36_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_36_2)

CountSavory_1_36_3 = {
    "name": "CountSavory_1_36_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_36_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_36_3)

CountSavory_1_37_0 = {
    "name": "CountSavory_1_37_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_37_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))

"""

ordered_field_buffer.append(CountSavory_1_37_0)

CountSavory_1_37_1 = {
    "name": "CountSavory_1_37_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_37_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))

"""

ordered_field_buffer.append(CountSavory_1_37_1)

CountSavory_1_37_2 = {
    "name": "CountSavory_1_37_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_37_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))

"""

ordered_field_buffer.append(CountSavory_1_37_2)

CountSavory_1_37_3 = {
    "name": "CountSavory_1_37_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_37_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("{} people chose a savory option".format(savory_count))

"""

ordered_field_buffer.append(CountSavory_1_37_3)

CountSavory_1_38_0 = {
    "name": "CountSavory_1_38_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_38_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_38_0)

CountSavory_1_38_1 = {
    "name": "CountSavory_1_38_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_38_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_38_1)

CountSavory_1_38_2 = {
    "name": "CountSavory_1_38_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_38_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_38_2)

CountSavory_1_38_3 = {
    "name": "CountSavory_1_38_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_38_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_38_3)

CountSavory_1_39_0 = {
    "name": "CountSavory_1_39_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_39_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_39_0)

CountSavory_1_39_1 = {
    "name": "CountSavory_1_39_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_39_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_39_1)

CountSavory_1_39_2 = {
    "name": "CountSavory_1_39_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_39_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_39_2)

CountSavory_1_39_3 = {
    "name": "CountSavory_1_39_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_39_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_39_3)

CountSavory_1_40_0 = {
    "name": "CountSavory_1_40_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_40_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_40_0)

CountSavory_1_40_1 = {
    "name": "CountSavory_1_40_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_40_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_40_1)

CountSavory_1_40_2 = {
    "name": "CountSavory_1_40_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_40_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_40_2)

CountSavory_1_40_3 = {
    "name": "CountSavory_1_40_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_40_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_40_3)

CountSavory_1_41_0 = {
    "name": "CountSavory_1_41_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_41_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_41_0)

CountSavory_1_41_1 = {
    "name": "CountSavory_1_41_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_41_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_41_1)

CountSavory_1_41_2 = {
    "name": "CountSavory_1_41_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_41_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_41_2)

CountSavory_1_41_3 = {
    "name": "CountSavory_1_41_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_41_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_41_3)

CountSavory_1_42_0 = {
    "name": "CountSavory_1_42_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_42_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_42_0)

CountSavory_1_42_1 = {
    "name": "CountSavory_1_42_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_42_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_42_1)

CountSavory_1_42_2 = {
    "name": "CountSavory_1_42_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_42_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_42_2)

CountSavory_1_42_3 = {
    "name": "CountSavory_1_42_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_42_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_42_3)

CountSavory_1_43_0 = {
    "name": "CountSavory_1_43_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_43_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_43_0)

CountSavory_1_43_1 = {
    "name": "CountSavory_1_43_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_43_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_43_1)

CountSavory_1_43_2 = {
    "name": "CountSavory_1_43_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_43_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_43_2)

CountSavory_1_43_3 = {
    "name": "CountSavory_1_43_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_43_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_43_3)

CountSavory_1_44_0 = {
    "name": "CountSavory_1_44_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_44_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_44_0)

CountSavory_1_44_1 = {
    "name": "CountSavory_1_44_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_44_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_44_1)

CountSavory_1_44_2 = {
    "name": "CountSavory_1_44_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_44_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_44_2)

CountSavory_1_44_3 = {
    "name": "CountSavory_1_44_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from the following: cupcake, ham sandwich, donut, or beef jerky /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_44_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from the following: cupcake, ham sandwich, donut, or beef jerky", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_44_3)

CountSavory_1_45_0 = {
    "name": "CountSavory_1_45_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_45_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say("There were " + str(num_savory) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_45_0)

CountSavory_1_45_1 = {
    "name": "CountSavory_1_45_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_45_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say("There were " + str(num_savory) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_45_1)

CountSavory_1_45_2 = {
    "name": "CountSavory_1_45_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_45_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say("There were " + str(num_savory) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_45_2)

CountSavory_1_45_3 = {
    "name": "CountSavory_1_45_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 savory options selected /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_45_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say("There were " + str(num_savory) + " savory options selected")

"""

ordered_field_buffer.append(CountSavory_1_45_3)

CountSavory_1_46_0 = {
    "name": "CountSavory_1_46_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_46_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_46_0)

CountSavory_1_46_1 = {
    "name": "CountSavory_1_46_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_46_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_46_1)

CountSavory_1_46_2 = {
    "name": "CountSavory_1_46_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_46_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_46_2)

CountSavory_1_46_3 = {
    "name": "CountSavory_1_46_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_46_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response in ["ham sandwich", "donut", "beef jerky"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_46_3)

CountSavory_1_47_0 = {
    "name": "CountSavory_1_47_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_47_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))

"""

ordered_field_buffer.append(CountSavory_1_47_0)

CountSavory_1_47_1 = {
    "name": "CountSavory_1_47_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_47_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))

"""

ordered_field_buffer.append(CountSavory_1_47_1)

CountSavory_1_47_2 = {
    "name": "CountSavory_1_47_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_47_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))

"""

ordered_field_buffer.append(CountSavory_1_47_2)

CountSavory_1_47_3 = {
    "name": "CountSavory_1_47_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_47_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("{} people selected a savory option".format(savory_count))

"""

ordered_field_buffer.append(CountSavory_1_47_3)

CountSavory_1_48_0 = {
    "name": "CountSavory_1_48_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_48_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_48_0)

CountSavory_1_48_1 = {
    "name": "CountSavory_1_48_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_48_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_48_1)

CountSavory_1_48_2 = {
    "name": "CountSavory_1_48_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_48_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_48_2)

CountSavory_1_48_3 = {
    "name": "CountSavory_1_48_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ please choose from: cupcake, ham sandwich, donut, or beef jerky. /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_48_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Please choose from: cupcake, ham sandwich, donut, or beef jerky.", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory option")

"""

ordered_field_buffer.append(CountSavory_1_48_3)

CountSavory_1_49_0 = {
    "name": "CountSavory_1_49_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_49_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_49_0)

CountSavory_1_49_1 = {
    "name": "CountSavory_1_49_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_49_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_49_1)

CountSavory_1_49_2 = {
    "name": "CountSavory_1_49_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_49_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_49_2)

CountSavory_1_49_3 = {
    "name": "CountSavory_1_49_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a cupcake, ham sandwich, donut, or beef jerky? /$@!/ ['cupcake', 'ham sandwich', 'donut', 'beef jerky']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people selected a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_1_49_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a cupcake, ham sandwich, donut, or beef jerky?", ["cupcake", "ham sandwich", "donut", "beef jerky"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people selected a savory option")

"""

ordered_field_buffer.append(CountSavory_1_49_3)

CountSavory_2_0_0 = {
    "name": "CountSavory_2_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who chose a savory item is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_0_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of people who chose a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_0_0)

CountSavory_2_0_1 = {
    "name": "CountSavory_2_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who chose a savory item is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_0_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of people who chose a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_0_1)

CountSavory_2_0_2 = {
    "name": "CountSavory_2_0_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who chose a savory item is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_0_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of people who chose a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_0_2)

CountSavory_2_0_3 = {
    "name": "CountSavory_2_0_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who chose a savory item is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_0_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of people who chose a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_0_3)

CountSavory_2_1_0 = {
    "name": "CountSavory_2_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ savory_count: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_1_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("savory_count: " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_1_0)

CountSavory_2_1_1 = {
    "name": "CountSavory_2_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ savory_count: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_1_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("savory_count: " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_1_1)

CountSavory_2_1_2 = {
    "name": "CountSavory_2_1_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ savory_count: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_1_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("savory_count: " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_1_2)

CountSavory_2_1_3 = {
    "name": "CountSavory_2_1_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ savory_count: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_1_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("savory_count: " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_1_3)

CountSavory_2_2_0 = {
    "name": "CountSavory_2_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_2_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_2_0)

CountSavory_2_2_1 = {
    "name": "CountSavory_2_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_2_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_2_1)

CountSavory_2_2_2 = {
    "name": "CountSavory_2_2_2",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_2_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_2_2)

CountSavory_2_2_3 = {
    "name": "CountSavory_2_2_3",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_2_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_2_3)

CountSavory_2_3_0 = {
    "name": "CountSavory_2_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_3_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_3_0)

CountSavory_2_3_1 = {
    "name": "CountSavory_2_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_3_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_3_1)

CountSavory_2_3_2 = {
    "name": "CountSavory_2_3_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_3_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_3_2)

CountSavory_2_3_3 = {
    "name": "CountSavory_2_3_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_3_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_3_3)

CountSavory_2_4_0 = {
    "name": "CountSavory_2_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ savory_count: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_4_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("savory_count: " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_4_0)

CountSavory_2_4_1 = {
    "name": "CountSavory_2_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ savory_count: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_4_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("savory_count: " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_4_1)

CountSavory_2_4_2 = {
    "name": "CountSavory_2_4_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ savory_count: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_4_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("savory_count: " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_4_2)

CountSavory_2_4_3 = {
    "name": "CountSavory_2_4_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ savory_count: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_4_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("savory_count: " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_4_3)

CountSavory_2_5_0 = {
    "name": "CountSavory_2_5_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_5_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("The number of savory selections is " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_2_5_0)

CountSavory_2_5_1 = {
    "name": "CountSavory_2_5_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_5_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("The number of savory selections is " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_2_5_1)

CountSavory_2_5_2 = {
    "name": "CountSavory_2_5_2",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_5_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("The number of savory selections is " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_2_5_2)

CountSavory_2_5_3 = {
    "name": "CountSavory_2_5_3",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_5_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("The number of savory selections is " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_2_5_3)

CountSavory_2_6_0 = {
    "name": "CountSavory_2_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_6_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_6_0)

CountSavory_2_6_1 = {
    "name": "CountSavory_2_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_6_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_6_1)

CountSavory_2_6_2 = {
    "name": "CountSavory_2_6_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_6_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_6_2)

CountSavory_2_6_3 = {
    "name": "CountSavory_2_6_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_6_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_6_3)

CountSavory_2_7_0 = {
    "name": "CountSavory_2_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "Say /$@!/ 0 people prefered a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_7_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    say(str(num_savory) + " people prefered a savory item")

"""

ordered_field_buffer.append(CountSavory_2_7_0)

CountSavory_2_7_1 = {
    "name": "CountSavory_2_7_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "Say /$@!/ 2 people prefered a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_7_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    say(str(num_savory) + " people prefered a savory item")

"""

ordered_field_buffer.append(CountSavory_2_7_1)

CountSavory_2_7_2 = {
    "name": "CountSavory_2_7_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Say /$@!/ 1 people prefered a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_7_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    say(str(num_savory) + " people prefered a savory item")

"""

ordered_field_buffer.append(CountSavory_2_7_2)

CountSavory_2_7_3 = {
    "name": "CountSavory_2_7_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "Say /$@!/ 3 people prefered a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_7_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    say(str(num_savory) + " people prefered a savory item")

"""

ordered_field_buffer.append(CountSavory_2_7_3)

CountSavory_2_8_0 = {
    "name": "CountSavory_2_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_8_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_8_0)

CountSavory_2_8_1 = {
    "name": "CountSavory_2_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_8_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_8_1)

CountSavory_2_8_2 = {
    "name": "CountSavory_2_8_2",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_8_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_8_2)

CountSavory_2_8_3 = {
    "name": "CountSavory_2_8_3",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_8_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_8_3)

CountSavory_2_9_0 = {
    "name": "CountSavory_2_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_9_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_9_0)

CountSavory_2_9_1 = {
    "name": "CountSavory_2_9_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_9_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_9_1)

CountSavory_2_9_2 = {
    "name": "CountSavory_2_9_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_9_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_9_2)

CountSavory_2_9_3 = {
    "name": "CountSavory_2_9_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_9_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_9_3)

CountSavory_2_10_0 = {
    "name": "CountSavory_2_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ savory_count: 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_10_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("savory_count: " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_10_0)

CountSavory_2_10_1 = {
    "name": "CountSavory_2_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ savory_count: 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_10_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("savory_count: " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_10_1)

CountSavory_2_10_2 = {
    "name": "CountSavory_2_10_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ savory_count: 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_10_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("savory_count: " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_10_2)

CountSavory_2_10_3 = {
    "name": "CountSavory_2_10_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ savory_count: 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_10_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("savory_count: " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_10_3)

CountSavory_2_11_0 = {
    "name": "CountSavory_2_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_11_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_11_0)

CountSavory_2_11_1 = {
    "name": "CountSavory_2_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_11_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_11_1)

CountSavory_2_11_2 = {
    "name": "CountSavory_2_11_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_11_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_11_2)

CountSavory_2_11_3 = {
    "name": "CountSavory_2_11_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_11_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_11_3)

CountSavory_2_12_0 = {
    "name": "CountSavory_2_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory snacks requested is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_12_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory snacks requested is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_12_0)

CountSavory_2_12_1 = {
    "name": "CountSavory_2_12_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory snacks requested is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_12_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory snacks requested is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_12_1)

CountSavory_2_12_2 = {
    "name": "CountSavory_2_12_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory snacks requested is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_12_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory snacks requested is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_12_2)

CountSavory_2_12_3 = {
    "name": "CountSavory_2_12_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory snacks requested is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_12_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory snacks requested is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_12_3)

CountSavory_2_13_0 = {
    "name": "CountSavory_2_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_13_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of savory items is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_13_0)

CountSavory_2_13_1 = {
    "name": "CountSavory_2_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_13_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of savory items is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_13_1)

CountSavory_2_13_2 = {
    "name": "CountSavory_2_13_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_13_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of savory items is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_13_2)

CountSavory_2_13_3 = {
    "name": "CountSavory_2_13_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_13_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of savory items is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_13_3)

CountSavory_2_14_0 = {
    "name": "CountSavory_2_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_14_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_14_0)

CountSavory_2_14_1 = {
    "name": "CountSavory_2_14_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_14_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_14_1)

CountSavory_2_14_2 = {
    "name": "CountSavory_2_14_2",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_14_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_14_2)

CountSavory_2_14_3 = {
    "name": "CountSavory_2_14_3",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_14_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_14_3)

CountSavory_2_15_0 = {
    "name": "CountSavory_2_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer savory foods /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_15_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory foods")

"""

ordered_field_buffer.append(CountSavory_2_15_0)

CountSavory_2_15_1 = {
    "name": "CountSavory_2_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer savory foods /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_15_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory foods")

"""

ordered_field_buffer.append(CountSavory_2_15_1)

CountSavory_2_15_2 = {
    "name": "CountSavory_2_15_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer savory foods /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_15_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory foods")

"""

ordered_field_buffer.append(CountSavory_2_15_2)

CountSavory_2_15_3 = {
    "name": "CountSavory_2_15_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer savory foods /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_15_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory foods")

"""

ordered_field_buffer.append(CountSavory_2_15_3)

CountSavory_2_16_0 = {
    "name": "CountSavory_2_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory snacks requested is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_16_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory snacks requested is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_16_0)

CountSavory_2_16_1 = {
    "name": "CountSavory_2_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory snacks requested is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_16_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory snacks requested is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_16_1)

CountSavory_2_16_2 = {
    "name": "CountSavory_2_16_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory snacks requested is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_16_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory snacks requested is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_16_2)

CountSavory_2_16_3 = {
    "name": "CountSavory_2_16_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory snacks requested is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_16_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory snacks requested is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_16_3)

CountSavory_2_17_0 = {
    "name": "CountSavory_2_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_17_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("There are " + str(num_savory) + " people who prefer a savory item")

"""

ordered_field_buffer.append(CountSavory_2_17_0)

CountSavory_2_17_1 = {
    "name": "CountSavory_2_17_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_17_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("There are " + str(num_savory) + " people who prefer a savory item")

"""

ordered_field_buffer.append(CountSavory_2_17_1)

CountSavory_2_17_2 = {
    "name": "CountSavory_2_17_2",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_17_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("There are " + str(num_savory) + " people who prefer a savory item")

"""

ordered_field_buffer.append(CountSavory_2_17_2)

CountSavory_2_17_3 = {
    "name": "CountSavory_2_17_3",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_17_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("There are " + str(num_savory) + " people who prefer a savory item")

"""

ordered_field_buffer.append(CountSavory_2_17_3)

CountSavory_2_18_0 = {
    "name": "CountSavory_2_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "Say /$@!/ the number of people who prefer a savory item is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_18_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
            if response == "Beef jerky" or response == "Ham sandwich":
                savory_count += 1
    say("The number of people who prefer a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_18_0)

CountSavory_2_18_1 = {
    "name": "CountSavory_2_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "Say /$@!/ the number of people who prefer a savory item is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_18_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
            if response == "Beef jerky" or response == "Ham sandwich":
                savory_count += 1
    say("The number of people who prefer a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_18_1)

CountSavory_2_18_2 = {
    "name": "CountSavory_2_18_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Say /$@!/ the number of people who prefer a savory item is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_18_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
            if response == "Beef jerky" or response == "Ham sandwich":
                savory_count += 1
    say("The number of people who prefer a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_18_2)

CountSavory_2_18_3 = {
    "name": "CountSavory_2_18_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "Say /$@!/ the number of people who prefer a savory item is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_18_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
            if response == "Beef jerky" or response == "Ham sandwich":
                savory_count += 1
    say("The number of people who prefer a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_18_3)

CountSavory_2_19_0 = {
    "name": "CountSavory_2_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_19_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_19_0)

CountSavory_2_19_1 = {
    "name": "CountSavory_2_19_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_19_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_19_1)

CountSavory_2_19_2 = {
    "name": "CountSavory_2_19_2",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_19_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_19_2)

CountSavory_2_19_3 = {
    "name": "CountSavory_2_19_3",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_19_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_19_3)

CountSavory_2_20_0 = {
    "name": "CountSavory_2_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_20_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_20_0)

CountSavory_2_20_1 = {
    "name": "CountSavory_2_20_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_20_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_20_1)

CountSavory_2_20_2 = {
    "name": "CountSavory_2_20_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_20_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_20_2)

CountSavory_2_20_3 = {
    "name": "CountSavory_2_20_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_20_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_20_3)

CountSavory_2_21_0 = {
    "name": "CountSavory_2_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_21_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to(start_loc)
    say("There are " + str(num_savory) + " people who prefer a savory item")

"""

ordered_field_buffer.append(CountSavory_2_21_0)

CountSavory_2_21_1 = {
    "name": "CountSavory_2_21_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_21_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to(start_loc)
    say("There are " + str(num_savory) + " people who prefer a savory item")

"""

ordered_field_buffer.append(CountSavory_2_21_1)

CountSavory_2_21_2 = {
    "name": "CountSavory_2_21_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_21_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to(start_loc)
    say("There are " + str(num_savory) + " people who prefer a savory item")

"""

ordered_field_buffer.append(CountSavory_2_21_2)

CountSavory_2_21_3 = {
    "name": "CountSavory_2_21_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_21_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to(start_loc)
    say("There are " + str(num_savory) + " people who prefer a savory item")

"""

ordered_field_buffer.append(CountSavory_2_21_3)

CountSavory_2_22_0 = {
    "name": "CountSavory_2_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who prefer a savory item is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_22_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
        go_to(start_loc)
    say("The number of people who prefer a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_22_0)

CountSavory_2_22_1 = {
    "name": "CountSavory_2_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who prefer a savory item is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_22_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
        go_to(start_loc)
    say("The number of people who prefer a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_22_1)

CountSavory_2_22_2 = {
    "name": "CountSavory_2_22_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who prefer a savory item is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_22_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
        go_to(start_loc)
    say("The number of people who prefer a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_22_2)

CountSavory_2_22_3 = {
    "name": "CountSavory_2_22_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who prefer a savory item is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_22_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
        go_to(start_loc)
    say("The number of people who prefer a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_22_3)

CountSavory_2_23_0 = {
    "name": "CountSavory_2_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_23_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_23_0)

CountSavory_2_23_1 = {
    "name": "CountSavory_2_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_23_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_23_1)

CountSavory_2_23_2 = {
    "name": "CountSavory_2_23_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_23_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_23_2)

CountSavory_2_23_3 = {
    "name": "CountSavory_2_23_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_23_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_23_3)

CountSavory_2_24_0 = {
    "name": "CountSavory_2_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_24_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
        if response == "Beef jerky" or response == "Ham sandwich":
            num_savory += 1
    go_to("kitchen")
    say("Number of savory items selected: " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_2_24_0)

CountSavory_2_24_1 = {
    "name": "CountSavory_2_24_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_24_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
        if response == "Beef jerky" or response == "Ham sandwich":
            num_savory += 1
    go_to("kitchen")
    say("Number of savory items selected: " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_2_24_1)

CountSavory_2_24_2 = {
    "name": "CountSavory_2_24_2",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_24_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
        if response == "Beef jerky" or response == "Ham sandwich":
            num_savory += 1
    go_to("kitchen")
    say("Number of savory items selected: " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_2_24_2)

CountSavory_2_24_3 = {
    "name": "CountSavory_2_24_3",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_24_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
        if response == "Beef jerky" or response == "Ham sandwich":
            num_savory += 1
    go_to("kitchen")
    say("Number of savory items selected: " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_2_24_3)

CountSavory_2_25_0 = {
    "name": "CountSavory_2_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who chose a savory item is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_25_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of people who chose a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_25_0)

CountSavory_2_25_1 = {
    "name": "CountSavory_2_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who chose a savory item is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_25_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of people who chose a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_25_1)

CountSavory_2_25_2 = {
    "name": "CountSavory_2_25_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who chose a savory item is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_25_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of people who chose a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_25_2)

CountSavory_2_25_3 = {
    "name": "CountSavory_2_25_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who chose a savory item is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_25_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of people who chose a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_25_3)

CountSavory_2_26_0 = {
    "name": "CountSavory_2_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_26_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_26_0)

CountSavory_2_26_1 = {
    "name": "CountSavory_2_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_26_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_26_1)

CountSavory_2_26_2 = {
    "name": "CountSavory_2_26_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_26_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_26_2)

CountSavory_2_26_3 = {
    "name": "CountSavory_2_26_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_26_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_26_3)

CountSavory_2_27_0 = {
    "name": "CountSavory_2_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_27_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_27_0)

CountSavory_2_27_1 = {
    "name": "CountSavory_2_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_27_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_27_1)

CountSavory_2_27_2 = {
    "name": "CountSavory_2_27_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_27_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_27_2)

CountSavory_2_27_3 = {
    "name": "CountSavory_2_27_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_27_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_27_3)

CountSavory_2_28_0 = {
    "name": "CountSavory_2_28_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_28_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("There are " + str(num_savory) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_28_0)

CountSavory_2_28_1 = {
    "name": "CountSavory_2_28_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_28_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("There are " + str(num_savory) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_28_1)

CountSavory_2_28_2 = {
    "name": "CountSavory_2_28_2",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_28_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("There are " + str(num_savory) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_28_2)

CountSavory_2_28_3 = {
    "name": "CountSavory_2_28_3",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_28_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("There are " + str(num_savory) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_28_3)

CountSavory_2_29_0 = {
    "name": "CountSavory_2_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer savory foods /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_29_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory foods")

"""

ordered_field_buffer.append(CountSavory_2_29_0)

CountSavory_2_29_1 = {
    "name": "CountSavory_2_29_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer savory foods /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_29_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory foods")

"""

ordered_field_buffer.append(CountSavory_2_29_1)

CountSavory_2_29_2 = {
    "name": "CountSavory_2_29_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer savory foods /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_29_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory foods")

"""

ordered_field_buffer.append(CountSavory_2_29_2)

CountSavory_2_29_3 = {
    "name": "CountSavory_2_29_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer savory foods /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_29_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory foods")

"""

ordered_field_buffer.append(CountSavory_2_29_3)

CountSavory_2_30_0 = {
    "name": "CountSavory_2_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_30_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
        if response == "Beef jerky" or response == "Ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_30_0)

CountSavory_2_30_1 = {
    "name": "CountSavory_2_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_30_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
        if response == "Beef jerky" or response == "Ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_30_1)

CountSavory_2_30_2 = {
    "name": "CountSavory_2_30_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_30_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
        if response == "Beef jerky" or response == "Ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_30_2)

CountSavory_2_30_3 = {
    "name": "CountSavory_2_30_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_30_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
        if response == "Beef jerky" or response == "Ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_30_3)

CountSavory_2_31_0 = {
    "name": "CountSavory_2_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_31_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to("kitchen")
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_31_0)

CountSavory_2_31_1 = {
    "name": "CountSavory_2_31_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_31_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to("kitchen")
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_31_1)

CountSavory_2_31_2 = {
    "name": "CountSavory_2_31_2",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_31_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to("kitchen")
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_31_2)

CountSavory_2_31_3 = {
    "name": "CountSavory_2_31_3",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_31_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to("kitchen")
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_31_3)

CountSavory_2_32_0 = {
    "name": "CountSavory_2_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_32_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_32_0)

CountSavory_2_32_1 = {
    "name": "CountSavory_2_32_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_32_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_32_1)

CountSavory_2_32_2 = {
    "name": "CountSavory_2_32_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_32_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_32_2)

CountSavory_2_32_3 = {
    "name": "CountSavory_2_32_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_32_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_32_3)

CountSavory_2_33_0 = {
    "name": "CountSavory_2_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer savory foods /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_33_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory foods")

"""

ordered_field_buffer.append(CountSavory_2_33_0)

CountSavory_2_33_1 = {
    "name": "CountSavory_2_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer savory foods /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_33_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory foods")

"""

ordered_field_buffer.append(CountSavory_2_33_1)

CountSavory_2_33_2 = {
    "name": "CountSavory_2_33_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer savory foods /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_33_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory foods")

"""

ordered_field_buffer.append(CountSavory_2_33_2)

CountSavory_2_33_3 = {
    "name": "CountSavory_2_33_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer savory foods /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_33_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory foods")

"""

ordered_field_buffer.append(CountSavory_2_33_3)

CountSavory_2_34_0 = {
    "name": "CountSavory_2_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "Say /$@!/ 0 people preferred a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_34_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_34_0)

CountSavory_2_34_1 = {
    "name": "CountSavory_2_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "Say /$@!/ 2 people preferred a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_34_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_34_1)

CountSavory_2_34_2 = {
    "name": "CountSavory_2_34_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Say /$@!/ 1 people preferred a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_34_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_34_2)

CountSavory_2_34_3 = {
    "name": "CountSavory_2_34_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer: cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "Say /$@!/ 3 people preferred a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_34_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer: cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_34_3)

CountSavory_2_35_0 = {
    "name": "CountSavory_2_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_35_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_35_0)

CountSavory_2_35_1 = {
    "name": "CountSavory_2_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_35_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_35_1)

CountSavory_2_35_2 = {
    "name": "CountSavory_2_35_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_35_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_35_2)

CountSavory_2_35_3 = {
    "name": "CountSavory_2_35_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_35_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_35_3)

CountSavory_2_36_0 = {
    "name": "CountSavory_2_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_36_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
        if response == "Beef jerky" or response == "Ham sandwich":
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_36_0)

CountSavory_2_36_1 = {
    "name": "CountSavory_2_36_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_36_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
        if response == "Beef jerky" or response == "Ham sandwich":
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_36_1)

CountSavory_2_36_2 = {
    "name": "CountSavory_2_36_2",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_36_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
        if response == "Beef jerky" or response == "Ham sandwich":
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_36_2)

CountSavory_2_36_3 = {
    "name": "CountSavory_2_36_3",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_36_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? Cupcake, donut, beef jerky, or ham sandwich?", ["Cupcake", "Donut", "Beef jerky", "Ham sandwich"])
        if response == "Beef jerky" or response == "Ham sandwich":
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_36_3)

CountSavory_2_37_0 = {
    "name": "CountSavory_2_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_37_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_37_0)

CountSavory_2_37_1 = {
    "name": "CountSavory_2_37_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_37_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_37_1)

CountSavory_2_37_2 = {
    "name": "CountSavory_2_37_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_37_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_37_2)

CountSavory_2_37_3 = {
    "name": "CountSavory_2_37_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_37_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_37_3)

CountSavory_2_38_0 = {
    "name": "CountSavory_2_38_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_38_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_38_0)

CountSavory_2_38_1 = {
    "name": "CountSavory_2_38_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_38_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_38_1)

CountSavory_2_38_2 = {
    "name": "CountSavory_2_38_2",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_38_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_38_2)

CountSavory_2_38_3 = {
    "name": "CountSavory_2_38_3",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_38_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_38_3)

CountSavory_2_39_0 = {
    "name": "CountSavory_2_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_39_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_39_0)

CountSavory_2_39_1 = {
    "name": "CountSavory_2_39_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_39_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_39_1)

CountSavory_2_39_2 = {
    "name": "CountSavory_2_39_2",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_39_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_39_2)

CountSavory_2_39_3 = {
    "name": "CountSavory_2_39_3",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_39_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_39_3)

CountSavory_2_40_0 = {
    "name": "CountSavory_2_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_40_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_40_0)

CountSavory_2_40_1 = {
    "name": "CountSavory_2_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_40_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_40_1)

CountSavory_2_40_2 = {
    "name": "CountSavory_2_40_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_40_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_40_2)

CountSavory_2_40_3 = {
    "name": "CountSavory_2_40_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_40_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_40_3)

CountSavory_2_41_0 = {
    "name": "CountSavory_2_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory snacks requested is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_41_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory snacks requested is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_41_0)

CountSavory_2_41_1 = {
    "name": "CountSavory_2_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory snacks requested is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_41_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory snacks requested is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_41_1)

CountSavory_2_41_2 = {
    "name": "CountSavory_2_41_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory snacks requested is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_41_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory snacks requested is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_41_2)

CountSavory_2_41_3 = {
    "name": "CountSavory_2_41_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory snacks requested is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_41_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of savory snacks requested is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_41_3)

CountSavory_2_42_0 = {
    "name": "CountSavory_2_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people chose a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_42_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_42_0)

CountSavory_2_42_1 = {
    "name": "CountSavory_2_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people chose a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_42_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_42_1)

CountSavory_2_42_2 = {
    "name": "CountSavory_2_42_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people chose a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_42_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_42_2)

CountSavory_2_42_3 = {
    "name": "CountSavory_2_42_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people chose a savory item /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_42_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people chose a savory item")

"""

ordered_field_buffer.append(CountSavory_2_42_3)

CountSavory_2_43_0 = {
    "name": "CountSavory_2_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who chose a savory item is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_43_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of people who chose a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_43_0)

CountSavory_2_43_1 = {
    "name": "CountSavory_2_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who chose a savory item is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_43_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of people who chose a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_43_1)

CountSavory_2_43_2 = {
    "name": "CountSavory_2_43_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who chose a savory item is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_43_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of people who chose a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_43_2)

CountSavory_2_43_3 = {
    "name": "CountSavory_2_43_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who chose a savory item is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_43_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of people who chose a savory item is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_43_3)

CountSavory_2_44_0 = {
    "name": "CountSavory_2_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 0 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_44_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_44_0)

CountSavory_2_44_1 = {
    "name": "CountSavory_2_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 2 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_44_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_44_1)

CountSavory_2_44_2 = {
    "name": "CountSavory_2_44_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 1 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_44_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_44_2)

CountSavory_2_44_3 = {
    "name": "CountSavory_2_44_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there are 3 people who prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_44_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("There are " + str(savory_count) + " people who prefer savory food")

"""

ordered_field_buffer.append(CountSavory_2_44_3)

CountSavory_2_45_0 = {
    "name": "CountSavory_2_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_45_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_45_0)

CountSavory_2_45_1 = {
    "name": "CountSavory_2_45_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_45_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_45_1)

CountSavory_2_45_2 = {
    "name": "CountSavory_2_45_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_45_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_45_2)

CountSavory_2_45_3 = {
    "name": "CountSavory_2_45_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory items selected is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_45_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of savory items selected is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_45_3)

CountSavory_2_46_0 = {
    "name": "CountSavory_2_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory foods chosen is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_46_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of savory foods chosen is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_46_0)

CountSavory_2_46_1 = {
    "name": "CountSavory_2_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory foods chosen is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_46_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of savory foods chosen is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_46_1)

CountSavory_2_46_2 = {
    "name": "CountSavory_2_46_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory foods chosen is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_46_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of savory foods chosen is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_46_2)

CountSavory_2_46_3 = {
    "name": "CountSavory_2_46_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ what would you like to eat? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of savory foods chosen is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_46_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say("The number of savory foods chosen is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_46_3)

CountSavory_2_47_0 = {
    "name": "CountSavory_2_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_47_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("The number of people who prefer a savory item is " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_2_47_0)

CountSavory_2_47_1 = {
    "name": "CountSavory_2_47_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_47_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("The number of people who prefer a savory item is " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_2_47_1)

CountSavory_2_47_2 = {
    "name": "CountSavory_2_47_2",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_47_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("The number of people who prefer a savory item is " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_2_47_2)

CountSavory_2_47_3 = {
    "name": "CountSavory_2_47_3",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_47_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say("The number of people who prefer a savory item is " + str(num_savory))

"""

ordered_field_buffer.append(CountSavory_2_47_3)

CountSavory_2_48_0 = {
    "name": "CountSavory_2_48_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_48_0 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_48_0)

CountSavory_2_48_1 = {
    "name": "CountSavory_2_48_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_48_1 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_48_1)

CountSavory_2_48_2 = {
    "name": "CountSavory_2_48_2",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_48_2 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_48_2)

CountSavory_2_48_3 = {
    "name": "CountSavory_2_48_3",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_CountSavory_2_48_3 = """
def task_program():
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "What would you like to eat?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            num_savory += 1
    go_to("kitchen")
    say(str(num_savory) + " people preferred a savory item")

"""

ordered_field_buffer.append(CountSavory_2_48_3)

CountSavory_2_49_0 = {
    "name": "CountSavory_2_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who prefer savory is 0 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_49_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of people who prefer savory is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_49_0)

CountSavory_2_49_1 = {
    "name": "CountSavory_2_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who prefer savory is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_49_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of people who prefer savory is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_49_1)

CountSavory_2_49_2 = {
    "name": "CountSavory_2_49_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who prefer savory is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_49_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of people who prefer savory is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_49_2)

CountSavory_2_49_3 = {
    "name": "CountSavory_2_49_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ which would you prefer? cupcake, donut, beef jerky, or ham sandwich? /$@!/ ['cupcake', 'donut', 'beef jerky', 'ham sandwich']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the number of people who prefer savory is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_2_49_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Which would you prefer? cupcake, donut, beef jerky, or ham sandwich?", ["cupcake", "donut", "beef jerky", "ham sandwich"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say("The number of people who prefer savory is " + str(savory_count))

"""

ordered_field_buffer.append(CountSavory_2_49_3)

CountSavory_3_0_0 = {
    "name": "CountSavory_3_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_0_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am glad you are not a fan of cupcake")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_0_0)

CountSavory_3_0_1 = {
    "name": "CountSavory_3_0_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_0_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am glad you are not a fan of cupcake")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_0_1)

CountSavory_3_0_2 = {
    "name": "CountSavory_3_0_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_0_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am glad you are not a fan of cupcake")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_0_2)

CountSavory_3_0_3 = {
    "name": "CountSavory_3_0_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_0_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am glad you are not a fan of cupcake")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_0_3)

CountSavory_3_1_0 = {
    "name": "CountSavory_3_1_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in alice's office went for a savory option /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in charlie's office went for a savory option /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_1_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("Person in " + room + " went for a savory option")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_1_0)

CountSavory_3_1_1 = {
    "name": "CountSavory_3_1_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in alice's office went for a savory option /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in bob's office went for a savory option /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in david's office went for a savory option /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_1_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("Person in " + room + " went for a savory option")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_1_1)

CountSavory_3_1_2 = {
    "name": "CountSavory_3_1_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in alice's office went for a savory option /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_1_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("Person in " + room + " went for a savory option")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_1_2)

CountSavory_3_1_3 = {
    "name": "CountSavory_3_1_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in bob's office went for a savory option /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in charlie's office went for a savory option /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in david's office went for a savory option /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_1_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("Person in " + room + " went for a savory option")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_1_3)

CountSavory_3_2_0 = {
    "name": "CountSavory_3_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ you are a cupcake person /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ you are a cupcake person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_2_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I see you are not a cupcake person")
            else:
                say("You are a cupcake person")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_2_0)

CountSavory_3_2_1 = {
    "name": "CountSavory_3_2_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ you are a cupcake person /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_2_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I see you are not a cupcake person")
            else:
                say("You are a cupcake person")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_2_1)

CountSavory_3_2_2 = {
    "name": "CountSavory_3_2_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ you are a cupcake person /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ you are a cupcake person /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_2_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I see you are not a cupcake person")
            else:
                say("You are a cupcake person")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_2_2)

CountSavory_3_2_3 = {
    "name": "CountSavory_3_2_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_2_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I see you are not a cupcake person")
            else:
                say("You are a cupcake person")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_2_3)

CountSavory_3_3_0 = {
    "name": "CountSavory_3_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of donut /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of donut /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_3_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am not a fan of " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_3_0)

CountSavory_3_3_1 = {
    "name": "CountSavory_3_3_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of ham sandwich /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of donut /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of beef jerky /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_3_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am not a fan of " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_3_1)

CountSavory_3_3_2 = {
    "name": "CountSavory_3_3_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of beef jerky /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_3_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am not a fan of " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_3_2)

CountSavory_3_3_3 = {
    "name": "CountSavory_3_3_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of ham sandwich /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of beef jerky /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of ham sandwich /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_3_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am not a fan of " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_3_3)

CountSavory_3_4_0 = {
    "name": "CountSavory_3_4_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_4_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_4_0)

CountSavory_3_4_1 = {
    "name": "CountSavory_3_4_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_4_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_4_1)

CountSavory_3_4_2 = {
    "name": "CountSavory_3_4_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_4_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_4_2)

CountSavory_3_4_3 = {
    "name": "CountSavory_3_4_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_4_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_4_3)

CountSavory_3_5_0 = {
    "name": "CountSavory_3_5_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_5_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_5_0)

CountSavory_3_5_1 = {
    "name": "CountSavory_3_5_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_5_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_5_1)

CountSavory_3_5_2 = {
    "name": "CountSavory_3_5_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_5_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_5_2)

CountSavory_3_5_3 = {
    "name": "CountSavory_3_5_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_5_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_5_3)

CountSavory_3_6_0 = {
    "name": "CountSavory_3_6_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_6_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_6_0)

CountSavory_3_6_1 = {
    "name": "CountSavory_3_6_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_6_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_6_1)

CountSavory_3_6_2 = {
    "name": "CountSavory_3_6_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_6_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_6_2)

CountSavory_3_6_3 = {
    "name": "CountSavory_3_6_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_6_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_6_3)

CountSavory_3_7_0 = {
    "name": "CountSavory_3_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of donut /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of donut /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_7_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am not a fan of " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_7_0)

CountSavory_3_7_1 = {
    "name": "CountSavory_3_7_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of ham sandwich /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of donut /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of beef jerky /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_7_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am not a fan of " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_7_1)

CountSavory_3_7_2 = {
    "name": "CountSavory_3_7_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of beef jerky /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_7_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am not a fan of " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_7_2)

CountSavory_3_7_3 = {
    "name": "CountSavory_3_7_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of ham sandwich /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of beef jerky /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am not a fan of ham sandwich /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_7_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am not a fan of " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_7_3)

CountSavory_3_8_0 = {
    "name": "CountSavory_3_8_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_8_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_8_0)

CountSavory_3_8_1 = {
    "name": "CountSavory_3_8_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like ham sandwich /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like beef jerky /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_8_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_8_1)

CountSavory_3_8_2 = {
    "name": "CountSavory_3_8_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like beef jerky /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_8_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_8_2)

CountSavory_3_8_3 = {
    "name": "CountSavory_3_8_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like ham sandwich /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like beef jerky /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like ham sandwich /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_8_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_8_3)

CountSavory_3_9_0 = {
    "name": "CountSavory_3_9_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_9_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say(str(count_savory) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_9_0)

CountSavory_3_9_1 = {
    "name": "CountSavory_3_9_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_9_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say(str(count_savory) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_9_1)

CountSavory_3_9_2 = {
    "name": "CountSavory_3_9_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_9_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say(str(count_savory) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_9_2)

CountSavory_3_9_3 = {
    "name": "CountSavory_3_9_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_9_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say(str(count_savory) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_9_3)

CountSavory_3_10_0 = {
    "name": "CountSavory_3_10_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_10_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_10_0)

CountSavory_3_10_1 = {
    "name": "CountSavory_3_10_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_10_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_10_1)

CountSavory_3_10_2 = {
    "name": "CountSavory_3_10_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_10_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_10_2)

CountSavory_3_10_3 = {
    "name": "CountSavory_3_10_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_10_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_10_3)

CountSavory_3_11_0 = {
    "name": "CountSavory_3_11_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_11_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory food")

"""

ordered_field_buffer.append(CountSavory_3_11_0)

CountSavory_3_11_1 = {
    "name": "CountSavory_3_11_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_11_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory food")

"""

ordered_field_buffer.append(CountSavory_3_11_1)

CountSavory_3_11_2 = {
    "name": "CountSavory_3_11_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_11_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory food")

"""

ordered_field_buffer.append(CountSavory_3_11_2)

CountSavory_3_11_3 = {
    "name": "CountSavory_3_11_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_11_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory food")

"""

ordered_field_buffer.append(CountSavory_3_11_3)

CountSavory_3_12_0 = {
    "name": "CountSavory_3_12_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_12_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_12_0)

CountSavory_3_12_1 = {
    "name": "CountSavory_3_12_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_12_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_12_1)

CountSavory_3_12_2 = {
    "name": "CountSavory_3_12_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_12_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_12_2)

CountSavory_3_12_3 = {
    "name": "CountSavory_3_12_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_12_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_12_3)

CountSavory_3_13_0 = {
    "name": "CountSavory_3_13_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_13_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like savory food")
    go_to(start_loc)
    say(str(count_of_people) + " people prefer savory food")

"""

ordered_field_buffer.append(CountSavory_3_13_0)

CountSavory_3_13_1 = {
    "name": "CountSavory_3_13_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like savory food /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like savory food /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_13_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like savory food")
    go_to(start_loc)
    say(str(count_of_people) + " people prefer savory food")

"""

ordered_field_buffer.append(CountSavory_3_13_1)

CountSavory_3_13_2 = {
    "name": "CountSavory_3_13_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like savory food /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_13_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like savory food")
    go_to(start_loc)
    say(str(count_of_people) + " people prefer savory food")

"""

ordered_field_buffer.append(CountSavory_3_13_2)

CountSavory_3_13_3 = {
    "name": "CountSavory_3_13_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like savory food /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like savory food /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like savory food /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory food /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_13_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like savory food")
    go_to(start_loc)
    say(str(count_of_people) + " people prefer savory food")

"""

ordered_field_buffer.append(CountSavory_3_13_3)

CountSavory_3_14_0 = {
    "name": "CountSavory_3_14_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_14_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_14_0)

CountSavory_3_14_1 = {
    "name": "CountSavory_3_14_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_14_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_14_1)

CountSavory_3_14_2 = {
    "name": "CountSavory_3_14_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_14_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_14_2)

CountSavory_3_14_3 = {
    "name": "CountSavory_3_14_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_14_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_14_3)

CountSavory_3_15_0 = {
    "name": "CountSavory_3_15_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_15_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_15_0)

CountSavory_3_15_1 = {
    "name": "CountSavory_3_15_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like ham sandwich /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like beef jerky /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_15_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_15_1)

CountSavory_3_15_2 = {
    "name": "CountSavory_3_15_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like beef jerky /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_15_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_15_2)

CountSavory_3_15_3 = {
    "name": "CountSavory_3_15_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like ham sandwich /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like beef jerky /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like ham sandwich /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_15_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_15_3)

CountSavory_3_16_0 = {
    "name": "CountSavory_3_16_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_16_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_16_0)

CountSavory_3_16_1 = {
    "name": "CountSavory_3_16_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_16_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_16_1)

CountSavory_3_16_2 = {
    "name": "CountSavory_3_16_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_16_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_16_2)

CountSavory_3_16_3 = {
    "name": "CountSavory_3_16_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_16_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_16_3)

CountSavory_3_17_0 = {
    "name": "CountSavory_3_17_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in alice's office went for savory option /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in charlie's office went for savory option /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_17_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("person in " + room + " went for savory option")
    go_to(start_loc)
    say(str(count_of_people) + " people went for savory option")

"""

ordered_field_buffer.append(CountSavory_3_17_0)

CountSavory_3_17_1 = {
    "name": "CountSavory_3_17_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in alice's office went for savory option /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in bob's office went for savory option /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in david's office went for savory option /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_17_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("person in " + room + " went for savory option")
    go_to(start_loc)
    say(str(count_of_people) + " people went for savory option")

"""

ordered_field_buffer.append(CountSavory_3_17_1)

CountSavory_3_17_2 = {
    "name": "CountSavory_3_17_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in alice's office went for savory option /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_17_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("person in " + room + " went for savory option")
    go_to(start_loc)
    say(str(count_of_people) + " people went for savory option")

"""

ordered_field_buffer.append(CountSavory_3_17_2)

CountSavory_3_17_3 = {
    "name": "CountSavory_3_17_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in bob's office went for savory option /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in charlie's office went for savory option /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in david's office went for savory option /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_17_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("person in " + room + " went for savory option")
    go_to(start_loc)
    say(str(count_of_people) + " people went for savory option")

"""

ordered_field_buffer.append(CountSavory_3_17_3)

CountSavory_3_18_0 = {
    "name": "CountSavory_3_18_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_18_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_18_0)

CountSavory_3_18_1 = {
    "name": "CountSavory_3_18_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_18_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_18_1)

CountSavory_3_18_2 = {
    "name": "CountSavory_3_18_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_18_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_18_2)

CountSavory_3_18_3 = {
    "name": "CountSavory_3_18_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_18_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_18_3)

CountSavory_3_19_0 = {
    "name": "CountSavory_3_19_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_19_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_19_0)

CountSavory_3_19_1 = {
    "name": "CountSavory_3_19_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_19_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_19_1)

CountSavory_3_19_2 = {
    "name": "CountSavory_3_19_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_19_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_19_2)

CountSavory_3_19_3 = {
    "name": "CountSavory_3_19_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_19_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_19_3)

CountSavory_3_20_0 = {
    "name": "CountSavory_3_20_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ donut /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ donut /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_20_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say(response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_20_0)

CountSavory_3_20_1 = {
    "name": "CountSavory_3_20_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ ham sandwich /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ donut /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ beef jerky /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_20_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say(response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_20_1)

CountSavory_3_20_2 = {
    "name": "CountSavory_3_20_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ beef jerky /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_20_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say(response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_20_2)

CountSavory_3_20_3 = {
    "name": "CountSavory_3_20_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ ham sandwich /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ beef jerky /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ ham sandwich /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_20_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say(response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_20_3)

CountSavory_3_21_0 = {
    "name": "CountSavory_3_21_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_21_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count_savory))

"""

ordered_field_buffer.append(CountSavory_3_21_0)

CountSavory_3_21_1 = {
    "name": "CountSavory_3_21_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_21_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count_savory))

"""

ordered_field_buffer.append(CountSavory_3_21_1)

CountSavory_3_21_2 = {
    "name": "CountSavory_3_21_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_21_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count_savory))

"""

ordered_field_buffer.append(CountSavory_3_21_2)

CountSavory_3_21_3 = {
    "name": "CountSavory_3_21_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_21_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count_savory))

"""

ordered_field_buffer.append(CountSavory_3_21_3)

CountSavory_3_22_0 = {
    "name": "CountSavory_3_22_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_22_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_22_0)

CountSavory_3_22_1 = {
    "name": "CountSavory_3_22_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_22_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_22_1)

CountSavory_3_22_2 = {
    "name": "CountSavory_3_22_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_22_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_22_2)

CountSavory_3_22_3 = {
    "name": "CountSavory_3_22_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_22_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_22_3)

CountSavory_3_23_0 = {
    "name": "CountSavory_3_23_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_23_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_23_0)

CountSavory_3_23_1 = {
    "name": "CountSavory_3_23_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_23_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_23_1)

CountSavory_3_23_2 = {
    "name": "CountSavory_3_23_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_23_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_23_2)

CountSavory_3_23_3 = {
    "name": "CountSavory_3_23_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_23_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_23_3)

CountSavory_3_24_0 = {
    "name": "CountSavory_3_24_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_24_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_24_0)

CountSavory_3_24_1 = {
    "name": "CountSavory_3_24_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_24_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_24_1)

CountSavory_3_24_2 = {
    "name": "CountSavory_3_24_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_24_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_24_2)

CountSavory_3_24_3 = {
    "name": "CountSavory_3_24_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_24_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_24_3)

CountSavory_3_25_0 = {
    "name": "CountSavory_3_25_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_25_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
        go_to(start_loc)
    say(str(count_savory) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_25_0)

CountSavory_3_25_1 = {
    "name": "CountSavory_3_25_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_25_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
        go_to(start_loc)
    say(str(count_savory) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_25_1)

CountSavory_3_25_2 = {
    "name": "CountSavory_3_25_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_25_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
        go_to(start_loc)
    say(str(count_savory) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_25_2)

CountSavory_3_25_3 = {
    "name": "CountSavory_3_25_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_25_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
        go_to(start_loc)
    say(str(count_savory) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_25_3)

CountSavory_3_26_0 = {
    "name": "CountSavory_3_26_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_26_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_26_0)

CountSavory_3_26_1 = {
    "name": "CountSavory_3_26_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_26_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_26_1)

CountSavory_3_26_2 = {
    "name": "CountSavory_3_26_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_26_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_26_2)

CountSavory_3_26_3 = {
    "name": "CountSavory_3_26_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_26_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_26_3)

CountSavory_3_27_0 = {
    "name": "CountSavory_3_27_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 2 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_27_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_27_0)

CountSavory_3_27_1 = {
    "name": "CountSavory_3_27_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_27_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_27_1)

CountSavory_3_27_2 = {
    "name": "CountSavory_3_27_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 1 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_27_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_27_2)

CountSavory_3_27_3 = {
    "name": "CountSavory_3_27_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_27_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count))

"""

ordered_field_buffer.append(CountSavory_3_27_3)

CountSavory_3_28_0 = {
    "name": "CountSavory_3_28_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_28_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_28_0)

CountSavory_3_28_1 = {
    "name": "CountSavory_3_28_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_28_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_28_1)

CountSavory_3_28_2 = {
    "name": "CountSavory_3_28_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_28_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_28_2)

CountSavory_3_28_3 = {
    "name": "CountSavory_3_28_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_28_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_28_3)

CountSavory_3_29_0 = {
    "name": "CountSavory_3_29_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_29_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say(str(count_savory) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_29_0)

CountSavory_3_29_1 = {
    "name": "CountSavory_3_29_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_29_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say(str(count_savory) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_29_1)

CountSavory_3_29_2 = {
    "name": "CountSavory_3_29_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_29_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say(str(count_savory) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_29_2)

CountSavory_3_29_3 = {
    "name": "CountSavory_3_29_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_29_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say(str(count_savory) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_29_3)

CountSavory_3_30_0 = {
    "name": "CountSavory_3_30_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_30_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people preferred savory options")

"""

ordered_field_buffer.append(CountSavory_3_30_0)

CountSavory_3_30_1 = {
    "name": "CountSavory_3_30_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_30_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people preferred savory options")

"""

ordered_field_buffer.append(CountSavory_3_30_1)

CountSavory_3_30_2 = {
    "name": "CountSavory_3_30_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_30_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people preferred savory options")

"""

ordered_field_buffer.append(CountSavory_3_30_2)

CountSavory_3_30_3 = {
    "name": "CountSavory_3_30_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_30_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people preferred savory options")

"""

ordered_field_buffer.append(CountSavory_3_30_3)

CountSavory_3_31_0 = {
    "name": "CountSavory_3_31_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_31_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_31_0)

CountSavory_3_31_1 = {
    "name": "CountSavory_3_31_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_31_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_31_1)

CountSavory_3_31_2 = {
    "name": "CountSavory_3_31_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_31_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_31_2)

CountSavory_3_31_3 = {
    "name": "CountSavory_3_31_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_31_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_31_3)

CountSavory_3_32_0 = {
    "name": "CountSavory_3_32_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_32_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_32_0)

CountSavory_3_32_1 = {
    "name": "CountSavory_3_32_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_32_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_32_1)

CountSavory_3_32_2 = {
    "name": "CountSavory_3_32_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_32_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_32_2)

CountSavory_3_32_3 = {
    "name": "CountSavory_3_32_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_32_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_32_3)

CountSavory_3_33_0 = {
    "name": "CountSavory_3_33_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_33_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_33_0)

CountSavory_3_33_1 = {
    "name": "CountSavory_3_33_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like ham sandwich /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like beef jerky /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_33_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_33_1)

CountSavory_3_33_2 = {
    "name": "CountSavory_3_33_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like beef jerky /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_33_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_33_2)

CountSavory_3_33_3 = {
    "name": "CountSavory_3_33_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like ham sandwich /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like beef jerky /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i like ham sandwich /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_33_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response in ["ham sandwich", "beef jerky"]:
                say("I like " + response)
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_33_3)

CountSavory_3_34_0 = {
    "name": "CountSavory_3_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_34_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I see you are not a cupcake person")
    go_to(start_loc)
    say(str(count_of_people) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_34_0)

CountSavory_3_34_1 = {
    "name": "CountSavory_3_34_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_34_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I see you are not a cupcake person")
    go_to(start_loc)
    say(str(count_of_people) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_34_1)

CountSavory_3_34_2 = {
    "name": "CountSavory_3_34_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_34_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I see you are not a cupcake person")
    go_to(start_loc)
    say(str(count_of_people) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_34_2)

CountSavory_3_34_3 = {
    "name": "CountSavory_3_34_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i see you are not a cupcake person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_34_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I see you are not a cupcake person")
    go_to(start_loc)
    say(str(count_of_people) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_34_3)

CountSavory_3_35_0 = {
    "name": "CountSavory_3_35_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_35_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_35_0)

CountSavory_3_35_1 = {
    "name": "CountSavory_3_35_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_35_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_35_1)

CountSavory_3_35_2 = {
    "name": "CountSavory_3_35_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_35_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_35_2)

CountSavory_3_35_3 = {
    "name": "CountSavory_3_35_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_35_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
        go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_35_3)

CountSavory_3_36_0 = {
    "name": "CountSavory_3_36_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_36_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people preferred savory options")

"""

ordered_field_buffer.append(CountSavory_3_36_0)

CountSavory_3_36_1 = {
    "name": "CountSavory_3_36_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_36_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people preferred savory options")

"""

ordered_field_buffer.append(CountSavory_3_36_1)

CountSavory_3_36_2 = {
    "name": "CountSavory_3_36_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_36_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people preferred savory options")

"""

ordered_field_buffer.append(CountSavory_3_36_2)

CountSavory_3_36_3 = {
    "name": "CountSavory_3_36_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_36_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people preferred savory options")

"""

ordered_field_buffer.append(CountSavory_3_36_3)

CountSavory_3_37_0 = {
    "name": "CountSavory_3_37_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in alice's office went for savory option /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in charlie's office went for savory option /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_37_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("Person in " + room + " went for savory option")
    go_to(start_loc)
    say(str(count_of_people) + " people went for savory option")

"""

ordered_field_buffer.append(CountSavory_3_37_0)

CountSavory_3_37_1 = {
    "name": "CountSavory_3_37_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in alice's office went for savory option /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in bob's office went for savory option /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in david's office went for savory option /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_37_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("Person in " + room + " went for savory option")
    go_to(start_loc)
    say(str(count_of_people) + " people went for savory option")

"""

ordered_field_buffer.append(CountSavory_3_37_1)

CountSavory_3_37_2 = {
    "name": "CountSavory_3_37_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in alice's office went for savory option /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_37_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("Person in " + room + " went for savory option")
    go_to(start_loc)
    say(str(count_of_people) + " people went for savory option")

"""

ordered_field_buffer.append(CountSavory_3_37_2)

CountSavory_3_37_3 = {
    "name": "CountSavory_3_37_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in bob's office went for savory option /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in charlie's office went for savory option /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ person in david's office went for savory option /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_37_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("Person in " + room + " went for savory option")
    go_to(start_loc)
    say(str(count_of_people) + " people went for savory option")

"""

ordered_field_buffer.append(CountSavory_3_37_3)

CountSavory_3_38_0 = {
    "name": "CountSavory_3_38_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_38_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_38_0)

CountSavory_3_38_1 = {
    "name": "CountSavory_3_38_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_38_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_38_1)

CountSavory_3_38_2 = {
    "name": "CountSavory_3_38_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_38_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_38_2)

CountSavory_3_38_3 = {
    "name": "CountSavory_3_38_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_38_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_38_3)

CountSavory_3_39_0 = {
    "name": "CountSavory_3_39_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_39_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
        go_to(start_loc)
    say(str(count_savory) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_39_0)

CountSavory_3_39_1 = {
    "name": "CountSavory_3_39_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_39_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
        go_to(start_loc)
    say(str(count_savory) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_39_1)

CountSavory_3_39_2 = {
    "name": "CountSavory_3_39_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_39_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
        go_to(start_loc)
    say(str(count_savory) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_39_2)

CountSavory_3_39_3 = {
    "name": "CountSavory_3_39_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_39_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
        go_to(start_loc)
    say(str(count_savory) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_39_3)

CountSavory_3_40_0 = {
    "name": "CountSavory_3_40_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_40_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people preferred savory options")

"""

ordered_field_buffer.append(CountSavory_3_40_0)

CountSavory_3_40_1 = {
    "name": "CountSavory_3_40_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_40_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people preferred savory options")

"""

ordered_field_buffer.append(CountSavory_3_40_1)

CountSavory_3_40_2 = {
    "name": "CountSavory_3_40_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_40_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people preferred savory options")

"""

ordered_field_buffer.append(CountSavory_3_40_2)

CountSavory_3_40_3 = {
    "name": "CountSavory_3_40_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_40_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people preferred savory options")

"""

ordered_field_buffer.append(CountSavory_3_40_3)

CountSavory_3_41_0 = {
    "name": "CountSavory_3_41_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you like sweet food /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you like sweet food /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you like sweet food /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you like sweet food /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 4 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_41_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response == "ham sandwich" or response == "beef jerky":
                say("I am glad you like savory food")
            else:
                say("I am glad you like sweet food")
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count_of_people))

"""

ordered_field_buffer.append(CountSavory_3_41_0)

CountSavory_3_41_1 = {
    "name": "CountSavory_3_41_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you like savory food /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you like sweet food /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you like sweet food /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you like savory food /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 4 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_41_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response == "ham sandwich" or response == "beef jerky":
                say("I am glad you like savory food")
            else:
                say("I am glad you like sweet food")
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count_of_people))

"""

ordered_field_buffer.append(CountSavory_3_41_1)

CountSavory_3_41_2 = {
    "name": "CountSavory_3_41_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you like savory food /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you like sweet food /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you like sweet food /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_41_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response == "ham sandwich" or response == "beef jerky":
                say("I am glad you like savory food")
            else:
                say("I am glad you like sweet food")
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count_of_people))

"""

ordered_field_buffer.append(CountSavory_3_41_2)

CountSavory_3_41_3 = {
    "name": "CountSavory_3_41_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you like savory food /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you like savory food /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you like savory food /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ the count of people who went for a savory option is 3 /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_41_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response == "ham sandwich" or response == "beef jerky":
                say("I am glad you like savory food")
            else:
                say("I am glad you like sweet food")
    go_to(start_loc)
    say("The count of people who went for a savory option is " + str(count_of_people))

"""

ordered_field_buffer.append(CountSavory_3_41_3)

CountSavory_3_42_0 = {
    "name": "CountSavory_3_42_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_42_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_42_0)

CountSavory_3_42_1 = {
    "name": "CountSavory_3_42_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_42_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_42_1)

CountSavory_3_42_2 = {
    "name": "CountSavory_3_42_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_42_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_42_2)

CountSavory_3_42_3 = {
    "name": "CountSavory_3_42_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_42_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_42_3)

CountSavory_3_43_0 = {
    "name": "CountSavory_3_43_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_43_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_43_0)

CountSavory_3_43_1 = {
    "name": "CountSavory_3_43_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_43_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_43_1)

CountSavory_3_43_2 = {
    "name": "CountSavory_3_43_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_43_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_43_2)

CountSavory_3_43_3 = {
    "name": "CountSavory_3_43_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_43_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_43_3)

CountSavory_3_44_0 = {
    "name": "CountSavory_3_44_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_44_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_44_0)

CountSavory_3_44_1 = {
    "name": "CountSavory_3_44_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_44_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_44_1)

CountSavory_3_44_2 = {
    "name": "CountSavory_3_44_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_44_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_44_2)

CountSavory_3_44_3 = {
    "name": "CountSavory_3_44_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_44_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_44_3)

CountSavory_3_45_0 = {
    "name": "CountSavory_3_45_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_45_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_45_0)

CountSavory_3_45_1 = {
    "name": "CountSavory_3_45_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_45_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_45_1)

CountSavory_3_45_2 = {
    "name": "CountSavory_3_45_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_45_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_45_2)

CountSavory_3_45_3 = {
    "name": "CountSavory_3_45_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_45_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_45_3)

CountSavory_3_46_0 = {
    "name": "CountSavory_3_46_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_46_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_46_0)

CountSavory_3_46_1 = {
    "name": "CountSavory_3_46_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_46_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_46_1)

CountSavory_3_46_2 = {
    "name": "CountSavory_3_46_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_46_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_46_2)

CountSavory_3_46_3 = {
    "name": "CountSavory_3_46_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_46_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_46_3)

CountSavory_3_47_0 = {
    "name": "CountSavory_3_47_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_47_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_47_0)

CountSavory_3_47_1 = {
    "name": "CountSavory_3_47_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_47_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_47_1)

CountSavory_3_47_2 = {
    "name": "CountSavory_3_47_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_47_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_47_2)

CountSavory_3_47_3 = {
    "name": "CountSavory_3_47_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory options /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_47_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count += 1
    go_to(start_loc)
    say(str(count) + " people prefer savory options")

"""

ordered_field_buffer.append(CountSavory_3_47_3)

CountSavory_3_48_0 = {
    "name": "CountSavory_3_48_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people prefer savory /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_48_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say(str(count_savory) + " people prefer savory")

"""

ordered_field_buffer.append(CountSavory_3_48_0)

CountSavory_3_48_1 = {
    "name": "CountSavory_3_48_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_48_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say(str(count_savory) + " people prefer savory")

"""

ordered_field_buffer.append(CountSavory_3_48_1)

CountSavory_3_48_2 = {
    "name": "CountSavory_3_48_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people prefer savory /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_48_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say(str(count_savory) + " people prefer savory")

"""

ordered_field_buffer.append(CountSavory_3_48_2)

CountSavory_3_48_3 = {
    "name": "CountSavory_3_48_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you prefer cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people prefer savory /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_48_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Do you prefer cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                count_savory += 1
    go_to(start_loc)
    say(str(count_savory) + " people prefer savory")

"""

ordered_field_buffer.append(CountSavory_3_48_3)

CountSavory_3_49_0 = {
    "name": "CountSavory_3_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_49_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am glad you are not a fan of cupcake")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_49_0)

CountSavory_3_49_1 = {
    "name": "CountSavory_3_49_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 4 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_49_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am glad you are not a fan of cupcake")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_49_1)

CountSavory_3_49_2 = {
    "name": "CountSavory_3_49_2",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_49_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am glad you are not a fan of cupcake")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_49_2)

CountSavory_3_49_3 = {
    "name": "CountSavory_3_49_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ do you like cupcake, ham sandwich, beef jerky, or donut? /$@!/ ['cupcake', 'ham sandwich', 'beef jerky', 'donut']",
        "Say /$@!/ i am glad you are not a fan of cupcake /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people went for a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_3_49_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    count_of_people = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            count_of_people += 1
            response = ask("", "Do you like cupcake, ham sandwich, beef jerky, or donut?", ["cupcake", "ham sandwich", "beef jerky", "donut"])
            if response != "cupcake":
                say("I am glad you are not a fan of cupcake")
    go_to(start_loc)
    say(str(count_of_people) + " people went for a savory option")

"""

ordered_field_buffer.append(CountSavory_3_49_3)

CountSavory_4_0_0 = {
    "name": "CountSavory_4_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_0_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_0_0)

CountSavory_4_0_1 = {
    "name": "CountSavory_4_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_0_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_0_1)

CountSavory_4_0_2 = {
    "name": "CountSavory_4_0_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_0_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_0_2)

CountSavory_4_0_3 = {
    "name": "CountSavory_4_0_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_0_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_0_3)

CountSavory_4_1_0 = {
    "name": "CountSavory_4_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_1_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_1_0)

CountSavory_4_1_1 = {
    "name": "CountSavory_4_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_1_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_1_1)

CountSavory_4_1_2 = {
    "name": "CountSavory_4_1_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_1_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_1_2)

CountSavory_4_1_3 = {
    "name": "CountSavory_4_1_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_1_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_1_3)

CountSavory_4_2_0 = {
    "name": "CountSavory_4_2_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_2_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_2_0)

CountSavory_4_2_1 = {
    "name": "CountSavory_4_2_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_2_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_2_1)

CountSavory_4_2_2 = {
    "name": "CountSavory_4_2_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_2_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_2_2)

CountSavory_4_2_3 = {
    "name": "CountSavory_4_2_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_2_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_2_3)

CountSavory_4_3_0 = {
    "name": "CountSavory_4_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_3_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_3_0)

CountSavory_4_3_1 = {
    "name": "CountSavory_4_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_3_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_3_1)

CountSavory_4_3_2 = {
    "name": "CountSavory_4_3_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_3_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_3_2)

CountSavory_4_3_3 = {
    "name": "CountSavory_4_3_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_3_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_3_3)

CountSavory_4_4_0 = {
    "name": "CountSavory_4_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_4_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_4_0)

CountSavory_4_4_1 = {
    "name": "CountSavory_4_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_4_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_4_1)

CountSavory_4_4_2 = {
    "name": "CountSavory_4_4_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_4_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_4_2)

CountSavory_4_4_3 = {
    "name": "CountSavory_4_4_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_4_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_4_3)

CountSavory_4_5_0 = {
    "name": "CountSavory_4_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_5_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_5_0)

CountSavory_4_5_1 = {
    "name": "CountSavory_4_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_5_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_5_1)

CountSavory_4_5_2 = {
    "name": "CountSavory_4_5_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_5_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_5_2)

CountSavory_4_5_3 = {
    "name": "CountSavory_4_5_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_5_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_5_3)

CountSavory_4_6_0 = {
    "name": "CountSavory_4_6_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_6_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_6_0)

CountSavory_4_6_1 = {
    "name": "CountSavory_4_6_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_6_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_6_1)

CountSavory_4_6_2 = {
    "name": "CountSavory_4_6_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_6_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_6_2)

CountSavory_4_6_3 = {
    "name": "CountSavory_4_6_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_6_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_6_3)

CountSavory_4_7_0 = {
    "name": "CountSavory_4_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_7_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_7_0)

CountSavory_4_7_1 = {
    "name": "CountSavory_4_7_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_7_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_7_1)

CountSavory_4_7_2 = {
    "name": "CountSavory_4_7_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_7_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_7_2)

CountSavory_4_7_3 = {
    "name": "CountSavory_4_7_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_7_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_7_3)

CountSavory_4_8_0 = {
    "name": "CountSavory_4_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_8_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_8_0)

CountSavory_4_8_1 = {
    "name": "CountSavory_4_8_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_8_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_8_1)

CountSavory_4_8_2 = {
    "name": "CountSavory_4_8_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_8_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_8_2)

CountSavory_4_8_3 = {
    "name": "CountSavory_4_8_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_8_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_8_3)

CountSavory_4_9_0 = {
    "name": "CountSavory_4_9_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_9_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_9_0)

CountSavory_4_9_1 = {
    "name": "CountSavory_4_9_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_9_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_9_1)

CountSavory_4_9_2 = {
    "name": "CountSavory_4_9_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_9_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_9_2)

CountSavory_4_9_3 = {
    "name": "CountSavory_4_9_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_9_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_9_3)

CountSavory_4_10_0 = {
    "name": "CountSavory_4_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_10_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_10_0)

CountSavory_4_10_1 = {
    "name": "CountSavory_4_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_10_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_10_1)

CountSavory_4_10_2 = {
    "name": "CountSavory_4_10_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_10_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_10_2)

CountSavory_4_10_3 = {
    "name": "CountSavory_4_10_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_10_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_10_3)

CountSavory_4_11_0 = {
    "name": "CountSavory_4_11_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_11_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_11_0)

CountSavory_4_11_1 = {
    "name": "CountSavory_4_11_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_11_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_11_1)

CountSavory_4_11_2 = {
    "name": "CountSavory_4_11_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_11_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_11_2)

CountSavory_4_11_3 = {
    "name": "CountSavory_4_11_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_11_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_11_3)

CountSavory_4_12_0 = {
    "name": "CountSavory_4_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_12_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_12_0)

CountSavory_4_12_1 = {
    "name": "CountSavory_4_12_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_12_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_12_1)

CountSavory_4_12_2 = {
    "name": "CountSavory_4_12_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_12_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_12_2)

CountSavory_4_12_3 = {
    "name": "CountSavory_4_12_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_12_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_12_3)

CountSavory_4_13_0 = {
    "name": "CountSavory_4_13_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_13_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_snacks = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory_snacks += 1
    go_to(start_loc)
    say(str(num_savory_snacks) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_13_0)

CountSavory_4_13_1 = {
    "name": "CountSavory_4_13_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_13_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_snacks = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory_snacks += 1
    go_to(start_loc)
    say(str(num_savory_snacks) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_13_1)

CountSavory_4_13_2 = {
    "name": "CountSavory_4_13_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_13_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_snacks = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory_snacks += 1
    go_to(start_loc)
    say(str(num_savory_snacks) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_13_2)

CountSavory_4_13_3 = {
    "name": "CountSavory_4_13_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_13_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_snacks = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory_snacks += 1
    go_to(start_loc)
    say(str(num_savory_snacks) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_13_3)

CountSavory_4_14_0 = {
    "name": "CountSavory_4_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_14_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_14_0)

CountSavory_4_14_1 = {
    "name": "CountSavory_4_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_14_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_14_1)

CountSavory_4_14_2 = {
    "name": "CountSavory_4_14_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_14_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_14_2)

CountSavory_4_14_3 = {
    "name": "CountSavory_4_14_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_14_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_14_3)

CountSavory_4_15_0 = {
    "name": "CountSavory_4_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_15_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_15_0)

CountSavory_4_15_1 = {
    "name": "CountSavory_4_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_15_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_15_1)

CountSavory_4_15_2 = {
    "name": "CountSavory_4_15_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_15_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_15_2)

CountSavory_4_15_3 = {
    "name": "CountSavory_4_15_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_15_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_15_3)

CountSavory_4_16_0 = {
    "name": "CountSavory_4_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_16_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_16_0)

CountSavory_4_16_1 = {
    "name": "CountSavory_4_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_16_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_16_1)

CountSavory_4_16_2 = {
    "name": "CountSavory_4_16_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_16_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_16_2)

CountSavory_4_16_3 = {
    "name": "CountSavory_4_16_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_16_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_16_3)

CountSavory_4_17_0 = {
    "name": "CountSavory_4_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_17_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_17_0)

CountSavory_4_17_1 = {
    "name": "CountSavory_4_17_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_17_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_17_1)

CountSavory_4_17_2 = {
    "name": "CountSavory_4_17_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_17_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_17_2)

CountSavory_4_17_3 = {
    "name": "CountSavory_4_17_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_17_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_17_3)

CountSavory_4_18_0 = {
    "name": "CountSavory_4_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_18_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_18_0)

CountSavory_4_18_1 = {
    "name": "CountSavory_4_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_18_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_18_1)

CountSavory_4_18_2 = {
    "name": "CountSavory_4_18_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_18_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_18_2)

CountSavory_4_18_3 = {
    "name": "CountSavory_4_18_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_18_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_18_3)

CountSavory_4_19_0 = {
    "name": "CountSavory_4_19_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_19_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
        go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_19_0)

CountSavory_4_19_1 = {
    "name": "CountSavory_4_19_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_19_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
        go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_19_1)

CountSavory_4_19_2 = {
    "name": "CountSavory_4_19_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_19_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
        go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_19_2)

CountSavory_4_19_3 = {
    "name": "CountSavory_4_19_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_19_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
        go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_19_3)

CountSavory_4_20_0 = {
    "name": "CountSavory_4_20_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_20_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response != "cupcake":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_20_0)

CountSavory_4_20_1 = {
    "name": "CountSavory_4_20_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_20_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response != "cupcake":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_20_1)

CountSavory_4_20_2 = {
    "name": "CountSavory_4_20_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_20_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response != "cupcake":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_20_2)

CountSavory_4_20_3 = {
    "name": "CountSavory_4_20_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_20_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response != "cupcake":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_20_3)

CountSavory_4_21_0 = {
    "name": "CountSavory_4_21_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_21_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_21_0)

CountSavory_4_21_1 = {
    "name": "CountSavory_4_21_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_21_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_21_1)

CountSavory_4_21_2 = {
    "name": "CountSavory_4_21_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_21_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_21_2)

CountSavory_4_21_3 = {
    "name": "CountSavory_4_21_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_21_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_21_3)

CountSavory_4_22_0 = {
    "name": "CountSavory_4_22_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_22_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_22_0)

CountSavory_4_22_1 = {
    "name": "CountSavory_4_22_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_22_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_22_1)

CountSavory_4_22_2 = {
    "name": "CountSavory_4_22_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_22_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_22_2)

CountSavory_4_22_3 = {
    "name": "CountSavory_4_22_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_22_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_22_3)

CountSavory_4_23_0 = {
    "name": "CountSavory_4_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_23_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_23_0)

CountSavory_4_23_1 = {
    "name": "CountSavory_4_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_23_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_23_1)

CountSavory_4_23_2 = {
    "name": "CountSavory_4_23_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_23_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_23_2)

CountSavory_4_23_3 = {
    "name": "CountSavory_4_23_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_23_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_23_3)

CountSavory_4_24_0 = {
    "name": "CountSavory_4_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_24_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_24_0)

CountSavory_4_24_1 = {
    "name": "CountSavory_4_24_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_24_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_24_1)

CountSavory_4_24_2 = {
    "name": "CountSavory_4_24_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_24_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_24_2)

CountSavory_4_24_3 = {
    "name": "CountSavory_4_24_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_24_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_24_3)

CountSavory_4_25_0 = {
    "name": "CountSavory_4_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_25_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_25_0)

CountSavory_4_25_1 = {
    "name": "CountSavory_4_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_25_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_25_1)

CountSavory_4_25_2 = {
    "name": "CountSavory_4_25_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_25_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_25_2)

CountSavory_4_25_3 = {
    "name": "CountSavory_4_25_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_25_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response in ["beef jerky", "ham sandwich"]:
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_25_3)

CountSavory_4_26_0 = {
    "name": "CountSavory_4_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_26_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_26_0)

CountSavory_4_26_1 = {
    "name": "CountSavory_4_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_26_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_26_1)

CountSavory_4_26_2 = {
    "name": "CountSavory_4_26_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_26_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_26_2)

CountSavory_4_26_3 = {
    "name": "CountSavory_4_26_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_26_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_26_3)

CountSavory_4_27_0 = {
    "name": "CountSavory_4_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_27_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_27_0)

CountSavory_4_27_1 = {
    "name": "CountSavory_4_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_27_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_27_1)

CountSavory_4_27_2 = {
    "name": "CountSavory_4_27_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_27_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_27_2)

CountSavory_4_27_3 = {
    "name": "CountSavory_4_27_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_27_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_27_3)

CountSavory_4_28_0 = {
    "name": "CountSavory_4_28_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_28_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_28_0)

CountSavory_4_28_1 = {
    "name": "CountSavory_4_28_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_28_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_28_1)

CountSavory_4_28_2 = {
    "name": "CountSavory_4_28_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_28_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_28_2)

CountSavory_4_28_3 = {
    "name": "CountSavory_4_28_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_28_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_28_3)

CountSavory_4_29_0 = {
    "name": "CountSavory_4_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_29_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_29_0)

CountSavory_4_29_1 = {
    "name": "CountSavory_4_29_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_29_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_29_1)

CountSavory_4_29_2 = {
    "name": "CountSavory_4_29_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_29_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_29_2)

CountSavory_4_29_3 = {
    "name": "CountSavory_4_29_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_29_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_29_3)

CountSavory_4_30_0 = {
    "name": "CountSavory_4_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_30_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_30_0)

CountSavory_4_30_1 = {
    "name": "CountSavory_4_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_30_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_30_1)

CountSavory_4_30_2 = {
    "name": "CountSavory_4_30_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_30_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_30_2)

CountSavory_4_30_3 = {
    "name": "CountSavory_4_30_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_30_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_30_3)

CountSavory_4_31_0 = {
    "name": "CountSavory_4_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_31_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_31_0)

CountSavory_4_31_1 = {
    "name": "CountSavory_4_31_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_31_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_31_1)

CountSavory_4_31_2 = {
    "name": "CountSavory_4_31_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_31_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_31_2)

CountSavory_4_31_3 = {
    "name": "CountSavory_4_31_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_31_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_31_3)

CountSavory_4_32_0 = {
    "name": "CountSavory_4_32_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_32_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_32_0)

CountSavory_4_32_1 = {
    "name": "CountSavory_4_32_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_32_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_32_1)

CountSavory_4_32_2 = {
    "name": "CountSavory_4_32_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_32_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_32_2)

CountSavory_4_32_3 = {
    "name": "CountSavory_4_32_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_32_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_32_3)

CountSavory_4_33_0 = {
    "name": "CountSavory_4_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_33_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_33_0)

CountSavory_4_33_1 = {
    "name": "CountSavory_4_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_33_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_33_1)

CountSavory_4_33_2 = {
    "name": "CountSavory_4_33_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_33_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_33_2)

CountSavory_4_33_3 = {
    "name": "CountSavory_4_33_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_33_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_33_3)

CountSavory_4_34_0 = {
    "name": "CountSavory_4_34_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_34_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_34_0)

CountSavory_4_34_1 = {
    "name": "CountSavory_4_34_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_34_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_34_1)

CountSavory_4_34_2 = {
    "name": "CountSavory_4_34_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_34_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_34_2)

CountSavory_4_34_3 = {
    "name": "CountSavory_4_34_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_34_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_34_3)

CountSavory_4_35_0 = {
    "name": "CountSavory_4_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_35_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_35_0)

CountSavory_4_35_1 = {
    "name": "CountSavory_4_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_35_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_35_1)

CountSavory_4_35_2 = {
    "name": "CountSavory_4_35_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_35_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_35_2)

CountSavory_4_35_3 = {
    "name": "CountSavory_4_35_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_35_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response in ["beef jerky", "ham sandwich"]:
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_35_3)

CountSavory_4_36_0 = {
    "name": "CountSavory_4_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_36_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_36_0)

CountSavory_4_36_1 = {
    "name": "CountSavory_4_36_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_36_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_36_1)

CountSavory_4_36_2 = {
    "name": "CountSavory_4_36_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_36_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_36_2)

CountSavory_4_36_3 = {
    "name": "CountSavory_4_36_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_36_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_36_3)

CountSavory_4_37_0 = {
    "name": "CountSavory_4_37_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_37_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_37_0)

CountSavory_4_37_1 = {
    "name": "CountSavory_4_37_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_37_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_37_1)

CountSavory_4_37_2 = {
    "name": "CountSavory_4_37_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_37_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_37_2)

CountSavory_4_37_3 = {
    "name": "CountSavory_4_37_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_37_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_37_3)

CountSavory_4_38_0 = {
    "name": "CountSavory_4_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_38_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_38_0)

CountSavory_4_38_1 = {
    "name": "CountSavory_4_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_38_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_38_1)

CountSavory_4_38_2 = {
    "name": "CountSavory_4_38_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_38_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_38_2)

CountSavory_4_38_3 = {
    "name": "CountSavory_4_38_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_38_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_38_3)

CountSavory_4_39_0 = {
    "name": "CountSavory_4_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_39_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_39_0)

CountSavory_4_39_1 = {
    "name": "CountSavory_4_39_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_39_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_39_1)

CountSavory_4_39_2 = {
    "name": "CountSavory_4_39_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_39_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_39_2)

CountSavory_4_39_3 = {
    "name": "CountSavory_4_39_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_39_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_39_3)

CountSavory_4_40_0 = {
    "name": "CountSavory_4_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_40_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_40_0)

CountSavory_4_40_1 = {
    "name": "CountSavory_4_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_40_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_40_1)

CountSavory_4_40_2 = {
    "name": "CountSavory_4_40_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_40_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_40_2)

CountSavory_4_40_3 = {
    "name": "CountSavory_4_40_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_40_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_40_3)

CountSavory_4_41_0 = {
    "name": "CountSavory_4_41_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_41_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_41_0)

CountSavory_4_41_1 = {
    "name": "CountSavory_4_41_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_41_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_41_1)

CountSavory_4_41_2 = {
    "name": "CountSavory_4_41_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_41_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_41_2)

CountSavory_4_41_3 = {
    "name": "CountSavory_4_41_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_41_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_41_3)

CountSavory_4_42_0 = {
    "name": "CountSavory_4_42_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_42_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_snacks = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory_snacks += 1
    go_to(start_loc)
    say(str(num_savory_snacks) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_42_0)

CountSavory_4_42_1 = {
    "name": "CountSavory_4_42_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_42_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_snacks = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory_snacks += 1
    go_to(start_loc)
    say(str(num_savory_snacks) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_42_1)

CountSavory_4_42_2 = {
    "name": "CountSavory_4_42_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_42_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_snacks = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory_snacks += 1
    go_to(start_loc)
    say(str(num_savory_snacks) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_42_2)

CountSavory_4_42_3 = {
    "name": "CountSavory_4_42_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_42_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory_snacks = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                num_savory_snacks += 1
    go_to(start_loc)
    say(str(num_savory_snacks) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_42_3)

CountSavory_4_43_0 = {
    "name": "CountSavory_4_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_43_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_43_0)

CountSavory_4_43_1 = {
    "name": "CountSavory_4_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_43_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_43_1)

CountSavory_4_43_2 = {
    "name": "CountSavory_4_43_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_43_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_43_2)

CountSavory_4_43_3 = {
    "name": "CountSavory_4_43_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_43_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_43_3)

CountSavory_4_44_0 = {
    "name": "CountSavory_4_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_44_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_44_0)

CountSavory_4_44_1 = {
    "name": "CountSavory_4_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_44_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_44_1)

CountSavory_4_44_2 = {
    "name": "CountSavory_4_44_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_44_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_44_2)

CountSavory_4_44_3 = {
    "name": "CountSavory_4_44_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_44_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_44_3)

CountSavory_4_45_0 = {
    "name": "CountSavory_4_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_45_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_45_0)

CountSavory_4_45_1 = {
    "name": "CountSavory_4_45_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_45_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_45_1)

CountSavory_4_45_2 = {
    "name": "CountSavory_4_45_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_45_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_45_2)

CountSavory_4_45_3 = {
    "name": "CountSavory_4_45_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_45_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_45_3)

CountSavory_4_46_0 = {
    "name": "CountSavory_4_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_46_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_46_0)

CountSavory_4_46_1 = {
    "name": "CountSavory_4_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_46_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_46_1)

CountSavory_4_46_2 = {
    "name": "CountSavory_4_46_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_46_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_46_2)

CountSavory_4_46_3 = {
    "name": "CountSavory_4_46_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_46_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    num_savory = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response == "beef jerky" or response == "ham sandwich":
                num_savory += 1
    go_to(start_loc)
    say(str(num_savory) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_46_3)

CountSavory_4_47_0 = {
    "name": "CountSavory_4_47_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_47_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_47_0)

CountSavory_4_47_1 = {
    "name": "CountSavory_4_47_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_47_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_47_1)

CountSavory_4_47_2 = {
    "name": "CountSavory_4_47_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_47_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_47_2)

CountSavory_4_47_3 = {
    "name": "CountSavory_4_47_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_47_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_47_3)

CountSavory_4_48_0 = {
    "name": "CountSavory_4_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 0 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_48_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_48_0)

CountSavory_4_48_1 = {
    "name": "CountSavory_4_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 2 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_48_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_48_1)

CountSavory_4_48_2 = {
    "name": "CountSavory_4_48_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 1 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_48_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_48_2)

CountSavory_4_48_3 = {
    "name": "CountSavory_4_48_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ 3 people preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_48_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if not is_in_room("person"):
            continue
        response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
        if response == "beef jerky" or response == "ham sandwich":
            savory_count += 1
    go_to(start_loc)
    say(str(savory_count) + " people preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_48_3)

CountSavory_4_49_0 = {
    "name": "CountSavory_4_49_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 2 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_49_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_49_0)

CountSavory_4_49_1 = {
    "name": "CountSavory_4_49_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_49_1 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_49_1)

CountSavory_4_49_2 = {
    "name": "CountSavory_4_49_2",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 1 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_49_2 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_49_2)

CountSavory_4_49_3 = {
    "name": "CountSavory_4_49_3",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ alice's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "GoTo /$@!/ bob's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ charlie's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ david's office /$@!/ None",
        "CheckEntity /$@!/ person /$@!/ None",
        "Ask /$@!/ would you like a beef jerky, cupcake, ham sandwich, or donut? /$@!/ ['beef jerky', 'cupcake', 'ham sandwich', 'donut']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ there were 3 people who preferred a savory option /$@!/ None",
    ],
    "error_message": "",
}

program_CountSavory_4_49_3 = """
def task_program():
    start_loc = get_current_location()
    list_of_rooms = get_all_rooms()
    savory_count = 0
    for room in list_of_rooms:
        if "office" not in room:
            continue
        go_to(room)
        if is_in_room("person"):
            response = ask("", "Would you like a beef jerky, cupcake, ham sandwich, or donut?", ["beef jerky", "cupcake", "ham sandwich", "donut"])
            if response != "cupcake":
                savory_count += 1
    go_to(start_loc)
    say("There were " + str(savory_count) + " people who preferred a savory option")

"""

ordered_field_buffer.append(CountSavory_4_49_3)

GrilledCheese_0_0_0 = {
    "name": "GrilledCheese_0_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are not in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_0_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_0_0)

GrilledCheese_0_1_0 = {
    "name": "GrilledCheese_0_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_1_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not in Zarko's office"
    else:
        message = "all ingredients are in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_1_0)

GrilledCheese_0_2_0 = {
    "name": "GrilledCheese_0_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_2_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_missing_ingredients = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(list_of_missing_ingredients) > 0:
        message = ""
        for ingredient in list_of_missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "all ingredients are available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_2_0)

GrilledCheese_0_3_0 = {
    "name": "GrilledCheese_0_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_3_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not in Zarko's office"
    else:
        message = "all ingredients are in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_3_0)

GrilledCheese_0_4_0 = {
    "name": "GrilledCheese_0_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are found /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_4_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not found"
    else:
        message = "all ingredients are found"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_4_0)

GrilledCheese_0_5_0 = {
    "name": "GrilledCheese_0_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_5_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_missing_ingredients = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_5_0)

GrilledCheese_0_6_0 = {
    "name": "GrilledCheese_0_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_6_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_6_0)

GrilledCheese_0_7_0 = {
    "name": "GrilledCheese_0_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_0_7_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    list_of_missing_ingredients = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_missing_ingredients.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_missing_ingredients:
        message += ingredient + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_7_0)

GrilledCheese_0_8_0 = {
    "name": "GrilledCheese_0_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_0_8_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_8_0)

GrilledCheese_0_9_0 = {
    "name": "GrilledCheese_0_9_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_0_9_0 = """
def task_program():
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_missing_ingredients = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_missing_ingredients.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_9_0)

GrilledCheese_0_10_0 = {
    "name": "GrilledCheese_0_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_10_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_missing_ingredients = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(list_of_missing_ingredients) > 0:
        message = ""
        for ingredient in list_of_missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "all ingredients are available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_10_0)

GrilledCheese_0_11_0 = {
    "name": "GrilledCheese_0_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are found /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_11_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not found"
    else:
        message = "all ingredients are found"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_11_0)

GrilledCheese_0_12_0 = {
    "name": "GrilledCheese_0_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_12_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_12_0)

GrilledCheese_0_13_0 = {
    "name": "GrilledCheese_0_13_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_0_13_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    if message == "":
        say("I found all the ingredients")
    else:
        say(message + "are not in Zarko's office")

"""

ordered_field_buffer.append(GrilledCheese_0_13_0)

GrilledCheese_0_14_0 = {
    "name": "GrilledCheese_0_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_0_14_0 = """
def task_program():
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    say(message + "not found")

"""

ordered_field_buffer.append(GrilledCheese_0_14_0)

GrilledCheese_0_15_0 = {
    "name": "GrilledCheese_0_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are not in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_15_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_15_0)

GrilledCheese_0_16_0 = {
    "name": "GrilledCheese_0_16_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_0_16_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_16_0)

GrilledCheese_0_17_0 = {
    "name": "GrilledCheese_0_17_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "CheckEntity /$@!/ ketchup /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are not in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_17_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_17_0)

GrilledCheese_0_18_0 = {
    "name": "GrilledCheese_0_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_18_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_missing_ingredients = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(list_of_missing_ingredients) > 0:
        message = ""
        for ingredient in list_of_missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "all ingredients are available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_18_0)

GrilledCheese_0_19_0 = {
    "name": "GrilledCheese_0_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_0_19_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_19_0)

GrilledCheese_0_20_0 = {
    "name": "GrilledCheese_0_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/  /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_20_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter", "ketchup"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_20_0)

GrilledCheese_0_21_0 = {
    "name": "GrilledCheese_0_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are not in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_21_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_21_0)

GrilledCheese_0_22_0 = {
    "name": "GrilledCheese_0_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_22_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not in Zarko's office"
    else:
        message = "all ingredients are in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_22_0)

GrilledCheese_0_23_0 = {
    "name": "GrilledCheese_0_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_23_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter", "ketchup"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_23_0)

GrilledCheese_0_24_0 = {
    "name": "GrilledCheese_0_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are not in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_24_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_24_0)

GrilledCheese_0_25_0 = {
    "name": "GrilledCheese_0_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_25_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not in Zarko's office"
    else:
        message = "all ingredients are in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_25_0)

GrilledCheese_0_26_0 = {
    "name": "GrilledCheese_0_26_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_0_26_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_26_0)

GrilledCheese_0_27_0 = {
    "name": "GrilledCheese_0_27_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_0_27_0 = """
def task_program():
    go_to("kitchen")
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say(ingredient + " is missing")
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_0_27_0)

GrilledCheese_0_28_0 = {
    "name": "GrilledCheese_0_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_28_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_missing_ingredients = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_28_0)

GrilledCheese_0_29_0 = {
    "name": "GrilledCheese_0_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are not in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_29_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_29_0)

GrilledCheese_0_30_0 = {
    "name": "GrilledCheese_0_30_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "CheckEntity /$@!/ ketchup /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_30_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not in Zarko's office"
    else:
        message = "all ingredients are in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_30_0)

GrilledCheese_0_31_0 = {
    "name": "GrilledCheese_0_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_31_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_31_0)

GrilledCheese_0_32_0 = {
    "name": "GrilledCheese_0_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_32_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not in Zarko's office"
    else:
        message = "all ingredients are in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_32_0)

GrilledCheese_0_33_0 = {
    "name": "GrilledCheese_0_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_33_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_missing_ingredients = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_33_0)

GrilledCheese_0_34_0 = {
    "name": "GrilledCheese_0_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_0_34_0 = """
def task_program():
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_34_0)

GrilledCheese_0_35_0 = {
    "name": "GrilledCheese_0_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_35_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_missing_ingredients = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_35_0)

GrilledCheese_0_36_0 = {
    "name": "GrilledCheese_0_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_36_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter", "ketchup"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "all ingredients are available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_36_0)

GrilledCheese_0_37_0 = {
    "name": "GrilledCheese_0_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_37_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not in Zarko's office"
    else:
        message = "all ingredients are in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_37_0)

GrilledCheese_0_38_0 = {
    "name": "GrilledCheese_0_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ i could not find any ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_38_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    if message == "":
        say("I could not find any ingredients")
    else:
        say("I could not find: " + message)

"""

ordered_field_buffer.append(GrilledCheese_0_38_0)

GrilledCheese_0_39_0 = {
    "name": "GrilledCheese_0_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are not in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_39_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_39_0)

GrilledCheese_0_40_0 = {
    "name": "GrilledCheese_0_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_40_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not in Zarko's office"
    else:
        message = "all ingredients are in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_40_0)

GrilledCheese_0_41_0 = {
    "name": "GrilledCheese_0_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_41_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(missing_ingredients) > 0:
        message = ""
        for ingredient in missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "all ingredients are available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_41_0)

GrilledCheese_0_42_0 = {
    "name": "GrilledCheese_0_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_42_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter", "ketchup"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_42_0)

GrilledCheese_0_43_0 = {
    "name": "GrilledCheese_0_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_43_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_missing_ingredients = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_43_0)

GrilledCheese_0_44_0 = {
    "name": "GrilledCheese_0_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_44_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not in Zarko's office"
    else:
        message = "all ingredients are in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_44_0)

GrilledCheese_0_45_0 = {
    "name": "GrilledCheese_0_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are not in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_45_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_45_0)

GrilledCheese_0_46_0 = {
    "name": "GrilledCheese_0_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_0_46_0 = """
def task_program():
    go_to("kitchen")
    ingredients = ["bread", "cheese", "butter", "ketchup"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_46_0)

GrilledCheese_0_47_0 = {
    "name": "GrilledCheese_0_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are not in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_47_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_47_0)

GrilledCheese_0_48_0 = {
    "name": "GrilledCheese_0_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_48_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    missing_ingredients = []
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_48_0)

GrilledCheese_0_49_0 = {
    "name": "GrilledCheese_0_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have ketchup? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_0_49_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    list_of_missing_ingredients = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_missing_ingredients.append(ingredient)
    go_to(start_loc)
    if len(list_of_missing_ingredients) > 0:
        message = ""
        for ingredient in list_of_missing_ingredients:
            message += ingredient + ", "
        message += "are missing"
    else:
        message = "all ingredients are available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_0_49_0)

GrilledCheese_1_0_0 = {
    "name": "GrilledCheese_1_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have a bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have a cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have a butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have a knife? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_0_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese", "butter", "knife"]
    list_of_ingredients_not_found = []
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not in Zarko's office"
    else:
        message = "all ingredients are in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_0_0)

GrilledCheese_1_1_0 = {
    "name": "GrilledCheese_1_1_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_1_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_1_0)

GrilledCheese_1_2_0 = {
    "name": "GrilledCheese_1_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have a bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have a cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have a butter? /$@!/ ['yes', 'no']",
    ],
    "error_message": "",
}

program_GrilledCheese_1_2_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need a " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_1_2_0)

GrilledCheese_1_3_0 = {
    "name": "GrilledCheese_1_3_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_3_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("We do not have " + ingredient)
    go_to("Arjun's office")

"""

ordered_field_buffer.append(GrilledCheese_1_3_0)

GrilledCheese_1_4_0 = {
    "name": "GrilledCheese_1_4_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_4_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_4_0)

GrilledCheese_1_5_0 = {
    "name": "GrilledCheese_1_5_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_5_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need a " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_5_0)

GrilledCheese_1_6_0 = {
    "name": "GrilledCheese_1_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are found /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_6_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese", "butter"]
    list_of_ingredients_not_found = []
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not found"
    else:
        message = "all ingredients are found"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_6_0)

GrilledCheese_1_7_0 = {
    "name": "GrilledCheese_1_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_7_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    list_of_missing_ingredients = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_missing_ingredients.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_missing_ingredients:
        message += ingredient + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_7_0)

GrilledCheese_1_8_0 = {
    "name": "GrilledCheese_1_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_8_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_8_0)

GrilledCheese_1_9_0 = {
    "name": "GrilledCheese_1_9_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_9_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("We do not have " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_9_0)

GrilledCheese_1_10_0 = {
    "name": "GrilledCheese_1_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_10_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("We do not have " + ingredient)
    go_to("Arjun's office")

"""

ordered_field_buffer.append(GrilledCheese_1_10_0)

GrilledCheese_1_11_0 = {
    "name": "GrilledCheese_1_11_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_11_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("Arjun's office")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_11_0)

GrilledCheese_1_12_0 = {
    "name": "GrilledCheese_1_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_12_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_12_0)

GrilledCheese_1_13_0 = {
    "name": "GrilledCheese_1_13_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_13_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter", "ketchup"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("We need " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_13_0)

GrilledCheese_1_14_0 = {
    "name": "GrilledCheese_1_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_14_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_14_0)

GrilledCheese_1_15_0 = {
    "name": "GrilledCheese_1_15_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_15_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say(ingredient + " is missing")
    go_to("Aiden's office")

"""

ordered_field_buffer.append(GrilledCheese_1_15_0)

GrilledCheese_1_16_0 = {
    "name": "GrilledCheese_1_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have a bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have a cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have a butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have a knife? /$@!/ ['yes', 'no']",
    ],
    "error_message": "",
}

program_GrilledCheese_1_16_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_1_16_0)

GrilledCheese_1_17_0 = {
    "name": "GrilledCheese_1_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_17_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_17_0)

GrilledCheese_1_18_0 = {
    "name": "GrilledCheese_1_18_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_18_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_18_0)

GrilledCheese_1_19_0 = {
    "name": "GrilledCheese_1_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have knife? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_19_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "knife"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not in Zarko's office"
    else:
        message = "all ingredients are in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_19_0)

GrilledCheese_1_20_0 = {
    "name": "GrilledCheese_1_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_20_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    if message != "":
        say(message + "are not found")
    else:
        say("all ingredients are found")

"""

ordered_field_buffer.append(GrilledCheese_1_20_0)

GrilledCheese_1_21_0 = {
    "name": "GrilledCheese_1_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_21_0 = """
def task_program():
    ingredients = ["cheese", "bread", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_21_0)

GrilledCheese_1_22_0 = {
    "name": "GrilledCheese_1_22_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_22_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_22_0)

GrilledCheese_1_23_0 = {
    "name": "GrilledCheese_1_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_23_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say(ingredient + " is missing")
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_23_0)

GrilledCheese_1_24_0 = {
    "name": "GrilledCheese_1_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_24_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_24_0)

GrilledCheese_1_25_0 = {
    "name": "GrilledCheese_1_25_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_25_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_25_0)

GrilledCheese_1_26_0 = {
    "name": "GrilledCheese_1_26_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_26_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_26_0)

GrilledCheese_1_27_0 = {
    "name": "GrilledCheese_1_27_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_27_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say(ingredient + " is missing")
    go_to("Aiden's office")

"""

ordered_field_buffer.append(GrilledCheese_1_27_0)

GrilledCheese_1_28_0 = {
    "name": "GrilledCheese_1_28_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_28_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say(ingredient + " is missing")
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_28_0)

GrilledCheese_1_29_0 = {
    "name": "GrilledCheese_1_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are found /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_29_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese", "butter"]
    list_of_ingredients_not_found = []
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not found"
    else:
        message = "all ingredients are found"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_29_0)

GrilledCheese_1_30_0 = {
    "name": "GrilledCheese_1_30_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_30_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    if message != "":
        say(message + "are not found")
    else:
        say("all ingredients are found")

"""

ordered_field_buffer.append(GrilledCheese_1_30_0)

GrilledCheese_1_31_0 = {
    "name": "GrilledCheese_1_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_31_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter", "ketchup"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_31_0)

GrilledCheese_1_32_0 = {
    "name": "GrilledCheese_1_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_32_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_32_0)

GrilledCheese_1_33_0 = {
    "name": "GrilledCheese_1_33_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_33_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    if message != "":
        say(message + "not found")
    else:
        say("all ingredients found")

"""

ordered_field_buffer.append(GrilledCheese_1_33_0)

GrilledCheese_1_34_0 = {
    "name": "GrilledCheese_1_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_34_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say(ingredient + " is missing")
    go_to("Arjun's office")

"""

ordered_field_buffer.append(GrilledCheese_1_34_0)

GrilledCheese_1_35_0 = {
    "name": "GrilledCheese_1_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have a bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have a cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have a butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have a knife? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_35_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter", "knife"]
    missing_ingredients = []
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_35_0)

GrilledCheese_1_36_0 = {
    "name": "GrilledCheese_1_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_36_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("We need " + ingredient)
    go_to("Arjun's office")
    say("We need the following ingredients: " + str(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_1_36_0)

GrilledCheese_1_37_0 = {
    "name": "GrilledCheese_1_37_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_37_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_37_0)

GrilledCheese_1_38_0 = {
    "name": "GrilledCheese_1_38_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_38_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say(ingredient + " is missing")
    go_to("Aiden's office")

"""

ordered_field_buffer.append(GrilledCheese_1_38_0)

GrilledCheese_1_39_0 = {
    "name": "GrilledCheese_1_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_39_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter", "ketchup"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    say(message + "are not found")

"""

ordered_field_buffer.append(GrilledCheese_1_39_0)

GrilledCheese_1_40_0 = {
    "name": "GrilledCheese_1_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_40_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_40_0)

GrilledCheese_1_41_0 = {
    "name": "GrilledCheese_1_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are found /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_41_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese", "butter"]
    list_of_ingredients_not_found = []
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not found"
    else:
        message = "all ingredients are found"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_41_0)

GrilledCheese_1_42_0 = {
    "name": "GrilledCheese_1_42_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_42_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("Aiden's office")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_42_0)

GrilledCheese_1_43_0 = {
    "name": "GrilledCheese_1_43_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_43_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    if message != "":
        say(message + "are not found")
    else:
        say("all ingredients are found")

"""

ordered_field_buffer.append(GrilledCheese_1_43_0)

GrilledCheese_1_44_0 = {
    "name": "GrilledCheese_1_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have knife? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ all ingredients are in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_1_44_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter", "knife"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to(start_loc)
    if len(list_of_ingredients_not_found) > 0:
        message = ""
        for ingredient in list_of_ingredients_not_found:
            message += ingredient + ", "
        message += "are not in Zarko's office"
    else:
        message = "all ingredients are in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_44_0)

GrilledCheese_1_45_0 = {
    "name": "GrilledCheese_1_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_45_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    say(message + "are not found")

"""

ordered_field_buffer.append(GrilledCheese_1_45_0)

GrilledCheese_1_46_0 = {
    "name": "GrilledCheese_1_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_46_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    list_of_missing_ingredients = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_missing_ingredients.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_missing_ingredients:
        message += ingredient + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_46_0)

GrilledCheese_1_47_0 = {
    "name": "GrilledCheese_1_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_47_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            say("I need " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_1_47_0)

GrilledCheese_1_48_0 = {
    "name": "GrilledCheese_1_48_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_48_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter", "knife"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have a " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_48_0)

GrilledCheese_1_49_0 = {
    "name": "GrilledCheese_1_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_1_49_0 = """
def task_program():
    list_of_ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "No":
            list_of_ingredients_not_found.append(ingredient)
    go_to("kitchen")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_1_49_0)

GrilledCheese_2_0_0 = {
    "name": "GrilledCheese_2_0_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ zarko has cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ zarko has bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "Say /$@!/ zarko has butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_0_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if is_in_room(ingredient):
            say("Zarko has " + ingredient)
        else:
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_0_0)

GrilledCheese_2_1_0 = {
    "name": "GrilledCheese_2_1_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ cheese is available /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ bread is available /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "Say /$@!/ butter is available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_1_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if is_in_room(ingredient):
            say(ingredient + " is available")
        else:
            say(ingredient + " is not available")

"""

ordered_field_buffer.append(GrilledCheese_2_1_0)

GrilledCheese_2_2_0 = {
    "name": "GrilledCheese_2_2_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_2_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_2_0)

GrilledCheese_2_3_0 = {
    "name": "GrilledCheese_2_3_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_3_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_3_0)

GrilledCheese_2_4_0 = {
    "name": "GrilledCheese_2_4_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_4_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_4_0)

GrilledCheese_2_5_0 = {
    "name": "GrilledCheese_2_5_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ cheese is available /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ bread is available /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "Say /$@!/ butter is available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_5_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if is_in_room(ingredient):
            say(ingredient + " is available")
        else:
            say(ingredient + " is not available")

"""

ordered_field_buffer.append(GrilledCheese_2_5_0)

GrilledCheese_2_6_0 = {
    "name": "GrilledCheese_2_6_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ cheese is available /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ bread is available /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "Say /$@!/ butter is available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_6_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if is_in_room(ingredient):
            say(ingredient + " is available")
        else:
            say(ingredient + " is not available")

"""

ordered_field_buffer.append(GrilledCheese_2_6_0)

GrilledCheese_2_7_0 = {
    "name": "GrilledCheese_2_7_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_7_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_7_0)

GrilledCheese_2_8_0 = {
    "name": "GrilledCheese_2_8_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_8_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_8_0)

GrilledCheese_2_9_0 = {
    "name": "GrilledCheese_2_9_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_9_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_9_0)

GrilledCheese_2_10_0 = {
    "name": "GrilledCheese_2_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_2_10_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_2_10_0)

GrilledCheese_2_11_0 = {
    "name": "GrilledCheese_2_11_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_11_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_11_0)

GrilledCheese_2_12_0 = {
    "name": "GrilledCheese_2_12_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_12_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_12_0)

GrilledCheese_2_13_0 = {
    "name": "GrilledCheese_2_13_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_13_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_13_0)

GrilledCheese_2_14_0 = {
    "name": "GrilledCheese_2_14_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_14_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_14_0)

GrilledCheese_2_15_0 = {
    "name": "GrilledCheese_2_15_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_15_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_15_0)

GrilledCheese_2_16_0 = {
    "name": "GrilledCheese_2_16_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_16_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_16_0)

GrilledCheese_2_17_0 = {
    "name": "GrilledCheese_2_17_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ cheese is available /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ bread is available /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "Say /$@!/ butter is available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_17_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if is_in_room(ingredient):
            say(ingredient + " is available")
        else:
            say(ingredient + " is not available")

"""

ordered_field_buffer.append(GrilledCheese_2_17_0)

GrilledCheese_2_18_0 = {
    "name": "GrilledCheese_2_18_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_18_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_18_0)

GrilledCheese_2_19_0 = {
    "name": "GrilledCheese_2_19_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_19_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_19_0)

GrilledCheese_2_20_0 = {
    "name": "GrilledCheese_2_20_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_20_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_20_0)

GrilledCheese_2_21_0 = {
    "name": "GrilledCheese_2_21_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_21_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_21_0)

GrilledCheese_2_22_0 = {
    "name": "GrilledCheese_2_22_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_22_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_22_0)

GrilledCheese_2_23_0 = {
    "name": "GrilledCheese_2_23_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ zarko has cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ zarko has bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "Say /$@!/ zarko has butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_23_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if is_in_room(ingredient):
            say("Zarko has " + ingredient)
        else:
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_23_0)

GrilledCheese_2_24_0 = {
    "name": "GrilledCheese_2_24_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_24_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_24_0)

GrilledCheese_2_25_0 = {
    "name": "GrilledCheese_2_25_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_25_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_25_0)

GrilledCheese_2_26_0 = {
    "name": "GrilledCheese_2_26_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_26_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_26_0)

GrilledCheese_2_27_0 = {
    "name": "GrilledCheese_2_27_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ cheese is available /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ bread is available /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "Say /$@!/ butter is available /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_27_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if is_in_room(ingredient):
            say(ingredient + " is available")
        else:
            say(ingredient + " is not available")

"""

ordered_field_buffer.append(GrilledCheese_2_27_0)

GrilledCheese_2_28_0 = {
    "name": "GrilledCheese_2_28_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ zarko has cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ zarko has bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "Say /$@!/ zarko has butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_28_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if is_in_room(ingredient):
            say("Zarko has " + ingredient)
        else:
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_28_0)

GrilledCheese_2_29_0 = {
    "name": "GrilledCheese_2_29_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_29_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_29_0)

GrilledCheese_2_30_0 = {
    "name": "GrilledCheese_2_30_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_30_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_30_0)

GrilledCheese_2_31_0 = {
    "name": "GrilledCheese_2_31_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_31_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_31_0)

GrilledCheese_2_32_0 = {
    "name": "GrilledCheese_2_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_2_32_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_2_32_0)

GrilledCheese_2_33_0 = {
    "name": "GrilledCheese_2_33_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_33_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_33_0)

GrilledCheese_2_34_0 = {
    "name": "GrilledCheese_2_34_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_34_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_34_0)

GrilledCheese_2_35_0 = {
    "name": "GrilledCheese_2_35_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_35_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_35_0)

GrilledCheese_2_36_0 = {
    "name": "GrilledCheese_2_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_2_36_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_2_36_0)

GrilledCheese_2_37_0 = {
    "name": "GrilledCheese_2_37_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ zarko has cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ zarko has bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "Say /$@!/ zarko has butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_37_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if is_in_room(ingredient):
            say("Zarko has " + ingredient)
        else:
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_37_0)

GrilledCheese_2_38_0 = {
    "name": "GrilledCheese_2_38_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_38_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_38_0)

GrilledCheese_2_39_0 = {
    "name": "GrilledCheese_2_39_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_39_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_39_0)

GrilledCheese_2_40_0 = {
    "name": "GrilledCheese_2_40_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_40_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_40_0)

GrilledCheese_2_41_0 = {
    "name": "GrilledCheese_2_41_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_41_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_41_0)

GrilledCheese_2_42_0 = {
    "name": "GrilledCheese_2_42_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ zarko has cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ zarko has bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "Say /$@!/ zarko has butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_42_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if is_in_room(ingredient):
            say("Zarko has " + ingredient)
        else:
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_42_0)

GrilledCheese_2_43_0 = {
    "name": "GrilledCheese_2_43_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ zarko has cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ zarko has bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "Say /$@!/ zarko has butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_43_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if is_in_room(ingredient):
            say("Zarko has " + ingredient)
        else:
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_43_0)

GrilledCheese_2_44_0 = {
    "name": "GrilledCheese_2_44_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_44_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_44_0)

GrilledCheese_2_45_0 = {
    "name": "GrilledCheese_2_45_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_45_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_45_0)

GrilledCheese_2_46_0 = {
    "name": "GrilledCheese_2_46_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_46_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_46_0)

GrilledCheese_2_47_0 = {
    "name": "GrilledCheese_2_47_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ zarko has cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ zarko has bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "Say /$@!/ zarko has butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_47_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if is_in_room(ingredient):
            say("Zarko has " + ingredient)
        else:
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_47_0)

GrilledCheese_2_48_0 = {
    "name": "GrilledCheese_2_48_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ zarko has cheese /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ zarko has bread /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "Say /$@!/ zarko has butter /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_2_48_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if is_in_room(ingredient):
            say("Zarko has " + ingredient)
        else:
            say("Zarko does not have " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_2_48_0)

GrilledCheese_2_49_0 = {
    "name": "GrilledCheese_2_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_2_49_0 = """
def task_program():
    go_to("Zarko's office")
    ingredients = ["cheese", "bread", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("Zarko does not have " + ingredient)
    go_to("kitchen")

"""

ordered_field_buffer.append(GrilledCheese_2_49_0)

GrilledCheese_3_0_0 = {
    "name": "GrilledCheese_3_0_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_0_0 = """
def task_program():
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have a?", ["bread", "cheese", "butter"])
    go_to("my office")
    say("Zarko does not have " + response)

"""

ordered_field_buffer.append(GrilledCheese_3_0_0)

GrilledCheese_3_1_0 = {
    "name": "GrilledCheese_3_1_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": 'SIM: TypeError: can only concatenate str (not "list") to str',
}

program_GrilledCheese_3_1_0 = """
def task_program():
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have" + ["bread", "cheese", "butter"], ["Yes", "No"])
    go_to("my office")
    say("Zarko does not have" + response)

"""

ordered_field_buffer.append(GrilledCheese_3_1_0)

GrilledCheese_3_2_0 = {
    "name": "GrilledCheese_3_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_2_0 = """
def task_program():
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter"]
    list_of_ingredients_not_available = []
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            list_of_ingredients_not_available.append(ingredient)
    go_to("my office")
    message = ""
    for ingredient in list_of_ingredients_not_available:
        message += ingredient + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_2_0)

GrilledCheese_3_3_0 = {
    "name": "GrilledCheese_3_3_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_3_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have a bread?", ["Yes", "No"])
    if response == "No":
        go_to(start_loc)
        say("Zarko does not have a bread")
        return
    go_to("kitchen")
    response = ask("", "Do you have a butter knife?", ["Yes", "No"])
    if response == "No":
        go_to(start_loc)
        say("I do not have a butter knife")
        return
    go_to("kitchen")
    response = ask("", "Do you have a cheese?", ["Yes", "No"])
    if response == "No":
        go_to(start_loc)
        say("I do not have a cheese")
        return
    go_to(start_loc)
    say("I have all the necessary ingredients for grilled cheese")

"""

ordered_field_buffer.append(GrilledCheese_3_3_0)

GrilledCheese_3_4_0 = {
    "name": "GrilledCheese_3_4_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_4_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    items_not_found = []
    for item in items:
        if not is_in_room(item):
            items_not_found.append(item)
    go_to("my office")
    message = ""
    for item in items_not_found:
        message += item + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_4_0)

GrilledCheese_3_5_0 = {
    "name": "GrilledCheese_3_5_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": 'SIM: TypeError: can only concatenate str (not "list") to str',
}

program_GrilledCheese_3_5_0 = """
def task_program():
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have" + ["bread", "cheese", "butter"], ["Yes", "No"])
    go_to("Eve's office")
    say("Zarko does not have" + response)

"""

ordered_field_buffer.append(GrilledCheese_3_5_0)

GrilledCheese_3_6_0 = {
    "name": "GrilledCheese_3_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have a bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have a cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have a butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_6_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have a bread?", ["Yes", "No"])
    bread = response == "Yes"
    response = ask("Zarko", "Do you have a cheese?", ["Yes", "No"])
    cheese = response == "Yes"
    response = ask("Zarko", "Do you have a butter?", ["Yes", "No"])
    butter = response == "Yes"
    go_to(start_loc)
    if not bread:
        say("Zarko does not have a bread")
    if not cheese:
        say("Zarko does not have a cheese")
    if not butter:
        say("Zarko does not have a butter")

"""

ordered_field_buffer.append(GrilledCheese_3_6_0)

GrilledCheese_3_7_0 = {
    "name": "GrilledCheese_3_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_7_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter", "knife"]
    items_not_found = []
    for item in items:
        if not is_in_room(item):
            items_not_found.append(item)
    go_to("my office")
    message = ""
    for item in items_not_found:
        message += item + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_7_0)

GrilledCheese_3_8_0 = {
    "name": "GrilledCheese_3_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have a? /$@!/ ['bread', 'cheese', 'butter']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko does not have bread /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_8_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have a?", ["bread", "cheese", "butter"])
    go_to(start_loc)
    say("Zarko does not have " + response)

"""

ordered_field_buffer.append(GrilledCheese_3_8_0)

GrilledCheese_3_9_0 = {
    "name": "GrilledCheese_3_9_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_9_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    items_not_found = []
    for item in items:
        if not is_in_room(item):
            items_not_found.append(item)
    go_to("my office")
    message = ""
    for item in items_not_found:
        message += item + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_9_0)

GrilledCheese_3_10_0 = {
    "name": "GrilledCheese_3_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_10_0 = """
def task_program():
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            list_of_ingredients_not_found.append(ingredient)
    go_to("my office")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_10_0)

GrilledCheese_3_11_0 = {
    "name": "GrilledCheese_3_11_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are not in zarko's office /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_11_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    items_not_found = []
    for item in items:
        if not is_in_room(item):
            items_not_found.append(item)
    go_to(start_loc)
    message = ""
    for item in items_not_found:
        message += item + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_11_0)

GrilledCheese_3_12_0 = {
    "name": "GrilledCheese_3_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_12_0 = """
def task_program():
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter"]
    list_of_ingredients_not_available = []
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            list_of_ingredients_not_available.append(ingredient)
    go_to("my office")
    message = ""
    for ingredient in list_of_ingredients_not_available:
        message += ingredient + ", "
    message += "are not available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_12_0)

GrilledCheese_3_13_0 = {
    "name": "GrilledCheese_3_13_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_13_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    items_not_found = []
    for item in items:
        if not is_in_room(item):
            items_not_found.append(item)
    go_to("my office")
    message = ""
    for item in items_not_found:
        message += item + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_13_0)

GrilledCheese_3_14_0 = {
    "name": "GrilledCheese_3_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_14_0 = """
def task_program():
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have a?", ["bread", "cheese"])
    go_to("kitchen")
    say("Zarko does not have " + response)

"""

ordered_field_buffer.append(GrilledCheese_3_14_0)

GrilledCheese_3_15_0 = {
    "name": "GrilledCheese_3_15_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_15_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    items_not_found = []
    for item in items:
        if not is_in_room(item):
            items_not_found.append(item)
    go_to("my office")
    message = ""
    for item in items_not_found:
        message += item + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_15_0)

GrilledCheese_3_16_0 = {
    "name": "GrilledCheese_3_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread, cheese, and butter? /$@!/ ['yes', 'no']",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_16_0 = """
def task_program():
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have bread, cheese, and butter?", ["Yes", "No"])
    if response == "Yes":
        say("Zarko has all the ingredients")
    else:
        say("Zarko does not have all the ingredients")

"""

ordered_field_buffer.append(GrilledCheese_3_16_0)

GrilledCheese_3_17_0 = {
    "name": "GrilledCheese_3_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_17_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    items_not_found = []
    for item in items:
        if not is_in_room(item):
            items_not_found.append(item)
    go_to("Eve's office")
    message = ""
    for item in items_not_found:
        message += item + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_17_0)

GrilledCheese_3_18_0 = {
    "name": "GrilledCheese_3_18_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_18_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter", "ketchup"]
    unavailable_items = []
    for item in items:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            unavailable_items.append(item)
    go_to("Eve's office")
    message = ""
    for item in unavailable_items:
        message += item + ", "
    message += "are not available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_18_0)

GrilledCheese_3_19_0 = {
    "name": "GrilledCheese_3_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_19_0 = """
def task_program():
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            list_of_ingredients_not_found.append(ingredient)
    go_to("my office")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_19_0)

GrilledCheese_3_20_0 = {
    "name": "GrilledCheese_3_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_20_0 = """
def task_program():
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            list_of_ingredients_not_found.append(ingredient)
    go_to("Eve's office")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_20_0)

GrilledCheese_3_21_0 = {
    "name": "GrilledCheese_3_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_21_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter", "ketchup"]
    items_not_found = []
    for item in items:
        if not is_in_room(item):
            items_not_found.append(item)
    go_to("my office")
    message = ""
    for item in items_not_found:
        message += item + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_21_0)

GrilledCheese_3_22_0 = {
    "name": "GrilledCheese_3_22_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: SyntaxError: EOL while scanning string literal",
}

program_GrilledCheese_3_22_0 = """
def task_program():
    go_to("Zarko's office")
    if is_in_room("bread"):
        pick("bread")
    if is_in_room("cheese"):
        pick("cheese")
    go_to("kitchen")
    if is_in_room("butter"):
        pick("butter")
    go_to("Zarko's office")
    if is_in_room("pan"):
        pick("pan")
    go_to("kitchen")
    if is_in_room("ketchup"):
        pick("ketchup")
    go_to("Zarko's office")
    if is_in_room("knife"):
        pick("knife")
    go_to("kitchen")
    if is_in_room("fork"):
        pick("fork")
    go_to("Zarko's office")
    if is_in_room("oven"):
        pick("oven")
    go_to("kitchen")
    if is_in_room("stove"):
        pick("stove")
    go_to("Zarko's office")
    if is_in_room("sink"):
        pick("sink")
    go_to("kitchen")
    if is_in_room("salt"):
        pick("salt")
    go_to("Zarko's office")
    if is_in_room("pepper"):
        pick("pepper")
    go_to("kitchen")
    if is_in_room("garlic"):
        pick("garlic")
    go_to("Zarko's office")
    if is_in_room("onion"):
        pick("onion")
    go_to("kitchen")
    if is_in_room("mayo"):
        pick("mayo")
    go_to("Zarko's office")
    if is_in_room("mustard"):
        pick("mustard")
    go_to("kitchen")
    if is_in_room("tomato"):
        pick("tom
"""

ordered_field_buffer.append(GrilledCheese_3_22_0)

GrilledCheese_3_23_0 = {
    "name": "GrilledCheese_3_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_23_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    items_not_found = []
    for item in items:
        if not is_in_room(item):
            items_not_found.append(item)
    go_to("my office")
    message = ""
    for item in items_not_found:
        message += item + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_23_0)

GrilledCheese_3_24_0 = {
    "name": "GrilledCheese_3_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_24_0 = """
def task_program():
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            list_of_ingredients_not_found.append(ingredient)
    go_to("my office")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_24_0)

GrilledCheese_3_25_0 = {
    "name": "GrilledCheese_3_25_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_25_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    unavailable_items = []
    for item in items:
        if not is_in_room(item):
            unavailable_items.append(item)
    go_to("my office")
    message = "Zarko does not have the following items: "
    for item in unavailable_items:
        message += item + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_25_0)

GrilledCheese_3_26_0 = {
    "name": "GrilledCheese_3_26_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_26_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    items_not_found = []
    for item in items:
        if not is_in_room(item):
            items_not_found.append(item)
    go_to("my office")
    message = ""
    for item in items_not_found:
        message += item + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_26_0)

GrilledCheese_3_27_0 = {
    "name": "GrilledCheese_3_27_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": 'SIM: TypeError: can only concatenate str (not "list") to str',
}

program_GrilledCheese_3_27_0 = """
def task_program():
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have" + ["bread", "cheese", "butter"], ["Yes", "No"])
    go_to("Eve's office")
    say("Zarko does not have" + response)

"""

ordered_field_buffer.append(GrilledCheese_3_27_0)

GrilledCheese_3_28_0 = {
    "name": "GrilledCheese_3_28_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_28_0 = """
def task_program():
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have a?", ["bread", "cheese", "butter"])
    go_to("Eve's office")
    say("Zarko does not have " + response)

"""

ordered_field_buffer.append(GrilledCheese_3_28_0)

GrilledCheese_3_29_0 = {
    "name": "GrilledCheese_3_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have a? /$@!/ ['bread', 'cheese', 'butter']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko does not have bread /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_29_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have a?", ["bread", "cheese", "butter"])
    go_to(start_loc)
    say("Zarko does not have " + response)

"""

ordered_field_buffer.append(GrilledCheese_3_29_0)

GrilledCheese_3_30_0 = {
    "name": "GrilledCheese_3_30_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_30_0 = """
def task_program():
    go_to("Zarko's office")
    list_of_items = ["bread", "cheese", "butter", "ketchup"]
    unavailable_items = []
    for item in list_of_items:
        if not is_in_room(item):
            unavailable_items.append(item)
    go_to("my office")
    message = "Zarko does not have the following items: "
    for item in unavailable_items:
        message += item + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_30_0)

GrilledCheese_3_31_0 = {
    "name": "GrilledCheese_3_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_31_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    unavailable_items = []
    for item in items:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            unavailable_items.append(item)
    go_to("my office")
    message = ""
    for item in unavailable_items:
        message += item + ", "
    message += "are not available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_31_0)

GrilledCheese_3_32_0 = {
    "name": "GrilledCheese_3_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_32_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter", "ketchup"]
    unavailable_items = []
    for item in items:
        if not is_in_room(item):
            unavailable_items.append(item)
    go_to("my office")
    message = ""
    for item in unavailable_items:
        message += item + ", "
    message += "are not available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_32_0)

GrilledCheese_3_33_0 = {
    "name": "GrilledCheese_3_33_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_33_0 = """
def task_program():
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have a bread?", ["Yes", "No"])
    if response == "No":
        go_to("kitchen")
        pick("bread")
        go_to("Zarko's office")
        place("bread")
    response = ask("Zarko", "Do you have a cheese?", ["Yes", "No"])
    if response == "No":
        go_to("kitchen")
        pick("cheese")
        go_to("Zarko's office")
        place("cheese")
    response = ask("Zarko", "Do you have a butter?", ["Yes", "No"])
    if response == "No":
        go_to("kitchen")
        pick("butter")
        go_to("Zarko's office")
        place("butter")
    go_to("kitchen")
    pick("pan")
    go_to("Zarko's office")
    place("pan")
    go_to("kitchen")
    pick("knife")
    go_to("Zarko's office")
    place("knife")
    go_to("kitchen")
    pick("bun")
    go_to("Zarko's office")
    place("bun")
    go_to("kitchen")
    pick("tomato")
    go_to("Zarko's office")
    place("tomato")
    go_to("kitchen")
    pick("lettuce")
    go_to("Zarko's office")
    place("lettuce")
    go_to("kitchen")
    pick("ketchup")
    go_to("Zarko's office")
    place("ketchup")
    go_to("kitchen")
    pick("mustard")
    go_to("Zarko's office")
    place("mustard")
    go_to("kitchen")
    pick("mayonnaise")
    go_to("Zarko's office")
    place("mayonnaise")
    go
"""

ordered_field_buffer.append(GrilledCheese_3_33_0)

GrilledCheese_3_34_0 = {
    "name": "GrilledCheese_3_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_34_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    unavailable_items = []
    for item in items:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            unavailable_items.append(item)
    go_to("my office")
    message = ""
    for item in unavailable_items:
        message += item + ", "
    message += "are not available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_34_0)

GrilledCheese_3_35_0 = {
    "name": "GrilledCheese_3_35_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_35_0 = """
def task_program():
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter"]
    list_of_ingredients_not_found = []
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            list_of_ingredients_not_found.append(ingredient)
    go_to("my office")
    message = ""
    for ingredient in list_of_ingredients_not_found:
        message += ingredient + ", "
    if message != "":
        say(message + "are not in Zarko's office")
    else:
        say("all ingredients are in Zarko's office")

"""

ordered_field_buffer.append(GrilledCheese_3_35_0)

GrilledCheese_3_36_0 = {
    "name": "GrilledCheese_3_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_36_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    unavailable_items = []
    for item in items:
        if not is_in_room(item):
            unavailable_items.append(item)
    go_to("my office")
    message = ""
    for item in unavailable_items:
        message += item + ", "
    message += "are not available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_36_0)

GrilledCheese_3_37_0 = {
    "name": "GrilledCheese_3_37_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_37_0 = """
def task_program():
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter"]
    list_of_ingredients_not_available = []
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            list_of_ingredients_not_available.append(ingredient)
    go_to("my office")
    message = ""
    for ingredient in list_of_ingredients_not_available:
        message += ingredient + ", "
    if message != "":
        say("Zarko does not have the following ingredients: " + message)
    else:
        say("Zarko has all the ingredients")

"""

ordered_field_buffer.append(GrilledCheese_3_37_0)

GrilledCheese_3_38_0 = {
    "name": "GrilledCheese_3_38_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_38_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    items_not_found = []
    for item in items:
        if not is_in_room(item):
            items_not_found.append(item)
    go_to("my office")
    message = ""
    for item in items_not_found:
        message += item + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_38_0)

GrilledCheese_3_39_0 = {
    "name": "GrilledCheese_3_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_39_0 = """
def task_program():
    go_to("Zarko's office")
    list_of_ingredients = ["bread", "cheese", "butter"]
    list_of_missing_ingredients = []
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            list_of_missing_ingredients.append(ingredient)
    go_to("my office")
    message = ""
    for ingredient in list_of_missing_ingredients:
        message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_39_0)

GrilledCheese_3_40_0 = {
    "name": "GrilledCheese_3_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_40_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    unavailable_items = []
    for item in items:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            unavailable_items.append(item)
    go_to("Eve's office")
    message = ""
    for item in unavailable_items:
        message += item + ", "
    message += "are not available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_40_0)

GrilledCheese_3_41_0 = {
    "name": "GrilledCheese_3_41_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotPickError: removeObject failed",
}

program_GrilledCheese_3_41_0 = """
def task_program():
    go_to("Zarko's office")
    if is_in_room("bread"):
        pick("bread")
    if is_in_room("cheese"):
        pick("cheese")
    go_to("kitchen")
    if is_in_room("butter"):
        pick("butter")
    if is_in_room("knife"):
        pick("knife")
    go_to("Zarko's office")
    if not is_in_room("bread"):
        say("Zarko does not have bread")
    if not is_in_room("cheese"):
        say("Zarko does not have cheese")
    go_to("kitchen")
    if not is_in_room("butter"):
        say("Zarko does not have butter")
    if not is_in_room("knife"):
        say("Zarko does not have a knife")

"""

ordered_field_buffer.append(GrilledCheese_3_41_0)

GrilledCheese_3_42_0 = {
    "name": "GrilledCheese_3_42_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_42_0 = """
def task_program():
    go_to("Zarko's office")
    list_of_items = ["bread", "cheese", "butter", "ketchup"]
    items_not_available = []
    for item in list_of_items:
        if not is_in_room(item):
            items_not_available.append(item)
    go_to("my office")
    message = ""
    for item in items_not_available:
        message += item + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_42_0)

GrilledCheese_3_43_0 = {
    "name": "GrilledCheese_3_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have a? /$@!/ ['bread', 'cheese', 'butter']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko does not have bread /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_3_43_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have a?", ["bread", "cheese", "butter"])
    go_to(start_loc)
    say("Zarko does not have " + response)

"""

ordered_field_buffer.append(GrilledCheese_3_43_0)

GrilledCheese_3_44_0 = {
    "name": "GrilledCheese_3_44_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": 'SIM: TypeError: can only concatenate str (not "list") to str',
}

program_GrilledCheese_3_44_0 = """
def task_program():
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have" + ["bread", "cheese", "butter", "ketchup"], ["Yes", "No"])
    go_to("my office")
    say("Zarko does not have" + response)

"""

ordered_field_buffer.append(GrilledCheese_3_44_0)

GrilledCheese_3_45_0 = {
    "name": "GrilledCheese_3_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_45_0 = """
def task_program():
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have a bread?", ["Yes", "No"])
    if response == "No":
        go_to("kitchen")
        pick("bread")
        go_to("Zarko's office")
        place("bread")
    response = ask("Zarko", "Do you have a cheese?", ["Yes", "No"])
    if response == "No":
        go_to("kitchen")
        pick("cheese")
        go_to("Zarko's office")
        place("cheese")
    response = ask("Zarko", "Do you have a butter?", ["Yes", "No"])
    if response == "No":
        go_to("kitchen")
        pick("butter")
        go_to("Zarko's office")
        place("butter")
    go_to("kitchen")
    pick("grill")
    go_to("Zarko's office")
    place("grill")
    go_to("kitchen")
    pick("knife")
    go_to("Zarko's office")
    place("knife")
    go_to("kitchen")
    pick("plate")
    go_to("Zarko's office")
    place("plate")
    go_to("kitchen")
    pick("tomato")
    go_to("Zarko's office")
    place("tomato")
    go_to("kitchen")
    pick("lettuce")
    go_to("Zarko's office")
    place("lettuce")
    go_to("kitchen")
    pick("ketchup")
    go_to("Zarko's office")
    place("ketchup")
    go_to("kitchen")
    pick("mayonnaise")
    go_to("Zarko's office")
    place("mayonnaise")
    go_to("kitchen")
    pick("salt")
    go_to("Zarko's office")
    place("salt")
    go
"""

ordered_field_buffer.append(GrilledCheese_3_45_0)

GrilledCheese_3_46_0 = {
    "name": "GrilledCheese_3_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_46_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    items_not_found = []
    for item in items:
        if not is_in_room(item):
            items_not_found.append(item)
    go_to("my office")
    message = ""
    for item in items_not_found:
        message += item + ", "
    message += "are not in Zarko's office"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_46_0)

GrilledCheese_3_47_0 = {
    "name": "GrilledCheese_3_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_47_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    unavailable_items = []
    for item in items:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            unavailable_items.append(item)
    go_to("my office")
    message = ""
    for item in unavailable_items:
        message += item + ", "
    message += "are not available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_47_0)

GrilledCheese_3_48_0 = {
    "name": "GrilledCheese_3_48_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_48_0 = """
def task_program():
    go_to("Zarko's office")
    response = ask("Zarko", "Do you have a bread?", ["Yes", "No"])
    if response == "No":
        go_to("kitchen")
        pick("bread")
        go_to("Zarko's office")
        place("bread")
    response = ask("Zarko", "Do you have a cheese?", ["Yes", "No"])
    if response == "No":
        go_to("kitchen")
        pick("cheese")
        go_to("Zarko's office")
        place("cheese")
    response = ask("Zarko", "Do you have a butter?", ["Yes", "No"])
    if response == "No":
        go_to("kitchen")
        pick("butter")
        go_to("Zarko's office")
        place("butter")
    go_to("kitchen")
    pick("pan")
    go_to("Zarko's office")
    place("pan")
    go_to("kitchen")
    pick("knife")
    go_to("Zarko's office")
    place("knife")
    go_to("kitchen")
    pick("bun")
    go_to("Zarko's office")
    place("bun")
    go_to("kitchen")
    pick("tomato")
    go_to("Zarko's office")
    place("tomato")
    go_to("kitchen")
    pick("lettuce")
    go_to("Zarko's office")
    place("lettuce")
    go_to("kitchen")
    pick("mayonnaise")
    go_to("Zarko's office")
    place("mayonnaise")
    go_to("kitchen")
    pick("ketchup")
    go_to("Zarko's office")
    place("ketchup")
    go_to("kitchen")
    pick("mustard")
    go_to("Zarko's office")
    place("mustard")
    go
"""

ordered_field_buffer.append(GrilledCheese_3_48_0)

GrilledCheese_3_49_0 = {
    "name": "GrilledCheese_3_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_3_49_0 = """
def task_program():
    go_to("Zarko's office")
    items = ["bread", "cheese", "butter"]
    unavailable_items = []
    for item in items:
        response = ask("Zarko", "Do you have " + item + "?", ["Yes", "No"])
        if response == "No":
            unavailable_items.append(item)
    go_to("my office")
    message = ""
    for item in unavailable_items:
        message += item + ", "
    message += "are not available"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_3_49_0)

GrilledCheese_4_0_0 = {
    "name": "GrilledCheese_4_0_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_0_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.remove("bread")
    if not is_in_room("cheese"):
        ingredients.remove("cheese")
    go_to("kitchen")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_0_0)

GrilledCheese_4_1_0 = {
    "name": "GrilledCheese_4_1_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_1_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("We are missing " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_4_1_0)

GrilledCheese_4_2_0 = {
    "name": "GrilledCheese_4_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have tomato? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have lettuce? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_2_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese", "butter", "tomato", "lettuce"]
    list_of_ingredients_available = []
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "Yes":
            list_of_ingredients_available.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_ingredients:
        if ingredient not in list_of_ingredients_available:
            message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_4_2_0)

GrilledCheese_4_3_0 = {
    "name": "GrilledCheese_4_3_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_3_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say(ingredient + " is missing")

"""

ordered_field_buffer.append(GrilledCheese_4_3_0)

GrilledCheese_4_4_0 = {
    "name": "GrilledCheese_4_4_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_4_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("living room")
    say("Zarko is missing the following ingredients:")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say(ingredient)

"""

ordered_field_buffer.append(GrilledCheese_4_4_0)

GrilledCheese_4_5_0 = {
    "name": "GrilledCheese_4_5_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_5_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("Arjun's office")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_5_0)

GrilledCheese_4_6_0 = {
    "name": "GrilledCheese_4_6_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_6_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("living room")
    say("Zarko is missing the following ingredients:")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say(ingredient)

"""

ordered_field_buffer.append(GrilledCheese_4_6_0)

GrilledCheese_4_7_0 = {
    "name": "GrilledCheese_4_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotPickError: removeObject failed",
}

program_GrilledCheese_4_7_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        if is_in_room(ingredient):
            pick(ingredient)
    missing_ingredients = []
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            missing_ingredients.append(ingredient)
    go_to(start_loc)
    say("Zarko is missing the following ingredients: " + missing_ingredients)

"""

ordered_field_buffer.append(GrilledCheese_4_7_0)

GrilledCheese_4_8_0 = {
    "name": "GrilledCheese_4_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_8_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.remove("bread")
    if not is_in_room("cheese"):
        ingredients.remove("cheese")
    go_to("kitchen")
    say("Zarko is missing " + str(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_8_0)

GrilledCheese_4_9_0 = {
    "name": "GrilledCheese_4_9_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_9_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("living room")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_9_0)

GrilledCheese_4_10_0 = {
    "name": "GrilledCheese_4_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_10_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("living room")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_10_0)

GrilledCheese_4_11_0 = {
    "name": "GrilledCheese_4_11_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko is missing the following ingredients: ['bread', 'cheese', 'butter'] /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_11_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            list_of_ingredients.remove(ingredient)
    go_to(start_loc)
    say("Zarko is missing the following ingredients: " + str(list_of_ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_11_0)

GrilledCheese_4_12_0 = {
    "name": "GrilledCheese_4_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_12_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.remove("bread")
    if not is_in_room("cheese"):
        ingredients.remove("cheese")
    go_to("kitchen")
    say("Zarko is missing " + str(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_12_0)

GrilledCheese_4_13_0 = {
    "name": "GrilledCheese_4_13_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_13_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_13_0)

GrilledCheese_4_14_0 = {
    "name": "GrilledCheese_4_14_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_14_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            go_to(start_loc)
            say("Zarko does not have " + ingredient)
            return
    go_to(start_loc)
    say("Zarko has all the ingredients")

"""

ordered_field_buffer.append(GrilledCheese_4_14_0)

GrilledCheese_4_15_0 = {
    "name": "GrilledCheese_4_15_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_15_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    if not is_in_room("butter"):
        ingredients.append("butter")
    if not is_in_room("ketchup"):
        ingredients.append("ketchup")
    go_to("Zarko's office")
    say("I need " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_15_0)

GrilledCheese_4_16_0 = {
    "name": "GrilledCheese_4_16_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_16_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("living room")
    say("Zarko is missing ingredients: " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_16_0)

GrilledCheese_4_17_0 = {
    "name": "GrilledCheese_4_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_17_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("Arjun's office")
    say("Zarko is missing the following ingredients: " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_17_0)

GrilledCheese_4_18_0 = {
    "name": "GrilledCheese_4_18_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_18_0 = """
def task_program():
    start_loc = get_current_location()
    go_to("Zarko's office")
    ingredients = ["bread", "cheese", "butter"]
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            go_to(start_loc)
            say("Zarko is missing " + ingredient)
            return
    go_to(start_loc)
    say("Zarko has all ingredients")

"""

ordered_field_buffer.append(GrilledCheese_4_18_0)

GrilledCheese_4_19_0 = {
    "name": "GrilledCheese_4_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_19_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say("I need " + ingredient)

"""

ordered_field_buffer.append(GrilledCheese_4_19_0)

GrilledCheese_4_20_0 = {
    "name": "GrilledCheese_4_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_20_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_20_0)

GrilledCheese_4_21_0 = {
    "name": "GrilledCheese_4_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_21_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    message = ""
    for ingredient in ingredients:
        message += ingredient + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_4_21_0)

GrilledCheese_4_22_0 = {
    "name": "GrilledCheese_4_22_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_22_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.remove("bread")
    if not is_in_room("cheese"):
        ingredients.remove("cheese")
    go_to("kitchen")
    say("Zarko is missing " + str(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_22_0)

GrilledCheese_4_23_0 = {
    "name": "GrilledCheese_4_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_23_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_23_0)

GrilledCheese_4_24_0 = {
    "name": "GrilledCheese_4_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_24_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("living room")
    say("Zarko is missing ingredients: " + str(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_24_0)

GrilledCheese_4_25_0 = {
    "name": "GrilledCheese_4_25_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_25_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("living room")
    say("Zarko is missing ingredients: " + str(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_25_0)

GrilledCheese_4_26_0 = {
    "name": "GrilledCheese_4_26_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ bread is missing /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ cheese is missing /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "Say /$@!/ butter is missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_26_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to(start_loc)
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say(ingredient + " is missing")

"""

ordered_field_buffer.append(GrilledCheese_4_26_0)

GrilledCheese_4_27_0 = {
    "name": "GrilledCheese_4_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "Ask /$@!/ do you have bread? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have cheese? /$@!/ ['yes', 'no']",
        "Ask /$@!/ do you have butter? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ are missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_27_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese", "butter"]
    list_of_ingredients_available = []
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        response = ask("Zarko", "Do you have " + ingredient + "?", ["Yes", "No"])
        if response == "Yes":
            list_of_ingredients_available.append(ingredient)
    go_to(start_loc)
    message = ""
    for ingredient in list_of_ingredients:
        if ingredient not in list_of_ingredients_available:
            message += ingredient + ", "
    message += "are missing"
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_4_27_0)

GrilledCheese_4_28_0 = {
    "name": "GrilledCheese_4_28_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_28_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.remove("bread")
    if not is_in_room("cheese"):
        ingredients.remove("cheese")
    go_to("kitchen")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_28_0)

GrilledCheese_4_29_0 = {
    "name": "GrilledCheese_4_29_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_29_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    message = ""
    for ingredient in ingredients:
        message += ingredient + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_4_29_0)

GrilledCheese_4_30_0 = {
    "name": "GrilledCheese_4_30_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_30_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    if not is_in_room("butter"):
        ingredients.append("butter")
    if not is_in_room("ketchup"):
        ingredients.append("ketchup")
    go_to("Zarko's office")
    say("I am missing the following ingredients: " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_30_0)

GrilledCheese_4_31_0 = {
    "name": "GrilledCheese_4_31_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "Say /$@!/ bread is missing /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "Say /$@!/ cheese is missing /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_31_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to(start_loc)
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            say(ingredient + " is missing")

"""

ordered_field_buffer.append(GrilledCheese_4_31_0)

GrilledCheese_4_32_0 = {
    "name": "GrilledCheese_4_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_32_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("Arjun's office")
    say("I am missing the following ingredients: " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_32_0)

GrilledCheese_4_33_0 = {
    "name": "GrilledCheese_4_33_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_33_0 = """
def task_program():
    start_loc = get_current_location()
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to(start_loc)
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say(ingredient + " is missing")
    go_to(start_loc)

"""

ordered_field_buffer.append(GrilledCheese_4_33_0)

GrilledCheese_4_34_0 = {
    "name": "GrilledCheese_4_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_34_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("living room")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_34_0)

GrilledCheese_4_35_0 = {
    "name": "GrilledCheese_4_35_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ zarko's office /$@!/ None",
        "CheckEntity /$@!/ bread /$@!/ None",
        "CheckEntity /$@!/ cheese /$@!/ None",
        "CheckEntity /$@!/ butter /$@!/ None",
        "GoTo /$@!/ start_loc /$@!/ None",
        "Say /$@!/ zarko has all the ingredients /$@!/ None",
    ],
    "error_message": "",
}

program_GrilledCheese_4_35_0 = """
def task_program():
    start_loc = get_current_location()
    list_of_ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in list_of_ingredients:
        if not is_in_room(ingredient):
            go_to(start_loc)
            say("Zarko is missing " + ingredient)
            return
    go_to(start_loc)
    say("Zarko has all the ingredients")

"""

ordered_field_buffer.append(GrilledCheese_4_35_0)

GrilledCheese_4_36_0 = {
    "name": "GrilledCheese_4_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_36_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_36_0)

GrilledCheese_4_37_0 = {
    "name": "GrilledCheese_4_37_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_37_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_37_0)

GrilledCheese_4_38_0 = {
    "name": "GrilledCheese_4_38_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_38_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("living room")
    say("Zarko is missing the following ingredients: " + str(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_38_0)

GrilledCheese_4_39_0 = {
    "name": "GrilledCheese_4_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_39_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_39_0)

GrilledCheese_4_40_0 = {
    "name": "GrilledCheese_4_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_40_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_40_0)

GrilledCheese_4_41_0 = {
    "name": "GrilledCheese_4_41_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_41_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("living room")
    say("Zarko is missing the following ingredients: " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_41_0)

GrilledCheese_4_42_0 = {
    "name": "GrilledCheese_4_42_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_42_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    say("Zarko is missing " + str(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_42_0)

GrilledCheese_4_43_0 = {
    "name": "GrilledCheese_4_43_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_43_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    message = ""
    for ingredient in ingredients:
        message += ingredient + ", "
    say(message)

"""

ordered_field_buffer.append(GrilledCheese_4_43_0)

GrilledCheese_4_44_0 = {
    "name": "GrilledCheese_4_44_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_44_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            go_to("Zarko's office")
            say("I need " + ingredient)
    go_to("kitchen")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_44_0)

GrilledCheese_4_45_0 = {
    "name": "GrilledCheese_4_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_45_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("living room")
    say("Zarko is missing the following ingredients:")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say(ingredient)

"""

ordered_field_buffer.append(GrilledCheese_4_45_0)

GrilledCheese_4_46_0 = {
    "name": "GrilledCheese_4_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_46_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("Arjun's office")
    say("I have everything I need to make a grilled cheese")

"""

ordered_field_buffer.append(GrilledCheese_4_46_0)

GrilledCheese_4_47_0 = {
    "name": "GrilledCheese_4_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_47_0 = """
def task_program():
    ingredients = ["bread", "cheese", "butter"]
    go_to("Zarko's office")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            pick(ingredient)
    go_to("kitchen")
    for ingredient in ingredients:
        place(ingredient)
    go_to("living room")
    say("Zarko is missing the following ingredients:")
    for ingredient in ingredients:
        if not is_in_room(ingredient):
            say(ingredient)

"""

ordered_field_buffer.append(GrilledCheese_4_47_0)

GrilledCheese_4_48_0 = {
    "name": "GrilledCheese_4_48_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_48_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    say("Zarko is missing " + ", ".join(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_48_0)

GrilledCheese_4_49_0 = {
    "name": "GrilledCheese_4_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_GrilledCheese_4_49_0 = """
def task_program():
    ingredients = ["bread", "cheese"]
    go_to("Zarko's office")
    if not is_in_room("bread"):
        ingredients.append("bread")
    if not is_in_room("cheese"):
        ingredients.append("cheese")
    go_to("kitchen")
    say("Zarko is missing " + str(ingredients))

"""

ordered_field_buffer.append(GrilledCheese_4_49_0)

LunchTime_0_0_0 = {
    "name": "LunchTime_0_0_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_0_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go for lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_0_0)

LunchTime_0_0_1 = {
    "name": "LunchTime_0_0_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_0_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go for lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_0_1)

LunchTime_0_1_0 = {
    "name": "LunchTime_0_1_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_1_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_1_0)

LunchTime_0_1_1 = {
    "name": "LunchTime_0_1_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_1_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_1_1)

LunchTime_0_2_0 = {
    "name": "LunchTime_0_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_2_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch")

"""

ordered_field_buffer.append(LunchTime_0_2_0)

LunchTime_0_2_1 = {
    "name": "LunchTime_0_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_2_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch")

"""

ordered_field_buffer.append(LunchTime_0_2_1)

LunchTime_0_3_0 = {
    "name": "LunchTime_0_3_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_3_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_3_0)

LunchTime_0_3_1 = {
    "name": "LunchTime_0_3_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_3_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_3_1)

LunchTime_0_4_0 = {
    "name": "LunchTime_0_4_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_4_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_4_0)

LunchTime_0_4_1 = {
    "name": "LunchTime_0_4_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_4_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_4_1)

LunchTime_0_5_0 = {
    "name": "LunchTime_0_5_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_5_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch")

"""

ordered_field_buffer.append(LunchTime_0_5_0)

LunchTime_0_5_1 = {
    "name": "LunchTime_0_5_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_5_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch")

"""

ordered_field_buffer.append(LunchTime_0_5_1)

LunchTime_0_6_0 = {
    "name": "LunchTime_0_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_6_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_6_0)

LunchTime_0_6_1 = {
    "name": "LunchTime_0_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_6_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_6_1)

LunchTime_0_7_0 = {
    "name": "LunchTime_0_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_7_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_7_0)

LunchTime_0_7_1 = {
    "name": "LunchTime_0_7_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_7_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_7_1)

LunchTime_0_8_0 = {
    "name": "LunchTime_0_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_8_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch")

"""

ordered_field_buffer.append(LunchTime_0_8_0)

LunchTime_0_8_1 = {
    "name": "LunchTime_0_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_8_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch")

"""

ordered_field_buffer.append(LunchTime_0_8_1)

LunchTime_0_9_0 = {
    "name": "LunchTime_0_9_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_9_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_9_0)

LunchTime_0_9_1 = {
    "name": "LunchTime_0_9_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_9_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_9_1)

LunchTime_0_10_0 = {
    "name": "LunchTime_0_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_10_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_10_0)

LunchTime_0_10_1 = {
    "name": "LunchTime_0_10_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_10_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_10_1)

LunchTime_0_11_0 = {
    "name": "LunchTime_0_11_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_11_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_0_11_0)

LunchTime_0_11_1 = {
    "name": "LunchTime_0_11_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_11_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_0_11_1)

LunchTime_0_12_0 = {
    "name": "LunchTime_0_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_12_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_0_12_0)

LunchTime_0_12_1 = {
    "name": "LunchTime_0_12_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_12_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_0_12_1)

LunchTime_0_13_0 = {
    "name": "LunchTime_0_13_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_13_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_13_0)

LunchTime_0_13_1 = {
    "name": "LunchTime_0_13_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_13_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_13_1)

LunchTime_0_14_0 = {
    "name": "LunchTime_0_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_14_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_14_0)

LunchTime_0_14_1 = {
    "name": "LunchTime_0_14_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_14_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_14_1)

LunchTime_0_15_0 = {
    "name": "LunchTime_0_15_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_15_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_15_0)

LunchTime_0_15_1 = {
    "name": "LunchTime_0_15_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_15_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_15_1)

LunchTime_0_16_0 = {
    "name": "LunchTime_0_16_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_16_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_16_0)

LunchTime_0_16_1 = {
    "name": "LunchTime_0_16_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_16_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_16_1)

LunchTime_0_17_0 = {
    "name": "LunchTime_0_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_17_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_17_0)

LunchTime_0_17_1 = {
    "name": "LunchTime_0_17_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_17_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_17_1)

LunchTime_0_18_0 = {
    "name": "LunchTime_0_18_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_18_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        message = "Jill said yes, " + response + " is a good time"
    else:
        message = "Jill said no"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(LunchTime_0_18_0)

LunchTime_0_18_1 = {
    "name": "LunchTime_0_18_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_18_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        message = "Jill said yes, " + response + " is a good time"
    else:
        message = "Jill said no"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(LunchTime_0_18_1)

LunchTime_0_19_0 = {
    "name": "LunchTime_0_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_19_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_19_0)

LunchTime_0_19_1 = {
    "name": "LunchTime_0_19_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_19_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_19_1)

LunchTime_0_20_0 = {
    "name": "LunchTime_0_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_20_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Jill's office")
        say("Jill said: " + response)
    else:
        go_to("Jill's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_20_0)

LunchTime_0_20_1 = {
    "name": "LunchTime_0_20_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_20_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Jill's office")
        say("Jill said: " + response)
    else:
        go_to("Jill's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_20_1)

LunchTime_0_21_0 = {
    "name": "LunchTime_0_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_21_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_21_0)

LunchTime_0_21_1 = {
    "name": "LunchTime_0_21_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_21_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_21_1)

LunchTime_0_22_0 = {
    "name": "LunchTime_0_22_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_22_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_22_0)

LunchTime_0_22_1 = {
    "name": "LunchTime_0_22_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_22_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_22_1)

LunchTime_0_23_0 = {
    "name": "LunchTime_0_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_23_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_23_0)

LunchTime_0_23_1 = {
    "name": "LunchTime_0_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_23_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_23_1)

LunchTime_0_24_0 = {
    "name": "LunchTime_0_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_24_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_24_0)

LunchTime_0_24_1 = {
    "name": "LunchTime_0_24_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_24_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_24_1)

LunchTime_0_25_0 = {
    "name": "LunchTime_0_25_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_25_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_25_0)

LunchTime_0_25_1 = {
    "name": "LunchTime_0_25_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_25_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_25_1)

LunchTime_0_26_0 = {
    "name": "LunchTime_0_26_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_26_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_26_0)

LunchTime_0_26_1 = {
    "name": "LunchTime_0_26_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_26_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_26_1)

LunchTime_0_27_0 = {
    "name": "LunchTime_0_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_27_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_27_0)

LunchTime_0_27_1 = {
    "name": "LunchTime_0_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_27_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_27_1)

LunchTime_0_28_0 = {
    "name": "LunchTime_0_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_28_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_28_0)

LunchTime_0_28_1 = {
    "name": "LunchTime_0_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_28_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_28_1)

LunchTime_0_29_0 = {
    "name": "LunchTime_0_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_29_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_29_0)

LunchTime_0_29_1 = {
    "name": "LunchTime_0_29_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_29_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_29_1)

LunchTime_0_30_0 = {
    "name": "LunchTime_0_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_30_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_30_0)

LunchTime_0_30_1 = {
    "name": "LunchTime_0_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_30_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_30_1)

LunchTime_0_31_0 = {
    "name": "LunchTime_0_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_31_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_31_0)

LunchTime_0_31_1 = {
    "name": "LunchTime_0_31_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_31_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_31_1)

LunchTime_0_32_0 = {
    "name": "LunchTime_0_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_32_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_32_0)

LunchTime_0_32_1 = {
    "name": "LunchTime_0_32_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_32_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_32_1)

LunchTime_0_33_0 = {
    "name": "LunchTime_0_33_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_33_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_33_0)

LunchTime_0_33_1 = {
    "name": "LunchTime_0_33_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_33_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_33_1)

LunchTime_0_34_0 = {
    "name": "LunchTime_0_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_34_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_34_0)

LunchTime_0_34_1 = {
    "name": "LunchTime_0_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_34_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_34_1)

LunchTime_0_35_0 = {
    "name": "LunchTime_0_35_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_35_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_35_0)

LunchTime_0_35_1 = {
    "name": "LunchTime_0_35_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_35_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_35_1)

LunchTime_0_36_0 = {
    "name": "LunchTime_0_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_36_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_36_0)

LunchTime_0_36_1 = {
    "name": "LunchTime_0_36_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_36_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_36_1)

LunchTime_0_37_0 = {
    "name": "LunchTime_0_37_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_37_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
    go_to("Arjun's office")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_37_0)

LunchTime_0_37_1 = {
    "name": "LunchTime_0_37_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_37_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
    go_to("Arjun's office")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_37_1)

LunchTime_0_38_0 = {
    "name": "LunchTime_0_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_38_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_38_0)

LunchTime_0_38_1 = {
    "name": "LunchTime_0_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_38_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_38_1)

LunchTime_0_39_0 = {
    "name": "LunchTime_0_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_39_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_0_39_0)

LunchTime_0_39_1 = {
    "name": "LunchTime_0_39_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_39_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_0_39_1)

LunchTime_0_40_0 = {
    "name": "LunchTime_0_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_40_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_40_0)

LunchTime_0_40_1 = {
    "name": "LunchTime_0_40_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_40_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_0_40_1)

LunchTime_0_41_0 = {
    "name": "LunchTime_0_41_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_41_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_41_0)

LunchTime_0_41_1 = {
    "name": "LunchTime_0_41_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_41_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_41_1)

LunchTime_0_42_0 = {
    "name": "LunchTime_0_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_42_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_42_0)

LunchTime_0_42_1 = {
    "name": "LunchTime_0_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_42_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_42_1)

LunchTime_0_43_0 = {
    "name": "LunchTime_0_43_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_43_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_43_0)

LunchTime_0_43_1 = {
    "name": "LunchTime_0_43_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_43_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_43_1)

LunchTime_0_44_0 = {
    "name": "LunchTime_0_44_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_44_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch")

"""

ordered_field_buffer.append(LunchTime_0_44_0)

LunchTime_0_44_1 = {
    "name": "LunchTime_0_44_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_44_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch")

"""

ordered_field_buffer.append(LunchTime_0_44_1)

LunchTime_0_45_0 = {
    "name": "LunchTime_0_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_45_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_0_45_0)

LunchTime_0_45_1 = {
    "name": "LunchTime_0_45_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_45_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_0_45_1)

LunchTime_0_46_0 = {
    "name": "LunchTime_0_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_46_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_46_0)

LunchTime_0_46_1 = {
    "name": "LunchTime_0_46_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_46_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_0_46_1)

LunchTime_0_47_0 = {
    "name": "LunchTime_0_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_47_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_0_47_0)

LunchTime_0_47_1 = {
    "name": "LunchTime_0_47_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_0_47_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_0_47_1)

LunchTime_0_48_0 = {
    "name": "LunchTime_0_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_48_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_48_0)

LunchTime_0_48_1 = {
    "name": "LunchTime_0_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_48_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_48_1)

LunchTime_0_49_0 = {
    "name": "LunchTime_0_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_49_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_49_0)

LunchTime_0_49_1 = {
    "name": "LunchTime_0_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_0_49_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_0_49_1)

LunchTime_1_0_0 = {
    "name": "LunchTime_1_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ how about 12:30? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said yes at 12:30 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_0_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            say("Jill said yes at 12:30")
        else:
            say("Jill said no at 12:30")
    else:
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_1_0_0)

LunchTime_1_0_1 = {
    "name": "LunchTime_1_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_0_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            say("Jill said yes at 12:30")
        else:
            say("Jill said no at 12:30")
    else:
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_1_0_1)

LunchTime_1_1_0 = {
    "name": "LunchTime_1_1_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_1_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_1_0)

LunchTime_1_1_1 = {
    "name": "LunchTime_1_1_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_1_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_1_1)

LunchTime_1_2_0 = {
    "name": "LunchTime_1_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_2_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_2_0)

LunchTime_1_2_1 = {
    "name": "LunchTime_1_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_2_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_2_1)

LunchTime_1_3_0 = {
    "name": "LunchTime_1_3_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_3_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_3_0)

LunchTime_1_3_1 = {
    "name": "LunchTime_1_3_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_3_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_3_1)

LunchTime_1_4_0 = {
    "name": "LunchTime_1_4_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_4_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_4_0)

LunchTime_1_4_1 = {
    "name": "LunchTime_1_4_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_4_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_4_1)

LunchTime_1_5_0 = {
    "name": "LunchTime_1_5_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_5_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_5_0)

LunchTime_1_5_1 = {
    "name": "LunchTime_1_5_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_5_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_5_1)

LunchTime_1_6_0 = {
    "name": "LunchTime_1_6_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_6_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_6_0)

LunchTime_1_6_1 = {
    "name": "LunchTime_1_6_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_6_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_6_1)

LunchTime_1_7_0 = {
    "name": "LunchTime_1_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_7_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_7_0)

LunchTime_1_7_1 = {
    "name": "LunchTime_1_7_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_7_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_7_1)

LunchTime_1_8_0 = {
    "name": "LunchTime_1_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_8_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Arjun's office")
        say("Jill said: " + response)
    else:
        go_to("Arjun's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_8_0)

LunchTime_1_8_1 = {
    "name": "LunchTime_1_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_8_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Arjun's office")
        say("Jill said: " + response)
    else:
        go_to("Arjun's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_8_1)

LunchTime_1_9_0 = {
    "name": "LunchTime_1_9_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_9_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30 or 1:30?", ["12:30", "1:30"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_9_0)

LunchTime_1_9_1 = {
    "name": "LunchTime_1_9_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_9_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30 or 1:30?", ["12:30", "1:30"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_9_1)

LunchTime_1_10_0 = {
    "name": "LunchTime_1_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_10_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_10_0)

LunchTime_1_10_1 = {
    "name": "LunchTime_1_10_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_10_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_10_1)

LunchTime_1_11_0 = {
    "name": "LunchTime_1_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_11_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Jill's office")
        say("Jill said: " + response)
    else:
        go_to("Jill's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_11_0)

LunchTime_1_11_1 = {
    "name": "LunchTime_1_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_11_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Jill's office")
        say("Jill said: " + response)
    else:
        go_to("Jill's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_11_1)

LunchTime_1_12_0 = {
    "name": "LunchTime_1_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_12_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_12_0)

LunchTime_1_12_1 = {
    "name": "LunchTime_1_12_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_12_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_12_1)

LunchTime_1_13_0 = {
    "name": "LunchTime_1_13_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_13_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_13_0)

LunchTime_1_13_1 = {
    "name": "LunchTime_1_13_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_13_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_13_1)

LunchTime_1_14_0 = {
    "name": "LunchTime_1_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_14_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30 or 1:30?", ["12:30", "1:30"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_14_0)

LunchTime_1_14_1 = {
    "name": "LunchTime_1_14_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_14_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30 or 1:30?", ["12:30", "1:30"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_14_1)

LunchTime_1_15_0 = {
    "name": "LunchTime_1_15_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_15_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_15_0)

LunchTime_1_15_1 = {
    "name": "LunchTime_1_15_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_15_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_15_1)

LunchTime_1_16_0 = {
    "name": "LunchTime_1_16_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_16_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_16_0)

LunchTime_1_16_1 = {
    "name": "LunchTime_1_16_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_16_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_16_1)

LunchTime_1_17_0 = {
    "name": "LunchTime_1_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_17_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:00 or 12:30?", ["12:00", "12:30"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_17_0)

LunchTime_1_17_1 = {
    "name": "LunchTime_1_17_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_17_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:00 or 12:30?", ["12:00", "12:30"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_17_1)

LunchTime_1_18_0 = {
    "name": "LunchTime_1_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_18_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Jill's office")
        say("Jill said: " + response)
    else:
        go_to("Jill's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_18_0)

LunchTime_1_18_1 = {
    "name": "LunchTime_1_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_18_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Jill's office")
        say("Jill said: " + response)
    else:
        go_to("Jill's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_18_1)

LunchTime_1_19_0 = {
    "name": "LunchTime_1_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_19_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Arjun's office")
        say("Jill said: " + response)
    else:
        go_to("Arjun's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_19_0)

LunchTime_1_19_1 = {
    "name": "LunchTime_1_19_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_19_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Arjun's office")
        say("Jill said: " + response)
    else:
        go_to("Arjun's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_19_1)

LunchTime_1_20_0 = {
    "name": "LunchTime_1_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_20_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_20_0)

LunchTime_1_20_1 = {
    "name": "LunchTime_1_20_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_20_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_20_1)

LunchTime_1_21_0 = {
    "name": "LunchTime_1_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_21_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_21_0)

LunchTime_1_21_1 = {
    "name": "LunchTime_1_21_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_21_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_21_1)

LunchTime_1_22_0 = {
    "name": "LunchTime_1_22_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_22_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_22_0)

LunchTime_1_22_1 = {
    "name": "LunchTime_1_22_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_22_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_22_1)

LunchTime_1_23_0 = {
    "name": "LunchTime_1_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_23_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Jill's office")
        say("Jill said: " + response)
    else:
        go_to("Jill's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_23_0)

LunchTime_1_23_1 = {
    "name": "LunchTime_1_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_23_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Jill's office")
        say("Jill said: " + response)
    else:
        go_to("Jill's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_23_1)

LunchTime_1_24_0 = {
    "name": "LunchTime_1_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_24_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_24_0)

LunchTime_1_24_1 = {
    "name": "LunchTime_1_24_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_24_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_24_1)

LunchTime_1_25_0 = {
    "name": "LunchTime_1_25_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_25_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_25_0)

LunchTime_1_25_1 = {
    "name": "LunchTime_1_25_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_25_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_25_1)

LunchTime_1_26_0 = {
    "name": "LunchTime_1_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ how about 12:30? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: yes, 12:30 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_26_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            say("Jill said: Yes, 12:30")
        else:
            say("Jill said: No, 12:30")
    else:
        say("Jill said: No")

"""

ordered_field_buffer.append(LunchTime_1_26_0)

LunchTime_1_26_1 = {
    "name": "LunchTime_1_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_26_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            say("Jill said: Yes, 12:30")
        else:
            say("Jill said: No, 12:30")
    else:
        say("Jill said: No")

"""

ordered_field_buffer.append(LunchTime_1_26_1)

LunchTime_1_27_0 = {
    "name": "LunchTime_1_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ how about 12:30? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: yes, 12:30 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_27_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            say("Jill said: Yes, 12:30")
        else:
            say("Jill said: No, 12:30")
    else:
        say("Jill said: No")

"""

ordered_field_buffer.append(LunchTime_1_27_0)

LunchTime_1_27_1 = {
    "name": "LunchTime_1_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_27_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            say("Jill said: Yes, 12:30")
        else:
            say("Jill said: No, 12:30")
    else:
        say("Jill said: No")

"""

ordered_field_buffer.append(LunchTime_1_27_1)

LunchTime_1_28_0 = {
    "name": "LunchTime_1_28_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_28_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30 or 1:30?", ["12:30", "1:30"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_28_0)

LunchTime_1_28_1 = {
    "name": "LunchTime_1_28_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_28_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30 or 1:30?", ["12:30", "1:30"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_28_1)

LunchTime_1_29_0 = {
    "name": "LunchTime_1_29_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_29_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_29_0)

LunchTime_1_29_1 = {
    "name": "LunchTime_1_29_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_29_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_29_1)

LunchTime_1_30_0 = {
    "name": "LunchTime_1_30_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_30_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_30_0)

LunchTime_1_30_1 = {
    "name": "LunchTime_1_30_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_30_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_30_1)

LunchTime_1_31_0 = {
    "name": "LunchTime_1_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_31_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_31_0)

LunchTime_1_31_1 = {
    "name": "LunchTime_1_31_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_31_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_31_1)

LunchTime_1_32_0 = {
    "name": "LunchTime_1_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_32_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_32_0)

LunchTime_1_32_1 = {
    "name": "LunchTime_1_32_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_32_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_32_1)

LunchTime_1_33_0 = {
    "name": "LunchTime_1_33_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_33_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_33_0)

LunchTime_1_33_1 = {
    "name": "LunchTime_1_33_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_33_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_33_1)

LunchTime_1_34_0 = {
    "name": "LunchTime_1_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_34_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_34_0)

LunchTime_1_34_1 = {
    "name": "LunchTime_1_34_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_34_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_34_1)

LunchTime_1_35_0 = {
    "name": "LunchTime_1_35_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_35_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30 or 1:30?", ["12:30", "1:30"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill is not free for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_35_0)

LunchTime_1_35_1 = {
    "name": "LunchTime_1_35_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_35_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30 or 1:30?", ["12:30", "1:30"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill is not free for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_35_1)

LunchTime_1_36_0 = {
    "name": "LunchTime_1_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ how about 12:30? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said 12:30 is good /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_36_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            say("Jill said 12:30 is good")
        else:
            say("Jill said 12:30 is not good")
    else:
        say("Jill is not free for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_36_0)

LunchTime_1_36_1 = {
    "name": "LunchTime_1_36_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill is not free for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_36_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            say("Jill said 12:30 is good")
        else:
            say("Jill said 12:30 is not good")
    else:
        say("Jill is not free for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_36_1)

LunchTime_1_37_0 = {
    "name": "LunchTime_1_37_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_37_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_37_0)

LunchTime_1_37_1 = {
    "name": "LunchTime_1_37_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_37_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_37_1)

LunchTime_1_38_0 = {
    "name": "LunchTime_1_38_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_38_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30 or 1:30?", ["12:30", "1:30"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_38_0)

LunchTime_1_38_1 = {
    "name": "LunchTime_1_38_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_38_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30 or 1:30?", ["12:30", "1:30"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_38_1)

LunchTime_1_39_0 = {
    "name": "LunchTime_1_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_39_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_39_0)

LunchTime_1_39_1 = {
    "name": "LunchTime_1_39_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_39_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_39_1)

LunchTime_1_40_0 = {
    "name": "LunchTime_1_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_40_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            message = "Jill said yes at 12:30"
        else:
            message = "Jill said no at 12:30"
    else:
        message = "Jill said no"
    go_to("Arjun's office")
    say(message)

"""

ordered_field_buffer.append(LunchTime_1_40_0)

LunchTime_1_40_1 = {
    "name": "LunchTime_1_40_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_40_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            message = "Jill said yes at 12:30"
        else:
            message = "Jill said no at 12:30"
    else:
        message = "Jill said no"
    go_to("Arjun's office")
    say(message)

"""

ordered_field_buffer.append(LunchTime_1_40_1)

LunchTime_1_41_0 = {
    "name": "LunchTime_1_41_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_41_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_41_0)

LunchTime_1_41_1 = {
    "name": "LunchTime_1_41_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_41_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_41_1)

LunchTime_1_42_0 = {
    "name": "LunchTime_1_42_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_42_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Arjun's office")
        say("Jill said: " + response)
    else:
        go_to("Arjun's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_42_0)

LunchTime_1_42_1 = {
    "name": "LunchTime_1_42_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_42_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Arjun's office")
        say("Jill said: " + response)
    else:
        go_to("Arjun's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_42_1)

LunchTime_1_43_0 = {
    "name": "LunchTime_1_43_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_43_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_43_0)

LunchTime_1_43_1 = {
    "name": "LunchTime_1_43_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_43_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_43_1)

LunchTime_1_44_0 = {
    "name": "LunchTime_1_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ how about 12:30? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said 12:30 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_44_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            say("Jill said 12:30")
        else:
            say("Jill said no")
    else:
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_1_44_0)

LunchTime_1_44_1 = {
    "name": "LunchTime_1_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_44_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            say("Jill said 12:30")
        else:
            say("Jill said no")
    else:
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_1_44_1)

LunchTime_1_45_0 = {
    "name": "LunchTime_1_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_45_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Arjun's office")
        say("Jill said: " + response)
    else:
        go_to("Arjun's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_45_0)

LunchTime_1_45_1 = {
    "name": "LunchTime_1_45_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_45_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Arjun's office")
        say("Jill said: " + response)
    else:
        go_to("Arjun's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_1_45_1)

LunchTime_1_46_0 = {
    "name": "LunchTime_1_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_46_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When can you go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_46_0)

LunchTime_1_46_1 = {
    "name": "LunchTime_1_46_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_46_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When can you go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_46_1)

LunchTime_1_47_0 = {
    "name": "LunchTime_1_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_47_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30 or 1:30?", ["12:30", "1:30"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_47_0)

LunchTime_1_47_1 = {
    "name": "LunchTime_1_47_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_1_47_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30 or 1:30?", ["12:30", "1:30"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said she is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_47_1)

LunchTime_1_48_0 = {
    "name": "LunchTime_1_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ how about 12:30? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: yes, 12:30 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_48_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            say("Jill said: Yes, 12:30")
        else:
            say("Jill said: No, 12:30")
    else:
        say("Jill said: No")

"""

ordered_field_buffer.append(LunchTime_1_48_0)

LunchTime_1_48_1 = {
    "name": "LunchTime_1_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_48_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            say("Jill said: Yes, 12:30")
        else:
            say("Jill said: No, 12:30")
    else:
        say("Jill said: No")

"""

ordered_field_buffer.append(LunchTime_1_48_1)

LunchTime_1_49_0 = {
    "name": "LunchTime_1_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ how about 12:30? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said 12:30 is good /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_49_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            say("Jill said 12:30 is good")
        else:
            say("Jill said 12:30 is not good")
    else:
        say("Jill is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_49_0)

LunchTime_1_49_1 = {
    "name": "LunchTime_1_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ are you free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill is not free to go for lunch tomorrow /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_1_49_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Are you free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "How about 12:30?", ["Yes", "No"])
        if response == "Yes":
            say("Jill said 12:30 is good")
        else:
            say("Jill said 12:30 is not good")
    else:
        say("Jill is not free to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_1_49_1)

LunchTime_2_0_0 = {
    "name": "LunchTime_2_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_0_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_0_0)

LunchTime_2_0_1 = {
    "name": "LunchTime_2_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_0_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_0_1)

LunchTime_2_1_0 = {
    "name": "LunchTime_2_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_1_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_1_0)

LunchTime_2_1_1 = {
    "name": "LunchTime_2_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_1_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_1_1)

LunchTime_2_2_0 = {
    "name": "LunchTime_2_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_2_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_2_0)

LunchTime_2_2_1 = {
    "name": "LunchTime_2_2_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_2_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_2_1)

LunchTime_2_3_0 = {
    "name": "LunchTime_2_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_3_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_3_0)

LunchTime_2_3_1 = {
    "name": "LunchTime_2_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_3_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_3_1)

LunchTime_2_4_0 = {
    "name": "LunchTime_2_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_4_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_4_0)

LunchTime_2_4_1 = {
    "name": "LunchTime_2_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_4_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_4_1)

LunchTime_2_5_0 = {
    "name": "LunchTime_2_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_5_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_5_0)

LunchTime_2_5_1 = {
    "name": "LunchTime_2_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_5_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_5_1)

LunchTime_2_6_0 = {
    "name": "LunchTime_2_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_6_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_6_0)

LunchTime_2_6_1 = {
    "name": "LunchTime_2_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_6_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_6_1)

LunchTime_2_7_0 = {
    "name": "LunchTime_2_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_7_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_7_0)

LunchTime_2_7_1 = {
    "name": "LunchTime_2_7_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_7_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_7_1)

LunchTime_2_8_0 = {
    "name": "LunchTime_2_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_8_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_8_0)

LunchTime_2_8_1 = {
    "name": "LunchTime_2_8_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_8_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_8_1)

LunchTime_2_9_0 = {
    "name": "LunchTime_2_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_9_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_9_0)

LunchTime_2_9_1 = {
    "name": "LunchTime_2_9_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_9_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_9_1)

LunchTime_2_10_0 = {
    "name": "LunchTime_2_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_10_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_10_0)

LunchTime_2_10_1 = {
    "name": "LunchTime_2_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_10_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_10_1)

LunchTime_2_11_0 = {
    "name": "LunchTime_2_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_11_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_11_0)

LunchTime_2_11_1 = {
    "name": "LunchTime_2_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_11_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_11_1)

LunchTime_2_12_0 = {
    "name": "LunchTime_2_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_12_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_12_0)

LunchTime_2_12_1 = {
    "name": "LunchTime_2_12_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_12_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_12_1)

LunchTime_2_13_0 = {
    "name": "LunchTime_2_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_13_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_13_0)

LunchTime_2_13_1 = {
    "name": "LunchTime_2_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_13_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_13_1)

LunchTime_2_14_0 = {
    "name": "LunchTime_2_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_14_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_14_0)

LunchTime_2_14_1 = {
    "name": "LunchTime_2_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_14_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_14_1)

LunchTime_2_15_0 = {
    "name": "LunchTime_2_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_15_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_15_0)

LunchTime_2_15_1 = {
    "name": "LunchTime_2_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_15_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_15_1)

LunchTime_2_16_0 = {
    "name": "LunchTime_2_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_16_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_16_0)

LunchTime_2_16_1 = {
    "name": "LunchTime_2_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_16_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_16_1)

LunchTime_2_17_0 = {
    "name": "LunchTime_2_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_17_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_17_0)

LunchTime_2_17_1 = {
    "name": "LunchTime_2_17_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_17_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_17_1)

LunchTime_2_18_0 = {
    "name": "LunchTime_2_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_18_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_18_0)

LunchTime_2_18_1 = {
    "name": "LunchTime_2_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_18_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_18_1)

LunchTime_2_19_0 = {
    "name": "LunchTime_2_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_19_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_19_0)

LunchTime_2_19_1 = {
    "name": "LunchTime_2_19_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_19_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_19_1)

LunchTime_2_20_0 = {
    "name": "LunchTime_2_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_20_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_20_0)

LunchTime_2_20_1 = {
    "name": "LunchTime_2_20_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_20_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_20_1)

LunchTime_2_21_0 = {
    "name": "LunchTime_2_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_21_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_21_0)

LunchTime_2_21_1 = {
    "name": "LunchTime_2_21_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_21_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_21_1)

LunchTime_2_22_0 = {
    "name": "LunchTime_2_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_22_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_22_0)

LunchTime_2_22_1 = {
    "name": "LunchTime_2_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_22_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_22_1)

LunchTime_2_23_0 = {
    "name": "LunchTime_2_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_23_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_23_0)

LunchTime_2_23_1 = {
    "name": "LunchTime_2_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_23_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_23_1)

LunchTime_2_24_0 = {
    "name": "LunchTime_2_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_24_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_24_0)

LunchTime_2_24_1 = {
    "name": "LunchTime_2_24_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_24_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_24_1)

LunchTime_2_25_0 = {
    "name": "LunchTime_2_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_25_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_25_0)

LunchTime_2_25_1 = {
    "name": "LunchTime_2_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_25_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_25_1)

LunchTime_2_26_0 = {
    "name": "LunchTime_2_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_26_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_26_0)

LunchTime_2_26_1 = {
    "name": "LunchTime_2_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_26_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_26_1)

LunchTime_2_27_0 = {
    "name": "LunchTime_2_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_27_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_27_0)

LunchTime_2_27_1 = {
    "name": "LunchTime_2_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_27_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_27_1)

LunchTime_2_28_0 = {
    "name": "LunchTime_2_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_28_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_28_0)

LunchTime_2_28_1 = {
    "name": "LunchTime_2_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_28_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_28_1)

LunchTime_2_29_0 = {
    "name": "LunchTime_2_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_29_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_29_0)

LunchTime_2_29_1 = {
    "name": "LunchTime_2_29_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_29_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_29_1)

LunchTime_2_30_0 = {
    "name": "LunchTime_2_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_30_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_30_0)

LunchTime_2_30_1 = {
    "name": "LunchTime_2_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_30_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_30_1)

LunchTime_2_31_0 = {
    "name": "LunchTime_2_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_31_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_31_0)

LunchTime_2_31_1 = {
    "name": "LunchTime_2_31_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_31_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_31_1)

LunchTime_2_32_0 = {
    "name": "LunchTime_2_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_32_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_32_0)

LunchTime_2_32_1 = {
    "name": "LunchTime_2_32_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_32_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_32_1)

LunchTime_2_33_0 = {
    "name": "LunchTime_2_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_33_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_33_0)

LunchTime_2_33_1 = {
    "name": "LunchTime_2_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_33_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_33_1)

LunchTime_2_34_0 = {
    "name": "LunchTime_2_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_34_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_34_0)

LunchTime_2_34_1 = {
    "name": "LunchTime_2_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_34_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_34_1)

LunchTime_2_35_0 = {
    "name": "LunchTime_2_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_35_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_35_0)

LunchTime_2_35_1 = {
    "name": "LunchTime_2_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_35_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_35_1)

LunchTime_2_36_0 = {
    "name": "LunchTime_2_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_36_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_36_0)

LunchTime_2_36_1 = {
    "name": "LunchTime_2_36_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_36_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_36_1)

LunchTime_2_37_0 = {
    "name": "LunchTime_2_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_37_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_37_0)

LunchTime_2_37_1 = {
    "name": "LunchTime_2_37_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_37_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_37_1)

LunchTime_2_38_0 = {
    "name": "LunchTime_2_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_38_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_38_0)

LunchTime_2_38_1 = {
    "name": "LunchTime_2_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_38_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_38_1)

LunchTime_2_39_0 = {
    "name": "LunchTime_2_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_39_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_39_0)

LunchTime_2_39_1 = {
    "name": "LunchTime_2_39_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_39_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_39_1)

LunchTime_2_40_0 = {
    "name": "LunchTime_2_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_40_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_40_0)

LunchTime_2_40_1 = {
    "name": "LunchTime_2_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_40_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_40_1)

LunchTime_2_41_0 = {
    "name": "LunchTime_2_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_41_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_41_0)

LunchTime_2_41_1 = {
    "name": "LunchTime_2_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_41_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_41_1)

LunchTime_2_42_0 = {
    "name": "LunchTime_2_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_42_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_42_0)

LunchTime_2_42_1 = {
    "name": "LunchTime_2_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_42_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_42_1)

LunchTime_2_43_0 = {
    "name": "LunchTime_2_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_43_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_43_0)

LunchTime_2_43_1 = {
    "name": "LunchTime_2_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_43_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_43_1)

LunchTime_2_44_0 = {
    "name": "LunchTime_2_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_44_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_44_0)

LunchTime_2_44_1 = {
    "name": "LunchTime_2_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_44_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_44_1)

LunchTime_2_45_0 = {
    "name": "LunchTime_2_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_45_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_45_0)

LunchTime_2_45_1 = {
    "name": "LunchTime_2_45_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_45_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_45_1)

LunchTime_2_46_0 = {
    "name": "LunchTime_2_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_46_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_46_0)

LunchTime_2_46_1 = {
    "name": "LunchTime_2_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_46_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_46_1)

LunchTime_2_47_0 = {
    "name": "LunchTime_2_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_47_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_47_0)

LunchTime_2_47_1 = {
    "name": "LunchTime_2_47_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_47_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_47_1)

LunchTime_2_48_0 = {
    "name": "LunchTime_2_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_48_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_48_0)

LunchTime_2_48_1 = {
    "name": "LunchTime_2_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_48_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_48_1)

LunchTime_2_49_0 = {
    "name": "LunchTime_2_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_49_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_49_0)

LunchTime_2_49_1 = {
    "name": "LunchTime_2_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_2_49_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_2_49_1)

LunchTime_3_0_0 = {
    "name": "LunchTime_3_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you go for lunch? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_0_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_0_0)

LunchTime_3_0_1 = {
    "name": "LunchTime_3_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_0_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_0_1)

LunchTime_3_1_0 = {
    "name": "LunchTime_3_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_1_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_1_0)

LunchTime_3_1_1 = {
    "name": "LunchTime_3_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_1_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_1_1)

LunchTime_3_2_0 = {
    "name": "LunchTime_3_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you meet? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_2_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you meet?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_2_0)

LunchTime_3_2_1 = {
    "name": "LunchTime_3_2_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_2_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you meet?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_2_1)

LunchTime_3_3_0 = {
    "name": "LunchTime_3_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you go for lunch? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_3_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_3_0)

LunchTime_3_3_1 = {
    "name": "LunchTime_3_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_3_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_3_1)

LunchTime_3_4_0 = {
    "name": "LunchTime_3_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you meet? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_4_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you meet?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_4_0)

LunchTime_3_4_1 = {
    "name": "LunchTime_3_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_4_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you meet?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_4_1)

LunchTime_3_5_0 = {
    "name": "LunchTime_3_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_5_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_5_0)

LunchTime_3_5_1 = {
    "name": "LunchTime_3_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_5_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_5_1)

LunchTime_3_6_0 = {
    "name": "LunchTime_3_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_6_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_6_0)

LunchTime_3_6_1 = {
    "name": "LunchTime_3_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_6_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_6_1)

LunchTime_3_7_0 = {
    "name": "LunchTime_3_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_7_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_7_0)

LunchTime_3_7_1 = {
    "name": "LunchTime_3_7_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_7_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_7_1)

LunchTime_3_8_0 = {
    "name": "LunchTime_3_8_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you meet? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_8_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you meet?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_8_0)

LunchTime_3_8_1 = {
    "name": "LunchTime_3_8_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_8_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you meet?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_8_1)

LunchTime_3_9_0 = {
    "name": "LunchTime_3_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_9_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_9_0)

LunchTime_3_9_1 = {
    "name": "LunchTime_3_9_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_9_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_9_1)

LunchTime_3_10_0 = {
    "name": "LunchTime_3_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_10_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_10_0)

LunchTime_3_10_1 = {
    "name": "LunchTime_3_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_10_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_10_1)

LunchTime_3_11_0 = {
    "name": "LunchTime_3_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you go for lunch? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_11_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_11_0)

LunchTime_3_11_1 = {
    "name": "LunchTime_3_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_11_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_11_1)

LunchTime_3_12_0 = {
    "name": "LunchTime_3_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when will you be free? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_12_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When will you be free?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_12_0)

LunchTime_3_12_1 = {
    "name": "LunchTime_3_12_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_12_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When will you be free?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_12_1)

LunchTime_3_13_0 = {
    "name": "LunchTime_3_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_13_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_13_0)

LunchTime_3_13_1 = {
    "name": "LunchTime_3_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_13_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_13_1)

LunchTime_3_14_0 = {
    "name": "LunchTime_3_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_14_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_14_0)

LunchTime_3_14_1 = {
    "name": "LunchTime_3_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_14_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_14_1)

LunchTime_3_15_0 = {
    "name": "LunchTime_3_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_15_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_15_0)

LunchTime_3_15_1 = {
    "name": "LunchTime_3_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_15_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_15_1)

LunchTime_3_16_0 = {
    "name": "LunchTime_3_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you go for lunch? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_16_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_16_0)

LunchTime_3_16_1 = {
    "name": "LunchTime_3_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_16_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_16_1)

LunchTime_3_17_0 = {
    "name": "LunchTime_3_17_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when will you be free? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_17_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When will you be free?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_17_0)

LunchTime_3_17_1 = {
    "name": "LunchTime_3_17_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_17_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When will you be free?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_17_1)

LunchTime_3_18_0 = {
    "name": "LunchTime_3_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when will you be free? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_18_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When will you be free?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_18_0)

LunchTime_3_18_1 = {
    "name": "LunchTime_3_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_18_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When will you be free?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_18_1)

LunchTime_3_19_0 = {
    "name": "LunchTime_3_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_19_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_19_0)

LunchTime_3_19_1 = {
    "name": "LunchTime_3_19_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_19_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_19_1)

LunchTime_3_20_0 = {
    "name": "LunchTime_3_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_20_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_20_0)

LunchTime_3_20_1 = {
    "name": "LunchTime_3_20_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_20_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_20_1)

LunchTime_3_21_0 = {
    "name": "LunchTime_3_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_21_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_21_0)

LunchTime_3_21_1 = {
    "name": "LunchTime_3_21_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_21_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_21_1)

LunchTime_3_22_0 = {
    "name": "LunchTime_3_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_22_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_22_0)

LunchTime_3_22_1 = {
    "name": "LunchTime_3_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_22_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_22_1)

LunchTime_3_23_0 = {
    "name": "LunchTime_3_23_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_23_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_23_0)

LunchTime_3_23_1 = {
    "name": "LunchTime_3_23_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_23_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_23_1)

LunchTime_3_24_0 = {
    "name": "LunchTime_3_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_24_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_24_0)

LunchTime_3_24_1 = {
    "name": "LunchTime_3_24_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_24_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_24_1)

LunchTime_3_25_0 = {
    "name": "LunchTime_3_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when will you be free to go for lunch tomorrow? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_25_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When will you be free to go for lunch tomorrow?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_25_0)

LunchTime_3_25_1 = {
    "name": "LunchTime_3_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_25_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When will you be free to go for lunch tomorrow?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_25_1)

LunchTime_3_26_0 = {
    "name": "LunchTime_3_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_26_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_26_0)

LunchTime_3_26_1 = {
    "name": "LunchTime_3_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_26_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_26_1)

LunchTime_3_27_0 = {
    "name": "LunchTime_3_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when will you be free for lunch tomorrow? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_27_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When will you be free for lunch tomorrow?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_27_0)

LunchTime_3_27_1 = {
    "name": "LunchTime_3_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_27_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When will you be free for lunch tomorrow?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_27_1)

LunchTime_3_28_0 = {
    "name": "LunchTime_3_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_28_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_28_0)

LunchTime_3_28_1 = {
    "name": "LunchTime_3_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_28_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_28_1)

LunchTime_3_29_0 = {
    "name": "LunchTime_3_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_29_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_29_0)

LunchTime_3_29_1 = {
    "name": "LunchTime_3_29_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_29_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_29_1)

LunchTime_3_30_0 = {
    "name": "LunchTime_3_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when is a good time for you to go to lunch? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_30_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When is a good time for you to go to lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_30_0)

LunchTime_3_30_1 = {
    "name": "LunchTime_3_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_30_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When is a good time for you to go to lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_30_1)

LunchTime_3_31_0 = {
    "name": "LunchTime_3_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_31_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_31_0)

LunchTime_3_31_1 = {
    "name": "LunchTime_3_31_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_31_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_31_1)

LunchTime_3_32_0 = {
    "name": "LunchTime_3_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_32_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_32_0)

LunchTime_3_32_1 = {
    "name": "LunchTime_3_32_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_32_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_32_1)

LunchTime_3_33_0 = {
    "name": "LunchTime_3_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you meet? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_33_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you meet?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_33_0)

LunchTime_3_33_1 = {
    "name": "LunchTime_3_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_33_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you meet?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_33_1)

LunchTime_3_34_0 = {
    "name": "LunchTime_3_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you go for lunch? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_34_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_34_0)

LunchTime_3_34_1 = {
    "name": "LunchTime_3_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_34_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_34_1)

LunchTime_3_35_0 = {
    "name": "LunchTime_3_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you meet? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_35_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you meet?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_35_0)

LunchTime_3_35_1 = {
    "name": "LunchTime_3_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_35_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you meet?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_35_1)

LunchTime_3_36_0 = {
    "name": "LunchTime_3_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you meet? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_36_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you meet?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_36_0)

LunchTime_3_36_1 = {
    "name": "LunchTime_3_36_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_36_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you meet?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_36_1)

LunchTime_3_37_0 = {
    "name": "LunchTime_3_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you go for lunch? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_37_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_37_0)

LunchTime_3_37_1 = {
    "name": "LunchTime_3_37_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_37_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_37_1)

LunchTime_3_38_0 = {
    "name": "LunchTime_3_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would be a good time to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_38_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would be a good time to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_38_0)

LunchTime_3_38_1 = {
    "name": "LunchTime_3_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_38_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would be a good time to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_38_1)

LunchTime_3_39_0 = {
    "name": "LunchTime_3_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you go for lunch? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_39_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_39_0)

LunchTime_3_39_1 = {
    "name": "LunchTime_3_39_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_39_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_39_1)

LunchTime_3_40_0 = {
    "name": "LunchTime_3_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_40_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_40_0)

LunchTime_3_40_1 = {
    "name": "LunchTime_3_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_40_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_40_1)

LunchTime_3_41_0 = {
    "name": "LunchTime_3_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you go for lunch? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_41_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_41_0)

LunchTime_3_41_1 = {
    "name": "LunchTime_3_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_41_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_41_1)

LunchTime_3_42_0 = {
    "name": "LunchTime_3_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_42_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_42_0)

LunchTime_3_42_1 = {
    "name": "LunchTime_3_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_42_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_42_1)

LunchTime_3_43_0 = {
    "name": "LunchTime_3_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_43_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_43_0)

LunchTime_3_43_1 = {
    "name": "LunchTime_3_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_43_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_43_1)

LunchTime_3_44_0 = {
    "name": "LunchTime_3_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you go for lunch? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_44_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_44_0)

LunchTime_3_44_1 = {
    "name": "LunchTime_3_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_44_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_44_1)

LunchTime_3_45_0 = {
    "name": "LunchTime_3_45_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when would you like to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_45_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_45_0)

LunchTime_3_45_1 = {
    "name": "LunchTime_3_45_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_45_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_45_1)

LunchTime_3_46_0 = {
    "name": "LunchTime_3_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_46_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_46_0)

LunchTime_3_46_1 = {
    "name": "LunchTime_3_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_46_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_46_1)

LunchTime_3_47_0 = {
    "name": "LunchTime_3_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time can you go for lunch? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_47_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_47_0)

LunchTime_3_47_1 = {
    "name": "LunchTime_3_47_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_47_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time can you go for lunch?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_47_1)

LunchTime_3_48_0 = {
    "name": "LunchTime_3_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_48_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_48_0)

LunchTime_3_48_1 = {
    "name": "LunchTime_3_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_48_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_48_1)

LunchTime_3_49_0 = {
    "name": "LunchTime_3_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_49_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_49_0)

LunchTime_3_49_1 = {
    "name": "LunchTime_3_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ will you be free to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_3_49_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Will you be free to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_3_49_1)

LunchTime_4_0_0 = {
    "name": "LunchTime_4_0_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_0_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_0_0)

LunchTime_4_0_1 = {
    "name": "LunchTime_4_0_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_0_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_0_1)

LunchTime_4_1_0 = {
    "name": "LunchTime_4_1_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_1_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_1_0)

LunchTime_4_1_1 = {
    "name": "LunchTime_4_1_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_1_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_1_1)

LunchTime_4_2_0 = {
    "name": "LunchTime_4_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_2_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_2_0)

LunchTime_4_2_1 = {
    "name": "LunchTime_4_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_2_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_2_1)

LunchTime_4_3_0 = {
    "name": "LunchTime_4_3_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_3_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
    else:
        response = "Jill does not want to go for lunch tomorrow"
    go_to("kitchen")
    say(response)

"""

ordered_field_buffer.append(LunchTime_4_3_0)

LunchTime_4_3_1 = {
    "name": "LunchTime_4_3_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_3_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
    else:
        response = "Jill does not want to go for lunch tomorrow"
    go_to("kitchen")
    say(response)

"""

ordered_field_buffer.append(LunchTime_4_3_1)

LunchTime_4_4_0 = {
    "name": "LunchTime_4_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_4_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Jill's office")
        say("Jill said: " + response)
    else:
        go_to("Jill's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_4_0)

LunchTime_4_4_1 = {
    "name": "LunchTime_4_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ would you like to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_4_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Jill's office")
        say("Jill said: " + response)
    else:
        go_to("Jill's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_4_1)

LunchTime_4_5_0 = {
    "name": "LunchTime_4_5_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_5_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_5_0)

LunchTime_4_5_1 = {
    "name": "LunchTime_4_5_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_5_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_5_1)

LunchTime_4_6_0 = {
    "name": "LunchTime_4_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_6_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_6_0)

LunchTime_4_6_1 = {
    "name": "LunchTime_4_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_6_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_6_1)

LunchTime_4_7_0 = {
    "name": "LunchTime_4_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_7_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_7_0)

LunchTime_4_7_1 = {
    "name": "LunchTime_4_7_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_7_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_7_1)

LunchTime_4_8_0 = {
    "name": "LunchTime_4_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_8_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_8_0)

LunchTime_4_8_1 = {
    "name": "LunchTime_4_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_8_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_8_1)

LunchTime_4_9_0 = {
    "name": "LunchTime_4_9_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_9_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_9_0)

LunchTime_4_9_1 = {
    "name": "LunchTime_4_9_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_9_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_9_1)

LunchTime_4_10_0 = {
    "name": "LunchTime_4_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_10_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_10_0)

LunchTime_4_10_1 = {
    "name": "LunchTime_4_10_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_10_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_10_1)

LunchTime_4_11_0 = {
    "name": "LunchTime_4_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_11_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_11_0)

LunchTime_4_11_1 = {
    "name": "LunchTime_4_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_11_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_11_1)

LunchTime_4_12_0 = {
    "name": "LunchTime_4_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_12_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
    else:
        response = "Jill does not want to go for lunch tomorrow"
    go_to("kitchen")
    say(response)

"""

ordered_field_buffer.append(LunchTime_4_12_0)

LunchTime_4_12_1 = {
    "name": "LunchTime_4_12_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_12_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
    else:
        response = "Jill does not want to go for lunch tomorrow"
    go_to("kitchen")
    say(response)

"""

ordered_field_buffer.append(LunchTime_4_12_1)

LunchTime_4_13_0 = {
    "name": "LunchTime_4_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_13_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_13_0)

LunchTime_4_13_1 = {
    "name": "LunchTime_4_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_13_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_13_1)

LunchTime_4_14_0 = {
    "name": "LunchTime_4_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_14_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        options = ["12:30", "13:00", "13:30"]
        response = ask("Jill", "When is good for you?", options)
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_14_0)

LunchTime_4_14_1 = {
    "name": "LunchTime_4_14_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_14_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        options = ["12:30", "13:00", "13:30"]
        response = ask("Jill", "When is good for you?", options)
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_14_1)

LunchTime_4_15_0 = {
    "name": "LunchTime_4_15_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_15_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_15_0)

LunchTime_4_15_1 = {
    "name": "LunchTime_4_15_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_15_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_15_1)

LunchTime_4_16_0 = {
    "name": "LunchTime_4_16_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_16_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_16_0)

LunchTime_4_16_1 = {
    "name": "LunchTime_4_16_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_16_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_16_1)

LunchTime_4_17_0 = {
    "name": "LunchTime_4_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_17_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_17_0)

LunchTime_4_17_1 = {
    "name": "LunchTime_4_17_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_17_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_17_1)

LunchTime_4_18_0 = {
    "name": "LunchTime_4_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_18_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_18_0)

LunchTime_4_18_1 = {
    "name": "LunchTime_4_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_18_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_18_1)

LunchTime_4_19_0 = {
    "name": "LunchTime_4_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_19_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_19_0)

LunchTime_4_19_1 = {
    "name": "LunchTime_4_19_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_19_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_19_1)

LunchTime_4_20_0 = {
    "name": "LunchTime_4_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_20_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_20_0)

LunchTime_4_20_1 = {
    "name": "LunchTime_4_20_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_20_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_20_1)

LunchTime_4_21_0 = {
    "name": "LunchTime_4_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_21_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_4_21_0)

LunchTime_4_21_1 = {
    "name": "LunchTime_4_21_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_21_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_4_21_1)

LunchTime_4_22_0 = {
    "name": "LunchTime_4_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_22_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_22_0)

LunchTime_4_22_1 = {
    "name": "LunchTime_4_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_22_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_22_1)

LunchTime_4_23_0 = {
    "name": "LunchTime_4_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_23_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_23_0)

LunchTime_4_23_1 = {
    "name": "LunchTime_4_23_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_23_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill would like to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_23_1)

LunchTime_4_24_0 = {
    "name": "LunchTime_4_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_24_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_24_0)

LunchTime_4_24_1 = {
    "name": "LunchTime_4_24_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_24_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_24_1)

LunchTime_4_25_0 = {
    "name": "LunchTime_4_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_25_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_25_0)

LunchTime_4_25_1 = {
    "name": "LunchTime_4_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_25_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_25_1)

LunchTime_4_26_0 = {
    "name": "LunchTime_4_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when should we go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_26_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_26_0)

LunchTime_4_26_1 = {
    "name": "LunchTime_4_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_26_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_26_1)

LunchTime_4_27_0 = {
    "name": "LunchTime_4_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_27_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_27_0)

LunchTime_4_27_1 = {
    "name": "LunchTime_4_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_27_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_27_1)

LunchTime_4_28_0 = {
    "name": "LunchTime_4_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_28_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_28_0)

LunchTime_4_28_1 = {
    "name": "LunchTime_4_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_28_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_28_1)

LunchTime_4_29_0 = {
    "name": "LunchTime_4_29_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_29_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_29_0)

LunchTime_4_29_1 = {
    "name": "LunchTime_4_29_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_29_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_29_1)

LunchTime_4_30_0 = {
    "name": "LunchTime_4_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_30_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_30_0)

LunchTime_4_30_1 = {
    "name": "LunchTime_4_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_30_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_30_1)

LunchTime_4_31_0 = {
    "name": "LunchTime_4_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_31_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_31_0)

LunchTime_4_31_1 = {
    "name": "LunchTime_4_31_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_31_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_31_1)

LunchTime_4_32_0 = {
    "name": "LunchTime_4_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_32_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        options = ["12:30", "13:00", "13:30"]
        response = ask("Jill", "Pick a time", options)
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_32_0)

LunchTime_4_32_1 = {
    "name": "LunchTime_4_32_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_32_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        options = ["12:30", "13:00", "13:30"]
        response = ask("Jill", "Pick a time", options)
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_32_1)

LunchTime_4_33_0 = {
    "name": "LunchTime_4_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_33_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_33_0)

LunchTime_4_33_1 = {
    "name": "LunchTime_4_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_33_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_33_1)

LunchTime_4_34_0 = {
    "name": "LunchTime_4_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_34_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_34_0)

LunchTime_4_34_1 = {
    "name": "LunchTime_4_34_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_34_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_34_1)

LunchTime_4_35_0 = {
    "name": "LunchTime_4_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_35_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_35_0)

LunchTime_4_35_1 = {
    "name": "LunchTime_4_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_35_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_35_1)

LunchTime_4_36_0 = {
    "name": "LunchTime_4_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_36_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_36_0)

LunchTime_4_36_1 = {
    "name": "LunchTime_4_36_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_36_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_36_1)

LunchTime_4_37_0 = {
    "name": "LunchTime_4_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ when do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_37_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_37_0)

LunchTime_4_37_1 = {
    "name": "LunchTime_4_37_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_37_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_37_1)

LunchTime_4_38_0 = {
    "name": "LunchTime_4_38_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_38_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_38_0)

LunchTime_4_38_1 = {
    "name": "LunchTime_4_38_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_38_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_38_1)

LunchTime_4_39_0 = {
    "name": "LunchTime_4_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time? /$@!/ ['12:00', '12:30', '13:00']",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_39_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_39_0)

LunchTime_4_39_1 = {
    "name": "LunchTime_4_39_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_39_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
        say("Jill said: " + response)
    else:
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_39_1)

LunchTime_4_40_0 = {
    "name": "LunchTime_4_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_40_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_40_0)

LunchTime_4_40_1 = {
    "name": "LunchTime_4_40_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_40_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When should we go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_40_1)

LunchTime_4_41_0 = {
    "name": "LunchTime_4_41_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_41_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_41_0)

LunchTime_4_41_1 = {
    "name": "LunchTime_4_41_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_41_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_41_1)

LunchTime_4_42_0 = {
    "name": "LunchTime_4_42_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_42_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_42_0)

LunchTime_4_42_1 = {
    "name": "LunchTime_4_42_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_42_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_42_1)

LunchTime_4_43_0 = {
    "name": "LunchTime_4_43_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_43_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_4_43_0)

LunchTime_4_43_1 = {
    "name": "LunchTime_4_43_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_43_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch")

"""

ordered_field_buffer.append(LunchTime_4_43_1)

LunchTime_4_44_0 = {
    "name": "LunchTime_4_44_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_44_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_44_0)

LunchTime_4_44_1 = {
    "name": "LunchTime_4_44_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_44_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill wants to go to lunch at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go to lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_44_1)

LunchTime_4_45_0 = {
    "name": "LunchTime_4_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_45_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["12:00", "13:00", "14:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_45_0)

LunchTime_4_45_1 = {
    "name": "LunchTime_4_45_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_45_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Would you like to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When would you like to go?", ["12:00", "13:00", "14:00"])
        go_to("Eve's office")
        say("Jill would like to go at " + response)
    else:
        go_to("Eve's office")
        say("Jill does not want to go for lunch tomorrow")

"""

ordered_field_buffer.append(LunchTime_4_45_1)

LunchTime_4_46_0 = {
    "name": "LunchTime_4_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_46_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_46_0)

LunchTime_4_46_1 = {
    "name": "LunchTime_4_46_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_46_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "When do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Eve's office")
        say("Jill said: " + response)
    else:
        go_to("Eve's office")
        say("Jill said no")

"""

ordered_field_buffer.append(LunchTime_4_46_1)

LunchTime_4_47_0 = {
    "name": "LunchTime_4_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_47_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
    else:
        response = "No"
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_47_0)

LunchTime_4_47_1 = {
    "name": "LunchTime_4_47_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_47_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
    else:
        response = "No"
    go_to("kitchen")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_47_1)

LunchTime_4_48_0 = {
    "name": "LunchTime_4_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "Ask /$@!/ what time do you want to go? /$@!/ ['12:00', '12:30', '13:00']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: 12:00 /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_48_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Jill's office")
        say("Jill said: " + response)
    else:
        go_to("Jill's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_48_0)

LunchTime_4_48_1 = {
    "name": "LunchTime_4_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ jill's office /$@!/ None",
        "Ask /$@!/ do you want to go for lunch tomorrow? /$@!/ ['yes', 'no']",
        "GoTo /$@!/ jill's office /$@!/ None",
        "Say /$@!/ jill said: no /$@!/ None",
    ],
    "error_message": "",
}

program_LunchTime_4_48_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Do you want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time do you want to go?", ["12:00", "12:30", "13:00"])
        go_to("Jill's office")
        say("Jill said: " + response)
    else:
        go_to("Jill's office")
        say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_48_1)

LunchTime_4_49_0 = {
    "name": "LunchTime_4_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_49_0 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
    else:
        response = "No"
    go_to("Arjun's office")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_49_0)

LunchTime_4_49_1 = {
    "name": "LunchTime_4_49_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_LunchTime_4_49_1 = """
def task_program():
    go_to("Jill's office")
    response = ask("Jill", "Want to go for lunch tomorrow?", ["Yes", "No"])
    if response == "Yes":
        response = ask("Jill", "What time?", ["12:00", "12:30", "13:00"])
    else:
        response = "No"
    go_to("Arjun's office")
    say("Jill said: " + response)

"""

ordered_field_buffer.append(LunchTime_4_49_1)

SetTemperature_0_0_0 = {
    "name": "SetTemperature_0_0_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_0_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the thermostat to 75 degrees")
    else:
        say("I am setting the thermostat to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_0_0)

SetTemperature_0_0_1 = {
    "name": "SetTemperature_0_0_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_0_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the thermostat to 75 degrees")
    else:
        say("I am setting the thermostat to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_0_1)

SetTemperature_0_1_0 = {
    "name": "SetTemperature_0_1_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_1_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Hot", "Cold"])
    if response == "Hot":
        say("I will set the temperature to 75 degrees")
    else:
        say("I will set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_1_0)

SetTemperature_0_1_1 = {
    "name": "SetTemperature_0_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too hot or too cold? /$@!/ ['hot', 'cold']",
        "Say /$@!/ i will set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_1_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Hot", "Cold"])
    if response == "Hot":
        say("I will set the temperature to 75 degrees")
    else:
        say("I will set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_1_1)

SetTemperature_0_2_0 = {
    "name": "SetTemperature_0_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_2_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I set the temperature to 75 degrees")
    else:
        say("I set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_2_0)

SetTemperature_0_2_1 = {
    "name": "SetTemperature_0_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_2_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I set the temperature to 75 degrees")
    else:
        say("I set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_2_1)

SetTemperature_0_3_0 = {
    "name": "SetTemperature_0_3_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i will set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_3_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_3_0)

SetTemperature_0_3_1 = {
    "name": "SetTemperature_0_3_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i will set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_3_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_3_1)

SetTemperature_0_4_0 = {
    "name": "SetTemperature_0_4_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i should set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_4_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_4_0)

SetTemperature_0_4_1 = {
    "name": "SetTemperature_0_4_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i should set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_4_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_4_1)

SetTemperature_0_5_0 = {
    "name": "SetTemperature_0_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should it be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i set the temperature to 75 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_5_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should it be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I set the temperature to 75 degrees")
    else:
        say("I set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_5_0)

SetTemperature_0_5_1 = {
    "name": "SetTemperature_0_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should it be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_5_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should it be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I set the temperature to 75 degrees")
    else:
        say("I set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_5_1)

SetTemperature_0_6_0 = {
    "name": "SetTemperature_0_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you want it warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i set the temperature to 75 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_6_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I set the temperature to 75 degrees")
    else:
        say("I set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_6_0)

SetTemperature_0_6_1 = {
    "name": "SetTemperature_0_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you want it warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_6_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I set the temperature to 75 degrees")
    else:
        say("I set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_6_1)

SetTemperature_0_7_0 = {
    "name": "SetTemperature_0_7_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i should set the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_7_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I should set the temperature to 68 degrees")
    else:
        say("I should set the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_7_0)

SetTemperature_0_7_1 = {
    "name": "SetTemperature_0_7_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i should set the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_7_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I should set the temperature to 68 degrees")
    else:
        say("I should set the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_7_1)

SetTemperature_0_8_0 = {
    "name": "SetTemperature_0_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_8_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_8_0)

SetTemperature_0_8_1 = {
    "name": "SetTemperature_0_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_8_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_8_1)

SetTemperature_0_9_0 = {
    "name": "SetTemperature_0_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i am setting the temperature to 75 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_9_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_9_0)

SetTemperature_0_9_1 = {
    "name": "SetTemperature_0_9_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i am setting the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_9_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_9_1)

SetTemperature_0_10_0 = {
    "name": "SetTemperature_0_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_10_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    if response == "Too hot":
        say("I will turn the thermostat down")
    else:
        say("I will turn the thermostat up")

"""

ordered_field_buffer.append(SetTemperature_0_10_0)

SetTemperature_0_10_1 = {
    "name": "SetTemperature_0_10_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too hot or too cold? /$@!/ ['too hot', 'too cold']",
        "Say /$@!/ i will turn the thermostat up /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_10_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    if response == "Too hot":
        say("I will turn the thermostat down")
    else:
        say("I will turn the thermostat up")

"""

ordered_field_buffer.append(SetTemperature_0_10_1)

SetTemperature_0_11_0 = {
    "name": "SetTemperature_0_11_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_11_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    if response == "Too hot":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_11_0)

SetTemperature_0_11_1 = {
    "name": "SetTemperature_0_11_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too hot or too cold? /$@!/ ['too hot', 'too cold']",
        "Say /$@!/ i will set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_11_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    if response == "Too hot":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_11_1)

SetTemperature_0_12_0 = {
    "name": "SetTemperature_0_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_12_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    if response == "Too hot":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_12_0)

SetTemperature_0_12_1 = {
    "name": "SetTemperature_0_12_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too hot or too cold? /$@!/ ['too hot', 'too cold']",
        "Say /$@!/ i will set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_12_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    if response == "Too hot":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_12_1)

SetTemperature_0_13_0 = {
    "name": "SetTemperature_0_13_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm or too cold? /$@!/ ['too warm', 'too cold']",
        "Say /$@!/ i will set the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_13_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm or too cold?", ["Too warm", "Too cold"])
    if response == "Too warm":
        say("I will set the temperature to 68 degrees")
    else:
        say("I will set the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_13_0)

SetTemperature_0_13_1 = {
    "name": "SetTemperature_0_13_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm or too cold? /$@!/ ['too warm', 'too cold']",
        "Say /$@!/ i will set the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_13_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm or too cold?", ["Too warm", "Too cold"])
    if response == "Too warm":
        say("I will set the temperature to 68 degrees")
    else:
        say("I will set the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_13_1)

SetTemperature_0_14_0 = {
    "name": "SetTemperature_0_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_14_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_14_0)

SetTemperature_0_14_1 = {
    "name": "SetTemperature_0_14_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_14_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_14_1)

SetTemperature_0_15_0 = {
    "name": "SetTemperature_0_15_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_15_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I set the temperature to 75 degrees")
    else:
        say("I set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_15_0)

SetTemperature_0_15_1 = {
    "name": "SetTemperature_0_15_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_15_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I set the temperature to 75 degrees")
    else:
        say("I set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_15_1)

SetTemperature_0_16_0 = {
    "name": "SetTemperature_0_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you want it warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_16_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I set the temperature to 73 degrees")
    else:
        say("I set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_16_0)

SetTemperature_0_16_1 = {
    "name": "SetTemperature_0_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you want it warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_16_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I set the temperature to 73 degrees")
    else:
        say("I set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_16_1)

SetTemperature_0_17_0 = {
    "name": "SetTemperature_0_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_17_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_17_0)

SetTemperature_0_17_1 = {
    "name": "SetTemperature_0_17_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_17_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_17_1)

SetTemperature_0_18_0 = {
    "name": "SetTemperature_0_18_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i should set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_18_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_18_0)

SetTemperature_0_18_1 = {
    "name": "SetTemperature_0_18_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i should set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_18_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_18_1)

SetTemperature_0_19_0 = {
    "name": "SetTemperature_0_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_19_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should it be warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_19_0)

SetTemperature_0_19_1 = {
    "name": "SetTemperature_0_19_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_19_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should it be warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_19_1)

SetTemperature_0_20_0 = {
    "name": "SetTemperature_0_20_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i should set the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_20_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I should set the temperature to 68 degrees")
    else:
        say("I should set the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_20_0)

SetTemperature_0_20_1 = {
    "name": "SetTemperature_0_20_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i should set the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_20_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I should set the temperature to 68 degrees")
    else:
        say("I should set the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_20_1)

SetTemperature_0_21_0 = {
    "name": "SetTemperature_0_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_21_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the thermostat to 75 degrees")
    else:
        say("I am setting the thermostat to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_21_0)

SetTemperature_0_21_1 = {
    "name": "SetTemperature_0_21_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_21_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the thermostat to 75 degrees")
    else:
        say("I am setting the thermostat to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_21_1)

SetTemperature_0_22_0 = {
    "name": "SetTemperature_0_22_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i will set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_22_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_22_0)

SetTemperature_0_22_1 = {
    "name": "SetTemperature_0_22_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i will set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_22_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_22_1)

SetTemperature_0_23_0 = {
    "name": "SetTemperature_0_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_23_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should it be warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I set the temperature to 75 degrees")
    else:
        say("I set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_23_0)

SetTemperature_0_23_1 = {
    "name": "SetTemperature_0_23_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_23_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should it be warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I set the temperature to 75 degrees")
    else:
        say("I set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_23_1)

SetTemperature_0_24_0 = {
    "name": "SetTemperature_0_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_24_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Hot", "Cold"])
    if response == "Hot":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_24_0)

SetTemperature_0_24_1 = {
    "name": "SetTemperature_0_24_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too hot or too cold? /$@!/ ['hot', 'cold']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_24_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Hot", "Cold"])
    if response == "Hot":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_24_1)

SetTemperature_0_25_0 = {
    "name": "SetTemperature_0_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i set the temperature to 75 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_25_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I set the temperature to 75 degrees")
    else:
        say("I set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_25_0)

SetTemperature_0_25_1 = {
    "name": "SetTemperature_0_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_25_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I set the temperature to 75 degrees")
    else:
        say("I set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_25_1)

SetTemperature_0_26_0 = {
    "name": "SetTemperature_0_26_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_26_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the thermostat to 75 degrees")
    else:
        say("I am setting the thermostat to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_26_0)

SetTemperature_0_26_1 = {
    "name": "SetTemperature_0_26_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_26_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the thermostat to 75 degrees")
    else:
        say("I am setting the thermostat to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_26_1)

SetTemperature_0_27_0 = {
    "name": "SetTemperature_0_27_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_27_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should it be warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the thermostat to 75 degrees")
    else:
        say("I am setting the thermostat to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_27_0)

SetTemperature_0_27_1 = {
    "name": "SetTemperature_0_27_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_27_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should it be warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the thermostat to 75 degrees")
    else:
        say("I am setting the thermostat to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_27_1)

SetTemperature_0_28_0 = {
    "name": "SetTemperature_0_28_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_28_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    if response == "Too hot":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_28_0)

SetTemperature_0_28_1 = {
    "name": "SetTemperature_0_28_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too hot or too cold? /$@!/ ['too hot', 'too cold']",
        "Say /$@!/ i will set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_28_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    if response == "Too hot":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_28_1)

SetTemperature_0_29_0 = {
    "name": "SetTemperature_0_29_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_29_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    go_to("Jill's office")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_29_0)

SetTemperature_0_29_1 = {
    "name": "SetTemperature_0_29_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_29_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    go_to("Jill's office")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_29_1)

SetTemperature_0_30_0 = {
    "name": "SetTemperature_0_30_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_30_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_30_0)

SetTemperature_0_30_1 = {
    "name": "SetTemperature_0_30_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_30_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_30_1)

SetTemperature_0_31_0 = {
    "name": "SetTemperature_0_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_31_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    if response == "Too hot":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_31_0)

SetTemperature_0_31_1 = {
    "name": "SetTemperature_0_31_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too hot or too cold? /$@!/ ['too hot', 'too cold']",
        "Say /$@!/ i should set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_31_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    if response == "Too hot":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_31_1)

SetTemperature_0_32_0 = {
    "name": "SetTemperature_0_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_32_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Hot", "Cold"])
    if response == "Hot":
        say("I should set the temperature to 75 degrees")
    else:
        say("I should set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_32_0)

SetTemperature_0_32_1 = {
    "name": "SetTemperature_0_32_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too hot or too cold? /$@!/ ['hot', 'cold']",
        "Say /$@!/ i should set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_32_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Hot", "Cold"])
    if response == "Hot":
        say("I should set the temperature to 75 degrees")
    else:
        say("I should set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_32_1)

SetTemperature_0_33_0 = {
    "name": "SetTemperature_0_33_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_33_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    if response == "Too hot":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_33_0)

SetTemperature_0_33_1 = {
    "name": "SetTemperature_0_33_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too hot or too cold? /$@!/ ['too hot', 'too cold']",
        "Say /$@!/ i should set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_33_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    if response == "Too hot":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_33_1)

SetTemperature_0_34_0 = {
    "name": "SetTemperature_0_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_34_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_34_0)

SetTemperature_0_34_1 = {
    "name": "SetTemperature_0_34_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_34_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_34_1)

SetTemperature_0_35_0 = {
    "name": "SetTemperature_0_35_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_35_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    go_to("kitchen")
    if response == "Too hot":
        say("I will set the thermostat to 70 degrees")
    else:
        say("I will set the thermostat to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_35_0)

SetTemperature_0_35_1 = {
    "name": "SetTemperature_0_35_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_35_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    go_to("kitchen")
    if response == "Too hot":
        say("I will set the thermostat to 70 degrees")
    else:
        say("I will set the thermostat to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_35_1)

SetTemperature_0_36_0 = {
    "name": "SetTemperature_0_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_36_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Hot", "Cold"])
    go_to("Jill's office")
    if response == "Hot":
        say("I should set the temperature to 75 degrees")
    else:
        say("I should set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_36_0)

SetTemperature_0_36_1 = {
    "name": "SetTemperature_0_36_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_36_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Hot", "Cold"])
    go_to("Jill's office")
    if response == "Hot":
        say("I should set the temperature to 75 degrees")
    else:
        say("I should set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_36_1)

SetTemperature_0_37_0 = {
    "name": "SetTemperature_0_37_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_37_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    go_to("Jill's office")
    if response == "Too hot":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_37_0)

SetTemperature_0_37_1 = {
    "name": "SetTemperature_0_37_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_37_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    go_to("Jill's office")
    if response == "Too hot":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_37_1)

SetTemperature_0_38_0 = {
    "name": "SetTemperature_0_38_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_38_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    if response == "Too hot":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_38_0)

SetTemperature_0_38_1 = {
    "name": "SetTemperature_0_38_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too hot or too cold? /$@!/ ['too hot', 'too cold']",
        "Say /$@!/ i will set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_38_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    if response == "Too hot":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_38_1)

SetTemperature_0_39_0 = {
    "name": "SetTemperature_0_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_39_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_39_0)

SetTemperature_0_39_1 = {
    "name": "SetTemperature_0_39_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_39_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_39_1)

SetTemperature_0_40_0 = {
    "name": "SetTemperature_0_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_40_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    go_to("Jill's office")
    if response == "Warmer":
        say("I am setting the temperature to 73 degrees")
    else:
        say("I am setting the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_40_0)

SetTemperature_0_40_1 = {
    "name": "SetTemperature_0_40_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_40_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    go_to("Jill's office")
    if response == "Warmer":
        say("I am setting the temperature to 73 degrees")
    else:
        say("I am setting the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_40_1)

SetTemperature_0_41_0 = {
    "name": "SetTemperature_0_41_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i should set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_41_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_41_0)

SetTemperature_0_41_1 = {
    "name": "SetTemperature_0_41_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i should set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_41_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_41_1)

SetTemperature_0_42_0 = {
    "name": "SetTemperature_0_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you want it warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ set the temperature to 75 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_42_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("Set the temperature to 75 degrees")
    else:
        say("Set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_42_0)

SetTemperature_0_42_1 = {
    "name": "SetTemperature_0_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you want it warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_42_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("Set the temperature to 75 degrees")
    else:
        say("Set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_42_1)

SetTemperature_0_43_0 = {
    "name": "SetTemperature_0_43_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i should set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_43_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_43_0)

SetTemperature_0_43_1 = {
    "name": "SetTemperature_0_43_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i should set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_43_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_43_1)

SetTemperature_0_44_0 = {
    "name": "SetTemperature_0_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i am setting the temperature to 75 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_44_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_44_0)

SetTemperature_0_44_1 = {
    "name": "SetTemperature_0_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i am setting the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_44_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I am setting the temperature to 75 degrees")
    else:
        say("I am setting the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_44_1)

SetTemperature_0_45_0 = {
    "name": "SetTemperature_0_45_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i should set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_45_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_45_0)

SetTemperature_0_45_1 = {
    "name": "SetTemperature_0_45_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i should set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_45_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I should set the temperature to 70 degrees")
    else:
        say("I should set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_45_1)

SetTemperature_0_46_0 = {
    "name": "SetTemperature_0_46_0",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i will set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_46_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_46_0)

SetTemperature_0_46_1 = {
    "name": "SetTemperature_0_46_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too warm? /$@!/ ['yes', 'no']",
        "Say /$@!/ i will set the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_46_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too warm?", ["Yes", "No"])
    if response == "Yes":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_46_1)

SetTemperature_0_47_0 = {
    "name": "SetTemperature_0_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_47_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    go_to("kitchen")
    if response == "Too hot":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_47_0)

SetTemperature_0_47_1 = {
    "name": "SetTemperature_0_47_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_47_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Too hot", "Too cold"])
    go_to("kitchen")
    if response == "Too hot":
        say("I will set the temperature to 70 degrees")
    else:
        say("I will set the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_47_1)

SetTemperature_0_48_0 = {
    "name": "SetTemperature_0_48_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_0_48_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Hot", "Cold"])
    if response == "Hot":
        say("I should set the temperature to 75 degrees")
    else:
        say("I should set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_48_0)

SetTemperature_0_48_1 = {
    "name": "SetTemperature_0_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ is it too hot or too cold? /$@!/ ['hot', 'cold']",
        "Say /$@!/ i should set the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_0_48_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Is it too hot or too cold?", ["Hot", "Cold"])
    if response == "Hot":
        say("I should set the temperature to 75 degrees")
    else:
        say("I should set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_48_1)

SetTemperature_0_49_0 = {
    "name": "SetTemperature_0_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_49_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I set the temperature to 75 degrees")
    else:
        say("I set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_49_0)

SetTemperature_0_49_1 = {
    "name": "SetTemperature_0_49_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_0_49_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you want it warmer or colder?", ["Warmer", "Colder"])
    go_to("kitchen")
    if response == "Warmer":
        say("I set the temperature to 75 degrees")
    else:
        say("I set the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_0_49_1)

SetTemperature_1_0_0 = {
    "name": "SetTemperature_1_0_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_0_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_0_0)

SetTemperature_1_0_1 = {
    "name": "SetTemperature_1_0_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_0_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_0_1)

SetTemperature_1_1_0 = {
    "name": "SetTemperature_1_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_1_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_1_0)

SetTemperature_1_1_1 = {
    "name": "SetTemperature_1_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_1_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_1_1)

SetTemperature_1_2_0 = {
    "name": "SetTemperature_1_2_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_2_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_2_0)

SetTemperature_1_2_1 = {
    "name": "SetTemperature_1_2_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_2_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_2_1)

SetTemperature_1_3_0 = {
    "name": "SetTemperature_1_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_3_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_3_0)

SetTemperature_1_3_1 = {
    "name": "SetTemperature_1_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_3_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_3_1)

SetTemperature_1_4_0 = {
    "name": "SetTemperature_1_4_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_4_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_4_0)

SetTemperature_1_4_1 = {
    "name": "SetTemperature_1_4_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_4_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_4_1)

SetTemperature_1_5_0 = {
    "name": "SetTemperature_1_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_5_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_5_0)

SetTemperature_1_5_1 = {
    "name": "SetTemperature_1_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_5_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_5_1)

SetTemperature_1_6_0 = {
    "name": "SetTemperature_1_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_6_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_6_0)

SetTemperature_1_6_1 = {
    "name": "SetTemperature_1_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_6_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_6_1)

SetTemperature_1_7_0 = {
    "name": "SetTemperature_1_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_7_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_7_0)

SetTemperature_1_7_1 = {
    "name": "SetTemperature_1_7_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_7_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_7_1)

SetTemperature_1_8_0 = {
    "name": "SetTemperature_1_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_8_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_8_0)

SetTemperature_1_8_1 = {
    "name": "SetTemperature_1_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_8_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_8_1)

SetTemperature_1_9_0 = {
    "name": "SetTemperature_1_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_9_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_9_0)

SetTemperature_1_9_1 = {
    "name": "SetTemperature_1_9_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_9_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_9_1)

SetTemperature_1_10_0 = {
    "name": "SetTemperature_1_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_10_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_10_0)

SetTemperature_1_10_1 = {
    "name": "SetTemperature_1_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_10_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_10_1)

SetTemperature_1_11_0 = {
    "name": "SetTemperature_1_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_11_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_11_0)

SetTemperature_1_11_1 = {
    "name": "SetTemperature_1_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_11_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_11_1)

SetTemperature_1_12_0 = {
    "name": "SetTemperature_1_12_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_12_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_12_0)

SetTemperature_1_12_1 = {
    "name": "SetTemperature_1_12_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_12_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_12_1)

SetTemperature_1_13_0 = {
    "name": "SetTemperature_1_13_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_13_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_13_0)

SetTemperature_1_13_1 = {
    "name": "SetTemperature_1_13_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_13_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_13_1)

SetTemperature_1_14_0 = {
    "name": "SetTemperature_1_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_14_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_14_0)

SetTemperature_1_14_1 = {
    "name": "SetTemperature_1_14_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_14_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_14_1)

SetTemperature_1_15_0 = {
    "name": "SetTemperature_1_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_15_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_15_0)

SetTemperature_1_15_1 = {
    "name": "SetTemperature_1_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_15_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_15_1)

SetTemperature_1_16_0 = {
    "name": "SetTemperature_1_16_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_16_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_16_0)

SetTemperature_1_16_1 = {
    "name": "SetTemperature_1_16_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_16_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_16_1)

SetTemperature_1_17_0 = {
    "name": "SetTemperature_1_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_17_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("living room")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_17_0)

SetTemperature_1_17_1 = {
    "name": "SetTemperature_1_17_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_17_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("living room")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_17_1)

SetTemperature_1_18_0 = {
    "name": "SetTemperature_1_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_18_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_18_0)

SetTemperature_1_18_1 = {
    "name": "SetTemperature_1_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_18_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_18_1)

SetTemperature_1_19_0 = {
    "name": "SetTemperature_1_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_19_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_19_0)

SetTemperature_1_19_1 = {
    "name": "SetTemperature_1_19_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_19_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_19_1)

SetTemperature_1_20_0 = {
    "name": "SetTemperature_1_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_20_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_20_0)

SetTemperature_1_20_1 = {
    "name": "SetTemperature_1_20_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_20_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_20_1)

SetTemperature_1_21_0 = {
    "name": "SetTemperature_1_21_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_21_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_21_0)

SetTemperature_1_21_1 = {
    "name": "SetTemperature_1_21_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_21_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_21_1)

SetTemperature_1_22_0 = {
    "name": "SetTemperature_1_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_22_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_22_0)

SetTemperature_1_22_1 = {
    "name": "SetTemperature_1_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_22_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_22_1)

SetTemperature_1_23_0 = {
    "name": "SetTemperature_1_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_23_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_23_0)

SetTemperature_1_23_1 = {
    "name": "SetTemperature_1_23_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_23_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_23_1)

SetTemperature_1_24_0 = {
    "name": "SetTemperature_1_24_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_24_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_24_0)

SetTemperature_1_24_1 = {
    "name": "SetTemperature_1_24_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_24_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_24_1)

SetTemperature_1_25_0 = {
    "name": "SetTemperature_1_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_25_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_25_0)

SetTemperature_1_25_1 = {
    "name": "SetTemperature_1_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_25_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_25_1)

SetTemperature_1_26_0 = {
    "name": "SetTemperature_1_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_26_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_26_0)

SetTemperature_1_26_1 = {
    "name": "SetTemperature_1_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_26_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_26_1)

SetTemperature_1_27_0 = {
    "name": "SetTemperature_1_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_27_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_27_0)

SetTemperature_1_27_1 = {
    "name": "SetTemperature_1_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_27_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_27_1)

SetTemperature_1_28_0 = {
    "name": "SetTemperature_1_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_28_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_28_0)

SetTemperature_1_28_1 = {
    "name": "SetTemperature_1_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_28_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_28_1)

SetTemperature_1_29_0 = {
    "name": "SetTemperature_1_29_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_29_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_29_0)

SetTemperature_1_29_1 = {
    "name": "SetTemperature_1_29_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_29_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_29_1)

SetTemperature_1_30_0 = {
    "name": "SetTemperature_1_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_30_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_30_0)

SetTemperature_1_30_1 = {
    "name": "SetTemperature_1_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_30_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_30_1)

SetTemperature_1_31_0 = {
    "name": "SetTemperature_1_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_31_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "Set the thermostat to 73 degrees"
    else:
        message = "Set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_31_0)

SetTemperature_1_31_1 = {
    "name": "SetTemperature_1_31_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_31_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "Set the thermostat to 73 degrees"
    else:
        message = "Set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_31_1)

SetTemperature_1_32_0 = {
    "name": "SetTemperature_1_32_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_32_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_32_0)

SetTemperature_1_32_1 = {
    "name": "SetTemperature_1_32_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_32_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_32_1)

SetTemperature_1_33_0 = {
    "name": "SetTemperature_1_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_33_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_33_0)

SetTemperature_1_33_1 = {
    "name": "SetTemperature_1_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_33_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_33_1)

SetTemperature_1_34_0 = {
    "name": "SetTemperature_1_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_34_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_34_0)

SetTemperature_1_34_1 = {
    "name": "SetTemperature_1_34_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_34_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_34_1)

SetTemperature_1_35_0 = {
    "name": "SetTemperature_1_35_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_35_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("living room")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_35_0)

SetTemperature_1_35_1 = {
    "name": "SetTemperature_1_35_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_35_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("living room")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_35_1)

SetTemperature_1_36_0 = {
    "name": "SetTemperature_1_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_36_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_36_0)

SetTemperature_1_36_1 = {
    "name": "SetTemperature_1_36_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_36_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_36_1)

SetTemperature_1_37_0 = {
    "name": "SetTemperature_1_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_37_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_37_0)

SetTemperature_1_37_1 = {
    "name": "SetTemperature_1_37_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_37_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_37_1)

SetTemperature_1_38_0 = {
    "name": "SetTemperature_1_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_38_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_38_0)

SetTemperature_1_38_1 = {
    "name": "SetTemperature_1_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_38_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_38_1)

SetTemperature_1_39_0 = {
    "name": "SetTemperature_1_39_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_39_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_39_0)

SetTemperature_1_39_1 = {
    "name": "SetTemperature_1_39_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_39_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_39_1)

SetTemperature_1_40_0 = {
    "name": "SetTemperature_1_40_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_40_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_40_0)

SetTemperature_1_40_1 = {
    "name": "SetTemperature_1_40_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_40_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_40_1)

SetTemperature_1_41_0 = {
    "name": "SetTemperature_1_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_41_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_41_0)

SetTemperature_1_41_1 = {
    "name": "SetTemperature_1_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_41_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_41_1)

SetTemperature_1_42_0 = {
    "name": "SetTemperature_1_42_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_42_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_42_0)

SetTemperature_1_42_1 = {
    "name": "SetTemperature_1_42_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_42_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_42_1)

SetTemperature_1_43_0 = {
    "name": "SetTemperature_1_43_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_43_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_43_0)

SetTemperature_1_43_1 = {
    "name": "SetTemperature_1_43_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_43_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_43_1)

SetTemperature_1_44_0 = {
    "name": "SetTemperature_1_44_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_44_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_44_0)

SetTemperature_1_44_1 = {
    "name": "SetTemperature_1_44_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_44_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_44_1)

SetTemperature_1_45_0 = {
    "name": "SetTemperature_1_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_45_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_45_0)

SetTemperature_1_45_1 = {
    "name": "SetTemperature_1_45_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_45_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_45_1)

SetTemperature_1_46_0 = {
    "name": "SetTemperature_1_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_46_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("living room")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_46_0)

SetTemperature_1_46_1 = {
    "name": "SetTemperature_1_46_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_46_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("living room")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_46_1)

SetTemperature_1_47_0 = {
    "name": "SetTemperature_1_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_47_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_47_0)

SetTemperature_1_47_1 = {
    "name": "SetTemperature_1_47_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_47_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_47_1)

SetTemperature_1_48_0 = {
    "name": "SetTemperature_1_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_48_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_48_0)

SetTemperature_1_48_1 = {
    "name": "SetTemperature_1_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like it to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the thermostat to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_1_48_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the thermostat to 73 degrees")
    else:
        say("I should set the thermostat to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_1_48_1)

SetTemperature_1_49_0 = {
    "name": "SetTemperature_1_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_49_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_49_0)

SetTemperature_1_49_1 = {
    "name": "SetTemperature_1_49_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_1_49_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like it to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the thermostat to 73 degrees"
    else:
        message = "I should set the thermostat to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_1_49_1)

SetTemperature_2_0_0 = {
    "name": "SetTemperature_2_0_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_0_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_0_0)

SetTemperature_2_0_1 = {
    "name": "SetTemperature_2_0_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_0_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_0_1)

SetTemperature_2_1_0 = {
    "name": "SetTemperature_2_1_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think the temperature should be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_1_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think the temperature should be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_1_0)

SetTemperature_2_1_1 = {
    "name": "SetTemperature_2_1_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think the temperature should be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_1_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think the temperature should be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_1_1)

SetTemperature_2_2_0 = {
    "name": "SetTemperature_2_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_2_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_2_0)

SetTemperature_2_2_1 = {
    "name": "SetTemperature_2_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_2_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_2_1)

SetTemperature_2_3_0 = {
    "name": "SetTemperature_2_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think the temperature should be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_3_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think the temperature should be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_3_0)

SetTemperature_2_3_1 = {
    "name": "SetTemperature_2_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think the temperature should be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_3_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think the temperature should be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_3_1)

SetTemperature_2_4_0 = {
    "name": "SetTemperature_2_4_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_4_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_4_0)

SetTemperature_2_4_1 = {
    "name": "SetTemperature_2_4_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_4_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_4_1)

SetTemperature_2_5_0 = {
    "name": "SetTemperature_2_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_5_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_5_0)

SetTemperature_2_5_1 = {
    "name": "SetTemperature_2_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_5_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_5_1)

SetTemperature_2_6_0 = {
    "name": "SetTemperature_2_6_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_6_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the temperature up or down?", ["Up", "Down"])
    if response == "Up":
        new_temp = 73
    else:
        new_temp = 71
    go_to("kitchen")
    say("I should change the temperature to " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_6_0)

SetTemperature_2_6_1 = {
    "name": "SetTemperature_2_6_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_6_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the temperature up or down?", ["Up", "Down"])
    if response == "Up":
        new_temp = 73
    else:
        new_temp = 71
    go_to("kitchen")
    say("I should change the temperature to " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_6_1)

SetTemperature_2_7_0 = {
    "name": "SetTemperature_2_7_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think the temperature should be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_7_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think the temperature should be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_7_0)

SetTemperature_2_7_1 = {
    "name": "SetTemperature_2_7_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think the temperature should be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_7_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think the temperature should be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_7_1)

SetTemperature_2_8_0 = {
    "name": "SetTemperature_2_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_8_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the temperature up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the temperature up")
    else:
        say("I should turn the temperature down")

"""

ordered_field_buffer.append(SetTemperature_2_8_0)

SetTemperature_2_8_1 = {
    "name": "SetTemperature_2_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_8_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the temperature up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the temperature up")
    else:
        say("I should turn the temperature down")

"""

ordered_field_buffer.append(SetTemperature_2_8_1)

SetTemperature_2_9_0 = {
    "name": "SetTemperature_2_9_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the thermostat to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_9_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the thermostat to 68 degrees")
    else:
        say("I should change the thermostat to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_9_0)

SetTemperature_2_9_1 = {
    "name": "SetTemperature_2_9_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the thermostat to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_9_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the thermostat to 68 degrees")
    else:
        say("I should change the thermostat to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_9_1)

SetTemperature_2_10_0 = {
    "name": "SetTemperature_2_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_10_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_10_0)

SetTemperature_2_10_1 = {
    "name": "SetTemperature_2_10_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_10_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_10_1)

SetTemperature_2_11_0 = {
    "name": "SetTemperature_2_11_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_11_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the temperature up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the temperature up")
    else:
        say("I should turn the temperature down")

"""

ordered_field_buffer.append(SetTemperature_2_11_0)

SetTemperature_2_11_1 = {
    "name": "SetTemperature_2_11_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_11_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the temperature up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the temperature up")
    else:
        say("I should turn the temperature down")

"""

ordered_field_buffer.append(SetTemperature_2_11_1)

SetTemperature_2_12_0 = {
    "name": "SetTemperature_2_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_12_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_12_0)

SetTemperature_2_12_1 = {
    "name": "SetTemperature_2_12_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_12_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_12_1)

SetTemperature_2_13_0 = {
    "name": "SetTemperature_2_13_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_13_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        new_temp = 72 + 1
    else:
        new_temp = 72 - 1
    go_to("kitchen")
    say("I should change the thermostat to " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_13_0)

SetTemperature_2_13_1 = {
    "name": "SetTemperature_2_13_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_13_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        new_temp = 72 + 1
    else:
        new_temp = 72 - 1
    go_to("kitchen")
    say("I should change the thermostat to " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_13_1)

SetTemperature_2_14_0 = {
    "name": "SetTemperature_2_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_14_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_14_0)

SetTemperature_2_14_1 = {
    "name": "SetTemperature_2_14_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_14_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_14_1)

SetTemperature_2_15_0 = {
    "name": "SetTemperature_2_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_15_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_15_0)

SetTemperature_2_15_1 = {
    "name": "SetTemperature_2_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_15_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_15_1)

SetTemperature_2_16_0 = {
    "name": "SetTemperature_2_16_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_16_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_16_0)

SetTemperature_2_16_1 = {
    "name": "SetTemperature_2_16_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_16_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_16_1)

SetTemperature_2_17_0 = {
    "name": "SetTemperature_2_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_17_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_17_0)

SetTemperature_2_17_1 = {
    "name": "SetTemperature_2_17_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_17_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_17_1)

SetTemperature_2_18_0 = {
    "name": "SetTemperature_2_18_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_2_18_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        new_temp = 68
    else:
        new_temp = 76
    go_to("kitchen")
    say("The temperature should be set to " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_18_0)

SetTemperature_2_18_1 = {
    "name": "SetTemperature_2_18_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_2_18_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        new_temp = 68
    else:
        new_temp = 76
    go_to("kitchen")
    say("The temperature should be set to " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_18_1)

SetTemperature_2_19_0 = {
    "name": "SetTemperature_2_19_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the thermostat to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_19_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the thermostat to 68 degrees")
    else:
        say("I should change the thermostat to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_19_0)

SetTemperature_2_19_1 = {
    "name": "SetTemperature_2_19_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the thermostat to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_19_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the thermostat to 68 degrees")
    else:
        say("I should change the thermostat to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_19_1)

SetTemperature_2_20_0 = {
    "name": "SetTemperature_2_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_20_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_20_0)

SetTemperature_2_20_1 = {
    "name": "SetTemperature_2_20_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_20_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_20_1)

SetTemperature_2_21_0 = {
    "name": "SetTemperature_2_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_21_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_21_0)

SetTemperature_2_21_1 = {
    "name": "SetTemperature_2_21_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_21_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_21_1)

SetTemperature_2_22_0 = {
    "name": "SetTemperature_2_22_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_22_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_22_0)

SetTemperature_2_22_1 = {
    "name": "SetTemperature_2_22_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_22_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_22_1)

SetTemperature_2_23_0 = {
    "name": "SetTemperature_2_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_2_23_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        new_temp = 68
    else:
        new_temp = 76
    go_to("kitchen")
    say("The new temperature should be " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_23_0)

SetTemperature_2_23_1 = {
    "name": "SetTemperature_2_23_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_2_23_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        new_temp = 68
    else:
        new_temp = 76
    go_to("kitchen")
    say("The new temperature should be " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_23_1)

SetTemperature_2_24_0 = {
    "name": "SetTemperature_2_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_24_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_24_0)

SetTemperature_2_24_1 = {
    "name": "SetTemperature_2_24_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_24_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_24_1)

SetTemperature_2_25_0 = {
    "name": "SetTemperature_2_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_25_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 70 degrees")
    else:
        say("I should change the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_25_0)

SetTemperature_2_25_1 = {
    "name": "SetTemperature_2_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_25_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 70 degrees")
    else:
        say("I should change the temperature to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_25_1)

SetTemperature_2_26_0 = {
    "name": "SetTemperature_2_26_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_26_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_26_0)

SetTemperature_2_26_1 = {
    "name": "SetTemperature_2_26_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_26_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_26_1)

SetTemperature_2_27_0 = {
    "name": "SetTemperature_2_27_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_2_27_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        new_temp = 68
    else:
        new_temp = 76
    go_to("kitchen")
    say("I should change the temperature to " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_27_0)

SetTemperature_2_27_1 = {
    "name": "SetTemperature_2_27_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_2_27_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        new_temp = 68
    else:
        new_temp = 76
    go_to("kitchen")
    say("I should change the temperature to " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_27_1)

SetTemperature_2_28_0 = {
    "name": "SetTemperature_2_28_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_28_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_28_0)

SetTemperature_2_28_1 = {
    "name": "SetTemperature_2_28_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_28_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_28_1)

SetTemperature_2_29_0 = {
    "name": "SetTemperature_2_29_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_29_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_29_0)

SetTemperature_2_29_1 = {
    "name": "SetTemperature_2_29_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_29_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_29_1)

SetTemperature_2_30_0 = {
    "name": "SetTemperature_2_30_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_30_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_30_0)

SetTemperature_2_30_1 = {
    "name": "SetTemperature_2_30_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_30_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_30_1)

SetTemperature_2_31_0 = {
    "name": "SetTemperature_2_31_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_31_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_31_0)

SetTemperature_2_31_1 = {
    "name": "SetTemperature_2_31_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_31_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_31_1)

SetTemperature_2_32_0 = {
    "name": "SetTemperature_2_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_2_32_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        new_temp = 68
    else:
        new_temp = 76
    go_to("kitchen")
    say("I should change the temperature to " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_32_0)

SetTemperature_2_32_1 = {
    "name": "SetTemperature_2_32_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_2_32_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        new_temp = 68
    else:
        new_temp = 76
    go_to("kitchen")
    say("I should change the temperature to " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_32_1)

SetTemperature_2_33_0 = {
    "name": "SetTemperature_2_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_33_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_33_0)

SetTemperature_2_33_1 = {
    "name": "SetTemperature_2_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_33_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_33_1)

SetTemperature_2_34_0 = {
    "name": "SetTemperature_2_34_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the thermostat to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_34_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the thermostat to 70 degrees")
    else:
        say("I should change the thermostat to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_34_0)

SetTemperature_2_34_1 = {
    "name": "SetTemperature_2_34_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the thermostat to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_34_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the thermostat to 70 degrees")
    else:
        say("I should change the thermostat to 74 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_34_1)

SetTemperature_2_35_0 = {
    "name": "SetTemperature_2_35_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_35_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_35_0)

SetTemperature_2_35_1 = {
    "name": "SetTemperature_2_35_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_35_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_35_1)

SetTemperature_2_36_0 = {
    "name": "SetTemperature_2_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_2_36_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        new_temp = 68
    else:
        new_temp = 76
    go_to("thermostat")
    say("Change the temperature to " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_36_0)

SetTemperature_2_36_1 = {
    "name": "SetTemperature_2_36_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_2_36_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        new_temp = 68
    else:
        new_temp = 76
    go_to("thermostat")
    say("Change the temperature to " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_36_1)

SetTemperature_2_37_0 = {
    "name": "SetTemperature_2_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_37_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_37_0)

SetTemperature_2_37_1 = {
    "name": "SetTemperature_2_37_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_37_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_37_1)

SetTemperature_2_38_0 = {
    "name": "SetTemperature_2_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think the temperature should be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the thermostat to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_38_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think the temperature should be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the thermostat to 68 degrees")
    else:
        say("I should change the thermostat to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_38_0)

SetTemperature_2_38_1 = {
    "name": "SetTemperature_2_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think the temperature should be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the thermostat to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_38_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think the temperature should be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the thermostat to 68 degrees")
    else:
        say("I should change the thermostat to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_38_1)

SetTemperature_2_39_0 = {
    "name": "SetTemperature_2_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_39_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        new_temp = 72 + 1
    else:
        new_temp = 72 - 1
    go_to("kitchen")
    say("I should change the thermostat to " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_39_0)

SetTemperature_2_39_1 = {
    "name": "SetTemperature_2_39_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_39_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        new_temp = 72 + 1
    else:
        new_temp = 72 - 1
    go_to("kitchen")
    say("I should change the thermostat to " + str(new_temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_2_39_1)

SetTemperature_2_40_0 = {
    "name": "SetTemperature_2_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_40_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_40_0)

SetTemperature_2_40_1 = {
    "name": "SetTemperature_2_40_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_40_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_40_1)

SetTemperature_2_41_0 = {
    "name": "SetTemperature_2_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think the temperature should be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the thermostat to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_41_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think the temperature should be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the thermostat to 68 degrees")
    else:
        say("I should change the thermostat to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_41_0)

SetTemperature_2_41_1 = {
    "name": "SetTemperature_2_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think the temperature should be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the thermostat to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_41_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think the temperature should be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the thermostat to 68 degrees")
    else:
        say("I should change the thermostat to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_41_1)

SetTemperature_2_42_0 = {
    "name": "SetTemperature_2_42_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_42_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_42_0)

SetTemperature_2_42_1 = {
    "name": "SetTemperature_2_42_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_42_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_42_1)

SetTemperature_2_43_0 = {
    "name": "SetTemperature_2_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_43_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_43_0)

SetTemperature_2_43_1 = {
    "name": "SetTemperature_2_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_43_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_43_1)

SetTemperature_2_44_0 = {
    "name": "SetTemperature_2_44_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_44_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_44_0)

SetTemperature_2_44_1 = {
    "name": "SetTemperature_2_44_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_44_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_44_1)

SetTemperature_2_45_0 = {
    "name": "SetTemperature_2_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_45_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think the temperature is too cold or too hot?", ["Too cold", "Too hot"])
    if response == "Too cold":
        say("I should increase the temperature by 2 degrees")
    else:
        say("I should decrease the temperature by 2 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_45_0)

SetTemperature_2_45_1 = {
    "name": "SetTemperature_2_45_1",
    "is_sat": "False",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ do you think the temperature is too cold or too hot? /$@!/ ['too cold', 'too hot']",
        "Say /$@!/ i should increase the temperature by 2 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_45_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Do you think the temperature is too cold or too hot?", ["Too cold", "Too hot"])
    if response == "Too cold":
        say("I should increase the temperature by 2 degrees")
    else:
        say("I should decrease the temperature by 2 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_45_1)

SetTemperature_2_46_0 = {
    "name": "SetTemperature_2_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_46_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_46_0)

SetTemperature_2_46_1 = {
    "name": "SetTemperature_2_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_46_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_46_1)

SetTemperature_2_47_0 = {
    "name": "SetTemperature_2_47_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the thermostat to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_47_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the thermostat to 68 degrees")
    else:
        say("I should change the thermostat to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_47_0)

SetTemperature_2_47_1 = {
    "name": "SetTemperature_2_47_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the thermostat to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_47_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the thermostat to 68 degrees")
    else:
        say("I should change the thermostat to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_47_1)

SetTemperature_2_48_0 = {
    "name": "SetTemperature_2_48_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_48_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_48_0)

SetTemperature_2_48_1 = {
    "name": "SetTemperature_2_48_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotAskError: ask_agent failed",
}

program_SetTemperature_2_48_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should I turn the thermostat up or down?", ["Up", "Down"])
    if response == "Up":
        say("I should turn the thermostat up")
    else:
        say("I should turn the thermostat down")

"""

ordered_field_buffer.append(SetTemperature_2_48_1)

SetTemperature_2_49_0 = {
    "name": "SetTemperature_2_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 76 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_49_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_49_0)

SetTemperature_2_49_1 = {
    "name": "SetTemperature_2_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ should the temperature be colder or warmer? /$@!/ ['cold', 'warm']",
        "Say /$@!/ i should change the temperature to 68 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_2_49_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Should the temperature be colder or warmer?", ["Cold", "Warm"])
    if response == "Cold":
        say("I should change the temperature to 68 degrees")
    else:
        say("I should change the temperature to 76 degrees")

"""

ordered_field_buffer.append(SetTemperature_2_49_1)

SetTemperature_3_0_0 = {
    "name": "SetTemperature_3_0_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like the temperature to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_0_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_0_0)

SetTemperature_3_0_1 = {
    "name": "SetTemperature_3_0_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like the temperature to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_0_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_0_1)

SetTemperature_3_1_0 = {
    "name": "SetTemperature_3_1_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_1_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_1_0)

SetTemperature_3_1_1 = {
    "name": "SetTemperature_3_1_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_1_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_1_1)

SetTemperature_3_2_0 = {
    "name": "SetTemperature_3_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_2_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_2_0)

SetTemperature_3_2_1 = {
    "name": "SetTemperature_3_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_2_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_2_1)

SetTemperature_3_3_0 = {
    "name": "SetTemperature_3_3_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_3_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 73 degrees")
    else:
        say("I should reset the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_3_0)

SetTemperature_3_3_1 = {
    "name": "SetTemperature_3_3_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_3_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 73 degrees")
    else:
        say("I should reset the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_3_1)

SetTemperature_3_4_0 = {
    "name": "SetTemperature_3_4_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_4_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_4_0)

SetTemperature_3_4_1 = {
    "name": "SetTemperature_3_4_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_4_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_4_1)

SetTemperature_3_5_0 = {
    "name": "SetTemperature_3_5_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_5_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_5_0)

SetTemperature_3_5_1 = {
    "name": "SetTemperature_3_5_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_5_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_5_1)

SetTemperature_3_6_0 = {
    "name": "SetTemperature_3_6_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_6_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_6_0)

SetTemperature_3_6_1 = {
    "name": "SetTemperature_3_6_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_6_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_6_1)

SetTemperature_3_7_0 = {
    "name": "SetTemperature_3_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_7_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_7_0)

SetTemperature_3_7_1 = {
    "name": "SetTemperature_3_7_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_7_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_7_1)

SetTemperature_3_8_0 = {
    "name": "SetTemperature_3_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_8_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_8_0)

SetTemperature_3_8_1 = {
    "name": "SetTemperature_3_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_8_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_8_1)

SetTemperature_3_9_0 = {
    "name": "SetTemperature_3_9_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_9_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "Please set the temperature to 74 degrees"
    else:
        message = "Please set the temperature to 70 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_9_0)

SetTemperature_3_9_1 = {
    "name": "SetTemperature_3_9_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_9_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "Please set the temperature to 74 degrees"
    else:
        message = "Please set the temperature to 70 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_9_1)

SetTemperature_3_10_0 = {
    "name": "SetTemperature_3_10_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_10_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_10_0)

SetTemperature_3_10_1 = {
    "name": "SetTemperature_3_10_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_10_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_10_1)

SetTemperature_3_11_0 = {
    "name": "SetTemperature_3_11_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_11_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 73 degrees")
    else:
        say("I should reset the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_11_0)

SetTemperature_3_11_1 = {
    "name": "SetTemperature_3_11_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_11_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 73 degrees")
    else:
        say("I should reset the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_11_1)

SetTemperature_3_12_0 = {
    "name": "SetTemperature_3_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_12_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_12_0)

SetTemperature_3_12_1 = {
    "name": "SetTemperature_3_12_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_12_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_12_1)

SetTemperature_3_13_0 = {
    "name": "SetTemperature_3_13_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_13_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_13_0)

SetTemperature_3_13_1 = {
    "name": "SetTemperature_3_13_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_13_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_13_1)

SetTemperature_3_14_0 = {
    "name": "SetTemperature_3_14_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_14_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_14_0)

SetTemperature_3_14_1 = {
    "name": "SetTemperature_3_14_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_14_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_14_1)

SetTemperature_3_15_0 = {
    "name": "SetTemperature_3_15_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_15_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 73 degrees")
    else:
        say("I should reset the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_15_0)

SetTemperature_3_15_1 = {
    "name": "SetTemperature_3_15_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_15_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 73 degrees")
    else:
        say("I should reset the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_15_1)

SetTemperature_3_16_0 = {
    "name": "SetTemperature_3_16_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_16_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_16_0)

SetTemperature_3_16_1 = {
    "name": "SetTemperature_3_16_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_16_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_16_1)

SetTemperature_3_17_0 = {
    "name": "SetTemperature_3_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_17_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_17_0)

SetTemperature_3_17_1 = {
    "name": "SetTemperature_3_17_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_17_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_17_1)

SetTemperature_3_18_0 = {
    "name": "SetTemperature_3_18_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_18_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_18_0)

SetTemperature_3_18_1 = {
    "name": "SetTemperature_3_18_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_18_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_18_1)

SetTemperature_3_19_0 = {
    "name": "SetTemperature_3_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_19_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_19_0)

SetTemperature_3_19_1 = {
    "name": "SetTemperature_3_19_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_19_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_19_1)

SetTemperature_3_20_0 = {
    "name": "SetTemperature_3_20_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_20_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_20_0)

SetTemperature_3_20_1 = {
    "name": "SetTemperature_3_20_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_20_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_20_1)

SetTemperature_3_21_0 = {
    "name": "SetTemperature_3_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_21_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "Please set the temperature to 74 degrees"
    else:
        message = "Please set the temperature to 70 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_21_0)

SetTemperature_3_21_1 = {
    "name": "SetTemperature_3_21_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_21_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "Please set the temperature to 74 degrees"
    else:
        message = "Please set the temperature to 70 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_21_1)

SetTemperature_3_22_0 = {
    "name": "SetTemperature_3_22_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_22_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_22_0)

SetTemperature_3_22_1 = {
    "name": "SetTemperature_3_22_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_22_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_22_1)

SetTemperature_3_23_0 = {
    "name": "SetTemperature_3_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_23_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_23_0)

SetTemperature_3_23_1 = {
    "name": "SetTemperature_3_23_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_23_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_23_1)

SetTemperature_3_24_0 = {
    "name": "SetTemperature_3_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_24_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_24_0)

SetTemperature_3_24_1 = {
    "name": "SetTemperature_3_24_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_24_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_24_1)

SetTemperature_3_25_0 = {
    "name": "SetTemperature_3_25_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_25_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 73 degrees")
    else:
        say("I should reset the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_25_0)

SetTemperature_3_25_1 = {
    "name": "SetTemperature_3_25_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_25_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 73 degrees")
    else:
        say("I should reset the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_25_1)

SetTemperature_3_26_0 = {
    "name": "SetTemperature_3_26_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_26_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_26_0)

SetTemperature_3_26_1 = {
    "name": "SetTemperature_3_26_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_26_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_26_1)

SetTemperature_3_27_0 = {
    "name": "SetTemperature_3_27_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_27_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 73 degrees")
    else:
        say("I should reset the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_27_0)

SetTemperature_3_27_1 = {
    "name": "SetTemperature_3_27_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_27_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 73 degrees")
    else:
        say("I should reset the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_27_1)

SetTemperature_3_28_0 = {
    "name": "SetTemperature_3_28_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_28_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_28_0)

SetTemperature_3_28_1 = {
    "name": "SetTemperature_3_28_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_28_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_28_1)

SetTemperature_3_29_0 = {
    "name": "SetTemperature_3_29_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_29_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_29_0)

SetTemperature_3_29_1 = {
    "name": "SetTemperature_3_29_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_29_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_29_1)

SetTemperature_3_30_0 = {
    "name": "SetTemperature_3_30_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like the temperature to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_30_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_30_0)

SetTemperature_3_30_1 = {
    "name": "SetTemperature_3_30_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like the temperature to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_30_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_30_1)

SetTemperature_3_31_0 = {
    "name": "SetTemperature_3_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_31_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_31_0)

SetTemperature_3_31_1 = {
    "name": "SetTemperature_3_31_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_31_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_31_1)

SetTemperature_3_32_0 = {
    "name": "SetTemperature_3_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_32_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_32_0)

SetTemperature_3_32_1 = {
    "name": "SetTemperature_3_32_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_32_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_32_1)

SetTemperature_3_33_0 = {
    "name": "SetTemperature_3_33_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like the temperature to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_33_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_33_0)

SetTemperature_3_33_1 = {
    "name": "SetTemperature_3_33_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like the temperature to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_33_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_33_1)

SetTemperature_3_34_0 = {
    "name": "SetTemperature_3_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_34_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "Please set the temperature to 74 degrees"
    else:
        message = "Please set the temperature to 70 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_34_0)

SetTemperature_3_34_1 = {
    "name": "SetTemperature_3_34_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_34_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "Please set the temperature to 74 degrees"
    else:
        message = "Please set the temperature to 70 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_34_1)

SetTemperature_3_35_0 = {
    "name": "SetTemperature_3_35_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_35_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_35_0)

SetTemperature_3_35_1 = {
    "name": "SetTemperature_3_35_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_35_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_35_1)

SetTemperature_3_36_0 = {
    "name": "SetTemperature_3_36_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_36_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 73 degrees")
    else:
        say("I should reset the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_36_0)

SetTemperature_3_36_1 = {
    "name": "SetTemperature_3_36_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_36_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 73 degrees")
    else:
        say("I should reset the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_36_1)

SetTemperature_3_37_0 = {
    "name": "SetTemperature_3_37_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_37_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_37_0)

SetTemperature_3_37_1 = {
    "name": "SetTemperature_3_37_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_37_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_37_1)

SetTemperature_3_38_0 = {
    "name": "SetTemperature_3_38_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_38_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 74 degrees")
    else:
        say("I should reset the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_38_0)

SetTemperature_3_38_1 = {
    "name": "SetTemperature_3_38_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_38_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 74 degrees")
    else:
        say("I should reset the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_38_1)

SetTemperature_3_39_0 = {
    "name": "SetTemperature_3_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_39_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_39_0)

SetTemperature_3_39_1 = {
    "name": "SetTemperature_3_39_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_39_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_39_1)

SetTemperature_3_40_0 = {
    "name": "SetTemperature_3_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_40_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_40_0)

SetTemperature_3_40_1 = {
    "name": "SetTemperature_3_40_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_40_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_40_1)

SetTemperature_3_41_0 = {
    "name": "SetTemperature_3_41_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_41_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_41_0)

SetTemperature_3_41_1 = {
    "name": "SetTemperature_3_41_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_41_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_41_1)

SetTemperature_3_42_0 = {
    "name": "SetTemperature_3_42_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_42_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_42_0)

SetTemperature_3_42_1 = {
    "name": "SetTemperature_3_42_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_42_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_42_1)

SetTemperature_3_43_0 = {
    "name": "SetTemperature_3_43_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_43_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_43_0)

SetTemperature_3_43_1 = {
    "name": "SetTemperature_3_43_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_43_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_43_1)

SetTemperature_3_44_0 = {
    "name": "SetTemperature_3_44_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_44_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_44_0)

SetTemperature_3_44_1 = {
    "name": "SetTemperature_3_44_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_44_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_44_1)

SetTemperature_3_45_0 = {
    "name": "SetTemperature_3_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_45_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_45_0)

SetTemperature_3_45_1 = {
    "name": "SetTemperature_3_45_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_45_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_45_1)

SetTemperature_3_46_0 = {
    "name": "SetTemperature_3_46_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_46_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_46_0)

SetTemperature_3_46_1 = {
    "name": "SetTemperature_3_46_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_46_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_46_1)

SetTemperature_3_47_0 = {
    "name": "SetTemperature_3_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_47_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_47_0)

SetTemperature_3_47_1 = {
    "name": "SetTemperature_3_47_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_3_47_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        message = "I should set the temperature to 73 degrees"
    else:
        message = "I should set the temperature to 71 degrees"
    go_to("kitchen")
    say(message)

"""

ordered_field_buffer.append(SetTemperature_3_47_1)

SetTemperature_3_48_0 = {
    "name": "SetTemperature_3_48_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 73 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_48_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_48_0)

SetTemperature_3_48_1 = {
    "name": "SetTemperature_3_48_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should set the temperature to 71 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_48_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should set the temperature to 73 degrees")
    else:
        say("I should set the temperature to 71 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_48_1)

SetTemperature_3_49_0 = {
    "name": "SetTemperature_3_49_0",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 74 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_49_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 74 degrees")
    else:
        say("I should reset the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_49_0)

SetTemperature_3_49_1 = {
    "name": "SetTemperature_3_49_1",
    "is_sat": "True",
    "trace_elements_str": [
        "GoTo /$@!/ arjun's office /$@!/ None",
        "Ask /$@!/ would you like your office to be warmer or colder? /$@!/ ['warmer', 'colder']",
        "Say /$@!/ i should reset the temperature to 70 degrees /$@!/ None",
    ],
    "error_message": "",
}

program_SetTemperature_3_49_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like your office to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        say("I should reset the temperature to 74 degrees")
    else:
        say("I should reset the temperature to 70 degrees")

"""

ordered_field_buffer.append(SetTemperature_3_49_1)

SetTemperature_4_0_0 = {
    "name": "SetTemperature_4_0_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_0_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["warmer", "colder"])
    if response == "warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_0_0)

SetTemperature_4_0_1 = {
    "name": "SetTemperature_4_0_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_0_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["warmer", "colder"])
    if response == "warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_0_1)

SetTemperature_4_1_0 = {
    "name": "SetTemperature_4_1_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_1_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["warmer", "colder"])
    if response == "warmer":
        temp = 75
    else:
        temp = 69
    go_to("")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_1_0)

SetTemperature_4_1_1 = {
    "name": "SetTemperature_4_1_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_1_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["warmer", "colder"])
    if response == "warmer":
        temp = 75
    else:
        temp = 69
    go_to("")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_1_1)

SetTemperature_4_2_0 = {
    "name": "SetTemperature_4_2_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_2_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("The temperature should be set to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_2_0)

SetTemperature_4_2_1 = {
    "name": "SetTemperature_4_2_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_2_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("The temperature should be set to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_2_1)

SetTemperature_4_3_0 = {
    "name": "SetTemperature_4_3_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_3_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_3_0)

SetTemperature_4_3_1 = {
    "name": "SetTemperature_4_3_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_3_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_3_1)

SetTemperature_4_4_0 = {
    "name": "SetTemperature_4_4_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_4_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 69
    go_to("")
    say("I should set the temperature to " + str(temperature) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_4_0)

SetTemperature_4_4_1 = {
    "name": "SetTemperature_4_4_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_4_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 69
    go_to("")
    say("I should set the temperature to " + str(temperature) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_4_1)

SetTemperature_4_5_0 = {
    "name": "SetTemperature_4_5_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_5_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_5_0)

SetTemperature_4_5_1 = {
    "name": "SetTemperature_4_5_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_5_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_5_1)

SetTemperature_4_6_0 = {
    "name": "SetTemperature_4_6_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_6_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temperature) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_6_0)

SetTemperature_4_6_1 = {
    "name": "SetTemperature_4_6_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_6_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temperature) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_6_1)

SetTemperature_4_7_0 = {
    "name": "SetTemperature_4_7_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_7_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["warmer", "colder"])
    if response == "warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_7_0)

SetTemperature_4_7_1 = {
    "name": "SetTemperature_4_7_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_7_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["warmer", "colder"])
    if response == "warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_7_1)

SetTemperature_4_8_0 = {
    "name": "SetTemperature_4_8_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_8_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_8_0)

SetTemperature_4_8_1 = {
    "name": "SetTemperature_4_8_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_8_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_8_1)

SetTemperature_4_9_0 = {
    "name": "SetTemperature_4_9_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_9_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 72 + 10
    else:
        temp = 72 - 10
    go_to("")
    say("I should set the temperature to " + temp + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_9_0)

SetTemperature_4_9_1 = {
    "name": "SetTemperature_4_9_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_9_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 72 + 10
    else:
        temp = 72 - 10
    go_to("")
    say("I should set the temperature to " + temp + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_9_1)

SetTemperature_4_10_0 = {
    "name": "SetTemperature_4_10_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_10_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["warmer", "colder"])
    if response == "warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_10_0)

SetTemperature_4_10_1 = {
    "name": "SetTemperature_4_10_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_10_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["warmer", "colder"])
    if response == "warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_10_1)

SetTemperature_4_11_0 = {
    "name": "SetTemperature_4_11_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_11_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("The temperature should be set to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_11_0)

SetTemperature_4_11_1 = {
    "name": "SetTemperature_4_11_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_11_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("The temperature should be set to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_11_1)

SetTemperature_4_12_0 = {
    "name": "SetTemperature_4_12_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_12_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_12_0)

SetTemperature_4_12_1 = {
    "name": "SetTemperature_4_12_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_12_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_12_1)

SetTemperature_4_13_0 = {
    "name": "SetTemperature_4_13_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_13_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_13_0)

SetTemperature_4_13_1 = {
    "name": "SetTemperature_4_13_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_13_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_13_1)

SetTemperature_4_14_0 = {
    "name": "SetTemperature_4_14_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_14_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 72
    else:
        temp = 70
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_14_0)

SetTemperature_4_14_1 = {
    "name": "SetTemperature_4_14_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_14_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 72
    else:
        temp = 70
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_14_1)

SetTemperature_4_15_0 = {
    "name": "SetTemperature_4_15_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_15_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_15_0)

SetTemperature_4_15_1 = {
    "name": "SetTemperature_4_15_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_15_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_15_1)

SetTemperature_4_16_0 = {
    "name": "SetTemperature_4_16_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_16_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_16_0)

SetTemperature_4_16_1 = {
    "name": "SetTemperature_4_16_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_16_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_16_1)

SetTemperature_4_17_0 = {
    "name": "SetTemperature_4_17_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_17_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_17_0)

SetTemperature_4_17_1 = {
    "name": "SetTemperature_4_17_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_17_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_17_1)

SetTemperature_4_18_0 = {
    "name": "SetTemperature_4_18_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_18_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 73
    else:
        temp = 71
    go_to("")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_18_0)

SetTemperature_4_18_1 = {
    "name": "SetTemperature_4_18_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_18_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 73
    else:
        temp = 71
    go_to("")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_18_1)

SetTemperature_4_19_0 = {
    "name": "SetTemperature_4_19_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_19_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_19_0)

SetTemperature_4_19_1 = {
    "name": "SetTemperature_4_19_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_19_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_19_1)

SetTemperature_4_20_0 = {
    "name": "SetTemperature_4_20_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_20_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the temperature to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_20_0)

SetTemperature_4_20_1 = {
    "name": "SetTemperature_4_20_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_20_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the temperature to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_20_1)

SetTemperature_4_21_0 = {
    "name": "SetTemperature_4_21_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_21_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_21_0)

SetTemperature_4_21_1 = {
    "name": "SetTemperature_4_21_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_21_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_21_1)

SetTemperature_4_22_0 = {
    "name": "SetTemperature_4_22_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_22_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_22_0)

SetTemperature_4_22_1 = {
    "name": "SetTemperature_4_22_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_22_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_22_1)

SetTemperature_4_23_0 = {
    "name": "SetTemperature_4_23_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_23_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 69
    go_to("")
    say("The temperature should be set to " + str(temperature) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_23_0)

SetTemperature_4_23_1 = {
    "name": "SetTemperature_4_23_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_23_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 69
    go_to("")
    say("The temperature should be set to " + str(temperature) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_23_1)

SetTemperature_4_24_0 = {
    "name": "SetTemperature_4_24_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_24_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_24_0)

SetTemperature_4_24_1 = {
    "name": "SetTemperature_4_24_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_24_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_24_1)

SetTemperature_4_25_0 = {
    "name": "SetTemperature_4_25_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_25_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 70
    go_to("kitchen")
    say("I should set the thermostat to " + temperature + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_25_0)

SetTemperature_4_25_1 = {
    "name": "SetTemperature_4_25_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_25_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 70
    go_to("kitchen")
    say("I should set the thermostat to " + temperature + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_25_1)

SetTemperature_4_26_0 = {
    "name": "SetTemperature_4_26_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_26_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["warmer", "colder"])
    if response == "warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_26_0)

SetTemperature_4_26_1 = {
    "name": "SetTemperature_4_26_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_26_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["warmer", "colder"])
    if response == "warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_26_1)

SetTemperature_4_27_0 = {
    "name": "SetTemperature_4_27_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_27_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 69
    go_to("kitchen")
    say("Set the thermostat to " + temperature + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_27_0)

SetTemperature_4_27_1 = {
    "name": "SetTemperature_4_27_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_27_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 69
    go_to("kitchen")
    say("Set the thermostat to " + temperature + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_27_1)

SetTemperature_4_28_0 = {
    "name": "SetTemperature_4_28_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_28_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_28_0)

SetTemperature_4_28_1 = {
    "name": "SetTemperature_4_28_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_28_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_28_1)

SetTemperature_4_29_0 = {
    "name": "SetTemperature_4_29_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_29_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temperature) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_29_0)

SetTemperature_4_29_1 = {
    "name": "SetTemperature_4_29_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_29_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temperature) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_29_1)

SetTemperature_4_30_0 = {
    "name": "SetTemperature_4_30_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_30_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("")
    say("I should set the temperature to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_30_0)

SetTemperature_4_30_1 = {
    "name": "SetTemperature_4_30_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_30_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("")
    say("I should set the temperature to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_30_1)

SetTemperature_4_31_0 = {
    "name": "SetTemperature_4_31_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_31_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 69
    go_to("")
    say("I should set the thermostat to " + str(temperature) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_31_0)

SetTemperature_4_31_1 = {
    "name": "SetTemperature_4_31_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_31_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 69
    go_to("")
    say("I should set the thermostat to " + str(temperature) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_31_1)

SetTemperature_4_32_0 = {
    "name": "SetTemperature_4_32_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_32_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("The temperature should be set to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_32_0)

SetTemperature_4_32_1 = {
    "name": "SetTemperature_4_32_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_32_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("The temperature should be set to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_32_1)

SetTemperature_4_33_0 = {
    "name": "SetTemperature_4_33_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_33_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_33_0)

SetTemperature_4_33_1 = {
    "name": "SetTemperature_4_33_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_33_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_33_1)

SetTemperature_4_34_0 = {
    "name": "SetTemperature_4_34_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_34_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["warmer", "colder"])
    if response == "warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the temperature to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_34_0)

SetTemperature_4_34_1 = {
    "name": "SetTemperature_4_34_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_34_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["warmer", "colder"])
    if response == "warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the temperature to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_34_1)

SetTemperature_4_35_0 = {
    "name": "SetTemperature_4_35_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_35_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 69
    go_to("kitchen")
    say("The temperature should be set to " + str(temperature) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_35_0)

SetTemperature_4_35_1 = {
    "name": "SetTemperature_4_35_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_35_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 69
    go_to("kitchen")
    say("The temperature should be set to " + str(temperature) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_35_1)

SetTemperature_4_36_0 = {
    "name": "SetTemperature_4_36_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_36_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 72 + 10
    else:
        temp = 72 - 10
    go_to("")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_36_0)

SetTemperature_4_36_1 = {
    "name": "SetTemperature_4_36_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_36_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 72 + 10
    else:
        temp = 72 - 10
    go_to("")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_36_1)

SetTemperature_4_37_0 = {
    "name": "SetTemperature_4_37_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_37_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("The temperature should be set to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_37_0)

SetTemperature_4_37_1 = {
    "name": "SetTemperature_4_37_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_37_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("The temperature should be set to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_37_1)

SetTemperature_4_38_0 = {
    "name": "SetTemperature_4_38_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_38_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 72 + 10
    else:
        temp = 72 - 10
    go_to("")
    say("I should set the temperature to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_38_0)

SetTemperature_4_38_1 = {
    "name": "SetTemperature_4_38_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_38_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 72 + 10
    else:
        temp = 72 - 10
    go_to("")
    say("I should set the temperature to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_38_1)

SetTemperature_4_39_0 = {
    "name": "SetTemperature_4_39_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_39_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_39_0)

SetTemperature_4_39_1 = {
    "name": "SetTemperature_4_39_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_39_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_39_1)

SetTemperature_4_40_0 = {
    "name": "SetTemperature_4_40_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_40_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 72 + 10
    else:
        temp = 72 - 10
    go_to("")
    say("I should set the temperature to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_40_0)

SetTemperature_4_40_1 = {
    "name": "SetTemperature_4_40_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_40_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 72 + 10
    else:
        temp = 72 - 10
    go_to("")
    say("I should set the temperature to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_40_1)

SetTemperature_4_41_0 = {
    "name": "SetTemperature_4_41_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_41_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["warmer", "colder"])
    if response == "warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_41_0)

SetTemperature_4_41_1 = {
    "name": "SetTemperature_4_41_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_41_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["warmer", "colder"])
    if response == "warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_41_1)

SetTemperature_4_42_0 = {
    "name": "SetTemperature_4_42_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_42_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 72 + 10
    else:
        temp = 72 - 10
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_42_0)

SetTemperature_4_42_1 = {
    "name": "SetTemperature_4_42_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_42_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 72 + 10
    else:
        temp = 72 - 10
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_42_1)

SetTemperature_4_43_0 = {
    "name": "SetTemperature_4_43_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_43_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("living room")
    say("The temperature should be set to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_43_0)

SetTemperature_4_43_1 = {
    "name": "SetTemperature_4_43_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_43_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("living room")
    say("The temperature should be set to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_43_1)

SetTemperature_4_44_0 = {
    "name": "SetTemperature_4_44_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_44_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 68
    go_to("living room")
    say("The temperature should be set to " + str(temperature) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_44_0)

SetTemperature_4_44_1 = {
    "name": "SetTemperature_4_44_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_44_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temperature = 75
    else:
        temperature = 68
    go_to("living room")
    say("The temperature should be set to " + str(temperature) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_44_1)

SetTemperature_4_45_0 = {
    "name": "SetTemperature_4_45_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_45_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the temperature to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_45_0)

SetTemperature_4_45_1 = {
    "name": "SetTemperature_4_45_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_45_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("I should set the temperature to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_45_1)

SetTemperature_4_46_0 = {
    "name": "SetTemperature_4_46_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_46_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_46_0)

SetTemperature_4_46_1 = {
    "name": "SetTemperature_4_46_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_46_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_46_1)

SetTemperature_4_47_0 = {
    "name": "SetTemperature_4_47_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_47_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_47_0)

SetTemperature_4_47_1 = {
    "name": "SetTemperature_4_47_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_47_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_47_1)

SetTemperature_4_48_0 = {
    "name": "SetTemperature_4_48_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_48_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 72 + 10
    else:
        temp = 72 - 10
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_48_0)

SetTemperature_4_48_1 = {
    "name": "SetTemperature_4_48_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_48_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 72 + 10
    else:
        temp = 72 - 10
    go_to("kitchen")
    say("I should set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_48_1)

SetTemperature_4_49_0 = {
    "name": "SetTemperature_4_49_0",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_49_0 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_49_0)

SetTemperature_4_49_1 = {
    "name": "SetTemperature_4_49_1",
    "is_sat": "False",
    "trace_elements_str": [],
    "error_message": "SIM: Exception: RobotGoToError: update_robot_location failed",
}

program_SetTemperature_4_49_1 = """
def task_program():
    go_to("Arjun's office")
    response = ask("Arjun", "Would you like the temperature to be warmer or colder?", ["Warmer", "Colder"])
    if response == "Warmer":
        temp = 75
    else:
        temp = 69
    go_to("kitchen")
    say("Set the thermostat to " + str(temp) + " degrees")

"""

ordered_field_buffer.append(SetTemperature_4_49_1)
