{"type": "eval", "task": "Which room is the dog in?", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\ndog_found = False\ndog_loc = None\nfor room in list_of_rooms:\n    go_to(room)\n    if is_in_room(\"dog\"):\n        dog_found = True\n        dog_loc = room\n        break\ngo_to(start_loc)\nif dog_found:\n    say(\"The dog is in the \" + dog_loc)\nelse:\n    say(\"The dog is not in any room\")", "result": "Correct"}
{"type": "eval", "task": "Find a conference room with a projector.", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\nconf_room_found = False\nconf_room_loc = None\nfor room in list_of_rooms:\n    go_to(room)\n    if is_in_room(\"projector\"):\n        conf_room_found = True\n        conf_room_loc = room\n        break\ngo_to(start_loc)\nif conf_room_found:\n    say(\"There is a conference room with a projector in the \" + conf_room_loc)\nelse:\n    say(\"There is no conference room with a projector in the house\")", "result": "Correct"}
{"type": "eval", "task": "Go to Roberto's office and ask him whether he wants to go to the cafeteria, or Panera's for lunch.", "code": "start_loc = get_current_location()\ngo_to(\"Roberto's office\")\nresponse = ask(\"Roberto\", \"Where do you want to go for lunch?\", [\"Cafeteria\", \"Panera's\"])\ngo_to(start_loc)\nsay(\"Roberto said: \" + response)", "result": "Correct"}
{"type": "eval", "task": "Let me know how many offices have a whiteboard marker.", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\noffices_with_marker = 0\nfor room in list_of_rooms:\n    if \"office\" in room.lower():\n        go_to(room)\n        if is_in_room(\"whiteboard marker\"):\n            offices_with_marker += 1\ngo_to(start_loc)\nsay(\"There are \" + str(offices_with_marker) + \" offices with a whiteboard marker\")", "result": "Correct"}
{"type": "eval", "task": "Count how many offices have a whiteboard marker", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\ncount = 0\nfor room in list_of_rooms:\n    go_to(room)\n    if is_in_room(\"whiteboard marker\"):\n        count = count + 1\ngo_to(start_loc)\nsay(\"There are \" + str(count) + \" offices with a whiteboard marker\")", "result": "Correct"}
{"type": "eval", "task": "Find which room the dog is in.", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\ndog_found = False\ndog_loc = None\nfor room in list_of_rooms:\n    go_to(room)\n    if is_in_room(\"dog\"):\n        dog_found = True\n        dog_loc = room\n        break\ngo_to(start_loc)\nif dog_found:\n    say(\"The dog is in the \" + dog_loc)\nelse:\n    say(\"The dog is not in the house\")", "result": "Correct"}
{"type": "eval", "task": "Count how many offices have a red marker.", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\noffice_count = 0\nfor room in list_of_rooms:\n    if \"office\" in room:\n        go_to(room)\n        if is_in_room(\"red marker\"):\n            office_count += 1\n        go_to(start_loc)\nsay(\"There are \" + str(office_count) + \" offices with a red marker.\")", "result": "Correct"}
{"type": "eval", "task": "Find how many offices have a red marker in them.", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\nnum_offices_with_red_marker = 0\nfor room in list_of_rooms:\n    if \"office\" in room:\n        go_to(room)\n        if is_in_room(\"red marker\"):\n            num_offices_with_red_marker += 1\ngo_to(start_loc)\nsay(\"There are \" + str(num_offices_with_red_marker) + \" offices with a red marker\")", "result": "Correct"}
{"type": "eval", "task": "Go to Peter's office and ask him if he'd like a bagel, or a muffin. Come back and tell me what he said.", "code": "start_loc = get_current_location()\ngo_to(\"Peter's office\")\nresponse = ask(\"Peter\", \"Would you like a bagel or a muffin?\", [\"Bagel\", \"Muffin\"])\ngo_to(start_loc)\nsay(\"Peter said: \" + response)", "result": "Correct"}
{"type": "eval", "task": "Go downstairs and remind Jill that it\u2019s her turn to make dinner. Then go to Joe\u2019s room and tell him that dinner will be ready in 20 minutes.", "code": "start_loc = get_current_location()\ngo_to(\"downstairs\")\nsay(\"Jill, it's your turn to make dinner\")\ngo_to(\"Joe's room\")\nsay(\"Dinner will be ready in 20 minutes\")\ngo_to(start_loc)", "result": "Correct"}
{"type": "eval", "task": "Check if there is an open window in the living room, and if so, go tell Aiden to close it.", "code": "start_loc = get_current_location()\ngo_to(\"living room\")\nwindow_open = is_in_room(\"open window\")\ngo_to(start_loc)\nif window_open:\n    go_to(\"living room\")\n    say(\"Aiden, please close the window.\")\n    go_to(start_loc)", "result": "Incorrect"}
{"type": "eval", "task": "Can you check if Peter is in any room?", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\npeter_found = False\npeter_loc = None\nfor room in list_of_rooms:\n    go_to(room)\n    if is_in_room(\"Peter\"):\n        peter_found = True\n        peter_loc = room\n        break\ngo_to(start_loc)\nif peter_found:\n    say(\"Peter is in the \" + peter_loc)\nelse:\n    say(\"Peter is not in any room\")", "result": "Correct"}
{"type": "eval", "task": "Can you check if Peter is in a room?", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\nperson_found = False\nperson_loc = None\nfor room in list_of_rooms:\n    go_to(room)\n    if is_in_room(\"Peter\"):\n        person_found = True\n        person_loc = room\n        break\ngo_to(start_loc)\nif person_found:\n    say(\"Peter is in the \" + person_loc)\nelse:\n    say(\"Peter is not in any room\")", "result": "Correct"}
{"type": "eval", "task": "Can you tell me how many offices have a whiteboard eraser?", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\nnum_offices_with_eraser = 0\nfor room in list_of_rooms:\n    go_to(room)\n    if is_in_room(\"office\") and is_in_room(\"whiteboard eraser\"):\n        num_offices_with_eraser += 1\ngo_to(start_loc)\nsay(\"There are \" + str(num_offices_with_eraser) + \" offices with a whiteboard eraser\")", "result": "Correct"}
{"type": "eval", "task": "Can you tell me how many offices do not have a whiteboard eraser?", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\nnum_offices_without_eraser = 0\nfor room in list_of_rooms:\n    if \"office\" in room:\n        go_to(room)\n        if not is_in_room(\"whiteboard eraser\"):\n            num_offices_without_eraser += 1\ngo_to(start_loc)\nsay(str(num_offices_without_eraser) + \" offices do not have a whiteboard eraser\")", "result": "Correct"}
{"type": "eval", "task": "Go to the elevator wait until a visitor says they are here for the tour. If yes, welcome them to UTCS, and take them to the conference room. If not, wait for the next person.", "code": "start_loc = get_current_location()\ngo_to(\"elevator\")\nwhile True:\n    if is_in_room(\"person\"):\n        response = ask(\"Person\", \"Are you here for the tour?\", [\"Yes\", \"No\"])\n        if response == \"Yes\":\n            say(\"Welcome to UTCS!\")\n            go_to(\"conference room\")\n            break\n    time.sleep(1)\ngo_to(start_loc)", "result": "Correct"}
{"type": "eval", "task": "Check the kitchen counter to see if there are any drinks left. If there are drinks, wait until someone shows up and ask them to put it in the basket; then bring the drink back to me.", "code": "start_loc = get_current_location()\ngo_to(\"kitchen\")\ndrinks_left = is_in_room(\"drink\")\nif drinks_left:\n    while True:\n        if is_in_room(\"person\"):\n            break\n        time.sleep(1)\n    say(\"Please put the drink in my basket\")\ngo_to(start_loc)\nif drinks_left:\n    say(\"I have the drink\")\nelse:\n    say(\"There are no drinks left\")", "result": "Correct"}
{"type": "eval", "task": "Find which conference room I left my blue backpack and tell me where you found it.", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\nbackpack_found = False\nbackpack_loc = None\nfor room in list_of_rooms:\n    if \"conference\" not in room:\n        continue\n    go_to(room)\n    if is_in_room(\"blue backpack\"):\n        backpack_found = True\n        backpack_loc = room\n        break\ngo_to(start_loc)\nif backpack_found:\n    say(\"I found your blue backpack in the \" + backpack_loc)\nelse:\n    say(\"I couldn't find your blue backpack\")", "result": "Correct"}
{"type": "eval", "task": "Ask Arthur, Zichao, and Sadanand in their offices if the are up for lunch. If yes, tell them that we'll meet in the lobby in 5 minutes. Come back and tell me who all are joining for lunch.", "code": "start_loc = get_current_location()\nnames = [\"Arthur\", \"Zichao\", \"Sadanand\"]\nresponses = []\nfor name in names:\n    go_to(name + \"'s office\")\n    response = ask(name, \"Are you up for lunch?\", [\"Yes\", \"No\"])\n    if response == \"Yes\":\n        say(\"We'll meet in the lobby in 5 minutes\")\n    responses.append(response)\n    go_to(start_loc)\n\nsay(\"The people joining for lunch are: \" + \", \".join([name for name, response in zip(names, responses) if response == \"Yes\"]))", "result": "Correct"}
{"type": "eval", "task": "Go to every office and ask if they have any mail they'd like delivered. If so, ask them to put it in the basket. Finally come back here with all the mail.", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\nfor room in list_of_rooms:\n    if \"office\" not in room:\n        continue\n    go_to(room)\n    response = ask(\"Person\", \"Do you have any mail to be delivered?\", [\"Yes\", \"No\"])\n    if response == \"Yes\":\n        say(\"Please put it in my basket\")\ngo_to(start_loc)\nsay(\"I have collected all the mail\")", "result": "Correct"}
{"type": "eval", "task": "Ask Arthur, Zichao, and Sadanand in their offices if they are up for lunch. If yes, tell them that we'll meet in the lobby in 5 minutes. Come back and tell me who all are joining for lunch.", "code": "start_loc = get_current_location()\nlist_of_people = [\"Arthur\", \"Zichao\", \"Sadanand\"]\npeople_joining = []\nfor person in list_of_people:\n    go_to(person + \"'s office\")\n    response = ask(person, \"Are you up for lunch?\", [\"Yes\", \"No\"])\n    if response == \"Yes\":\n        say(\"We'll meet in the lobby in 5 minutes\")\n        people_joining.append(person)\ngo_to(start_loc)\nsay(\"The people joining for lunch are: \" + \", \".join(people_joining))", "result": "Correct"}
{"type": "eval", "task": "Ask Arthur, Zichao, and Sadanand in their offices if they are up for lunch. If yes, tell them that we'll meet in the lobby in 5 minutes. Come back and tell me who all are joining for lunch.", "code": "start_loc = get_current_location()\npeople_joining = []\n\ngo_to(\"Arthur's office\")\nresponse = ask(\"Arthur\", \"Are you up for lunch?\", [\"Yes\", \"No\"])\nif response == \"Yes\":\n    people_joining.append(\"Arthur\")\n    say(\"We'll meet in the lobby in 5 minutes\")\n\ngo_to(\"Zichao's office\")\nresponse = ask(\"Zichao\", \"Are you up for lunch?\", [\"Yes\", \"No\"])\nif response == \"Yes\":\n    people_joining.append(\"Zichao\")\n    say(\"We'll meet in the lobby in 5 minutes\")\n\ngo_to(\"Sadanand's office\")\nresponse = ask(\"Sadanand\", \"Are you up for lunch?\", [\"Yes\", \"No\"])\nif response == \"Yes\":\n    people_joining.append(\"Sadanand\")\n    say(\"We'll meet in the lobby in 5 minutes\")\n\ngo_to(start_loc)\nsay(\"The following people are joining for lunch: \" + \", \".join(people_joining))", "result": "Correct"}
{"type": "eval", "task": "Go to the elevator and wait until someone shows up. If they come bearing pizza, tell them to follow you, and then lead them to the conference room", "code": "start_loc = get_current_location()\ngo_to(\"elevator\")\nwhile True:\n    if is_in_room(\"person\") and is_in_room(\"pizza\"):\n        break\n    time.sleep(1)\nsay(\"Follow me\")\ngo_to(\"conference room\")", "result": "Correct"}
{"type": "eval", "task": "Go to Luisa and ask her if she'd like to have french toast. If she says yes, go tell Zichao to pick up the ingredients from the grocery store.", "code": "start_loc = get_current_location()\ngo_to(\"Luisa\")\nresponse = ask(\"Luisa\", \"Would you like to have french toast?\", [\"Yes\", \"No\"])\nif response == \"Yes\":\n    go_to(\"Zichao\")\n    say(\"Please pick up the ingredients for french toast from the grocery store\")\ngo_to(start_loc)", "result": "Correct"}
{"type": "eval", "task": "Go to Zarko's office and ask him how many persons he needs for help. Find the according number of persons from their offices to help him.", "code": "start_loc = get_current_location()\ngo_to(\"Zarko's office\")\nnum_needed = int(ask(\"Zarko\", \"How many persons do you need for help?\", [\"1\", \"2\", \"3\", \"4\", \"5\"]))\ngo_to(start_loc)\n\nall_rooms = get_all_rooms()\nnum_found = 0\nfor room in all_rooms:\n    if \"office\" in room and num_found < num_needed:\n        go_to(room)\n        if is_in_room(\"person\"):\n            say(\"Zarko needs your help\")\n            num_found += 1\n        go_to(start_loc)\n\nif num_found == num_needed:\n    say(\"Found \" + str(num_needed) + \" persons to help Zarko\")\nelse:\n    say(\"Could not find \" + str(num_needed) + \" persons to help Zarko\")", "result": "Correct, inefficient"}
{"type": "eval", "task": "Go to Zarko's office and ask him how many persons he needs for help. Ask folks in their offices if they could help him - until you find the required number of people.", "code": "start_loc = get_current_location()\ngo_to(\"Zarko's office\")\nnum_people_needed = int(ask(\"Zarko\", \"How many people do you need for help?\", [\"1\", \"2\", \"3\", \"4\", \"5\"]))\npeople_found = 0\nfor room in get_all_rooms():\n    if \"office\" not in room:\n        continue\n    go_to(room)\n    if is_in_room(\"person\"):\n        if ask(\"person\", \"Can you help Zarko?\", [\"Yes\", \"No\"]) == \"Yes\":\n            people_found += 1\n        if people_found == num_people_needed:\n            break\ngo_to(start_loc)", "result": "Correct"}
{"type": "eval", "task": "Go to Zarko's office and ask him how many persons he needs for help. Ask folks in their offices if they could help him - until you find the required number of people. Once done, go tell Zarko how many have agreed to help him.", "code": "start_loc = get_current_location()\ngo_to(\"Zarko's office\")\nnum_required = ask(\"Zarko\", \"How many persons do you need for help?\", [\"1\", \"2\", \"3\", \"4\", \"5\"])\nlist_of_rooms = get_all_rooms()\nnum_found = 0\nfor room in list_of_rooms:\n    if \"office\" not in room:\n        continue\n    go_to(room)\n    if is_in_room(\"person\"):\n        response = ask(\"Person\", \"Can you help Zarko?\", [\"Yes\", \"No\"])\n        if response == \"Yes\":\n            num_found += 1\n            if num_found == num_required:\n                break\ngo_to(start_loc)\nsay(\"Zarko, \" + num_found + \" people have agreed to help you\")", "result": "Correct"}
{"type": "eval", "task": "Go to Zarko's office and ask him how many persons he needs for help. Ask folks in their offices if they could help him - until you find the required number of people. Once done, go tell Zarko who all have agreed to help him.", "code": "start_loc = get_current_location()\ngo_to(\"Zarko's office\")\nnum_required = int(ask(\"Zarko\", \"How many persons do you need for help?\", [\"1\", \"2\", \"3\", \"4\", \"5\"]))\n\nlist_of_rooms = get_all_rooms()\nhelpers = []\nfor room in list_of_rooms:\n    go_to(room)\n    if is_in_room(\"person\") and len(helpers) < num_required:\n        response = ask(\"person\", \"Can you help Zarko?\", [\"Yes\", \"No\"])\n        if response == \"Yes\":\n            helpers.append(room)\n            if len(helpers) == num_required:\n                break\n\ngo_to(\"Zarko's office\")\nsay(\"These people have agreed to help you: \" + \", \".join(helpers))\ngo_to(start_loc)", "result": "Incorrect"}
{"type": "eval", "task": "Check if any conference room is free.", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\nfree_room_found = False\nfree_room_name = None\nfor room in list_of_rooms:\n    if \"conference\" not in room:\n        continue\n    go_to(room)\n    if is_in_room(\"person\") == False:\n        free_room_found = True\n        free_room_name = room\n        break\ngo_to(start_loc)\nif free_room_found:\n    say(\"The \" + free_room_name + \" is free\")\nelse:\n    say(\"There is no free conference room\")", "result": "Correct"}
{"type": "eval", "task": "Make a list of common candy options, and ask every office occupant which kind they'd like. Come back and tell me how many of each type we need to buy.", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\ncandies = [\"Chocolate\", \"Gummies\", \"Licorice\"]\ncandies_count = {candy : 0 for candy in candies}\nfor room in list_of_rooms:\n    if \"office\" not in room:\n        continue\n    go_to(room)\n    if is_in_room(\"person\"):\n        response = ask(\"Person\", \"Which kind of candy would you like?\", candies)\n        candies_count[response] += 1\ngo_to(start_loc)\nfor candy, count in candies_count.items():\n    say(\"We need to buy \" + str(count) + \" \" + candy)", "result": "Correct"}
{"type": "eval", "task": "Go to the elevator and for every person that shows up, ask them if they are here for the tour. If yes, welcome them to UTCS, and guide them to the conference room.", "code": "start_loc = get_current_location()\ngo_to(\"elevator\")\nwhile True:\n    if is_in_room(\"person\"):\n        response = ask(\"person\", \"Are you here for the tour?\", [\"Yes\", \"No\"])\n        if response == \"Yes\":\n            say(\"Welcome to UTCS!\")\n            go_to(\"conference room\")\n    time.sleep(1)\ngo_to(start_loc)", "result": "Correct"}
{"type": "eval", "task": "Make a list of five common candy options. Ask every office occupant which candy they'd like, and finally come back and tell me how many of each we need to buy.", "code": "start_loc = get_current_location()\ncandies = [\"Chocolate\", \"Lollipops\", \"Gummies\", \"Sour candies\", \"Caramel\"]\ncandies_count = {candy: 0 for candy in candies}\nall_rooms = get_all_rooms()\nfor room in all_rooms:\n    if \"office\" not in room:\n        continue\n    go_to(room)\n    if is_in_room(\"person\"):\n        response = ask(\"Person\", \"Which candy would you like?\", candies)\n        candies_count[response] += 1\ngo_to(start_loc)\nfor candy, count in candies_count.items():\n    say(f\"We need to buy {count} of {candy}\")", "result": "Correct"}
{"type": "eval", "task": "Ask every office occupant which of the following candy options they'd like: snickers, kitkat, twix. Come back and tell me how many of each we need to buy.", "code": "list_of_rooms = get_all_rooms()\nstart_loc = get_current_location()\nsnickers_count = 0\nkitkat_count = 0\ntwix_count = 0\n\nfor room in list_of_rooms:\n    if \"office\" not in room:\n        continue\n    go_to(room)\n    response = ask(\"occupant\", \"Which candy would you like?\", [\"Snickers\", \"Kitkat\", \"Twix\"])\n    if response == \"Snickers\":\n        snickers_count += 1\n    elif response == \"Kitkat\":\n        kitkat_count += 1\n    elif response == \"Twix\":\n        twix_count += 1\n\ngo_to(start_loc)\nsay(\"We need to buy \" + str(snickers_count) + \" Snickers, \" + str(kitkat_count) + \" Kitkats, and \" + str(twix_count) + \" Twix\")", "result": "Correct"}
